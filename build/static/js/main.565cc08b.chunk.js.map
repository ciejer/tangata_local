{"version":3,"sources":["services/postLoginUser.js","services/postRegisterUser.js","services/refreshMetadata.js","services/getUserConfig.js","components/Login.js","services/postUserConfig.js","services/postFileUpload.js","services/getDBTCloudAccounts.js","services/getDBTCloudJobs.js","components/Config.js","components/EditJoinPanel.js","components/Models.js","components/AutoComplete.js","components/Conditions.js","components/Selects.js","services/getModelJson.js","components/SQLPanel.js","components/ModelBuilder.js","services/getModelSearch.js","components/NavBar.js","components/Lineage.js","components/Catalog.js","services/getModel.js","services/getSSH.js","services/getGenerateSSH.js","services/getOpenGit.js","services/getCheckDBTConnection.js","App.js","reportWebVitals.js","index.js"],"names":["loginBody","a","fetch","method","headers","body","JSON","stringify","response","json","registerBody","refreshMetadata","user","Authorization","token","getUserConfig","Login","props","useState","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","class","className","Tabs","defaultActiveKey","id","Tab","eventKey","title","Form","onSubmit","event","preventDefault","postLoginUser","then","setUser","sessionStorage","setItem","setUserConfig","Group","size","controlId","Label","Control","autoFocus","type","value","onChange","e","target","Button","block","disabled","length","postRegisterUser","postUserConfig","newConfig","configToSend","_id","postFileUpload","uploadFormData","uploadType","account","Config","copySuccess","setCopySuccess","dbtAccounts","setdbtAccounts","dbtDocsJobs","setdbtDocsJobs","license","setLicense","sshKeyRef","useRef","dbtCloudKey","dbtAccountRef","dbtJobRef","updateConfigValue","newValue","updatedField","userConfig","uploadFile","uploadedFiles","uploadData","FormData","append","ok","toastSender","text","responseText","loadDBTAccounts","getDBTCloudAccounts","returnedDBTCloudAccounts","selectAccount","getDBTCloudJobs","current","returnedDBTCloudJobs","resText","appState","console","log","firstname","lastname","variant","onClick","stopPropagation","setSSHKey","prompt","generateSSHKey","as","rows","sshKey","ref","document","queryCommandSupported","select","execCommand","focus","Text","muted","href","gitrepo","openGitConnection","Check","custom","inline","label","checked","dbtmethod","File","required","name","files","feedbackTooltip","checkDBTConnection","placeholder","newKey","keyFile","Blob","updateDBTCloudKey","map","index","job","updateDBTCloudConfig","children","EditJoinPanel","model","modelIndex","saveEditedModel","models","toggleJoinModal","showJoinModal","newModel","setModelState","useForm","register","handleSubmit","handleClose","joinConditionRow","condition","showRemove","fullName","joinConditions","filter","conditions","removeCondition","listJoinConditions","listModelColumns","controlName","listModel","columns","tempListModelColumns","column","columnOption","parse","Modal","show","onHide","Header","closeButton","Title","Body","Container","data","newCondition","condition1Field","conditionOperator","condition2Field","concat","Footer","Models","modelDragEnd","showColumns","highlightedColumns","openContextMenu","contextMenuOpen","editSelect","contextMenu","setContextMenu","display","modelDraw","handleClick","columnRows","columnRowsOutput","pageX","pageY","highlightThisColumn","highlightedColumnIndex","onContextMenu","data-model","data-column","columnRow","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","description","modelsDraw","onDragEnd","droppableId","droppableProps","Overlay","placement","Table","bordered","selectToAdd","parentNode","dataset","contextMenuDisplay","AutocompleteTextField","isTrigger","bind","getMatch","handleChange","handleKeyDown","handleResize","handleSelection","updateCaretPosition","updateHelper","resetHelper","renderAutocompleteList","state","helperVisible","left","matchLength","matchStart","options","fullOptions","selection","top","recentValue","defaultValue","enableSpaceRemovers","refInput","createRef","window","addEventListener","this","prevProps","caret","removeEventListener","str","providedOptions","trigger","matchAny","regex","re","RegExp","triggerLength","triggerMatch","match","i","substring","triggerIdx","newFullOptions","j","matchedSlug","slug","idx","toLowerCase","indexOf","matchIdx","push","setState","substr","spaceRemovers","spacer","old","getInputSelection","end","Math","max","slice","onKeyDown","passThroughEnter","keyCode","onSelect","part1","part2","setCaretPosition","input","caretPos","getCaretCoordinates","rect","getBoundingClientRect","offsetTop","min","offsetLeft","width","minChars","onRequestOptions","requestOnlyIfNoOptions","maxOptions","offsetX","offsetY","optionNumber","helperOptions","val","highlightStart","onMouseEnter","style","Component","onBlur","rest","stateValue","propagated","Object","assign","keys","constructor","propTypes","forEach","k","React","defaultProps","Conditions","editCondition","editConditionMenu","setEditConditionMenu","conditionRow","md","conditionList","conditionIndex","striped","showConditions","firstChild","conditionToRemove","handleModalClose","menuOpen","conditionCriteria","tempModelColumns","columnIndex","modelColumns","modelFullColumns","conditionToEdit","editConditionMenuDisplay","Selects","selects","highlightColumn","outputModel","editOutputModel","editingField","setEditingField","editingDescription","setEditingDescription","updateColumnAlias","updateColumnDescription","showField","selectsIndex","alias","undefined","data-selectindex","showDescription","highlightColumns","col","tempColumnsToHighlight","inputColumns","onMouseLeave","selectToEdit","selectindex","parseInt","selectToRemove","modelJsonFilename","conditionConcat","tempConditionConcat","selectStatement","tempSelectStatement","selectLine","definition","columnDefinition","selectIndex","fromStatement","tempFromStatement","fromSyntax","joinIndex","whereStatement","tempWhereStatement","SQLPanel","searchString","NavBar","addModel","logState","openCatalog","openSQLPanel","openModelBuilder","openConfig","selectModel","searchDropdown","setSearchDropdown","searchResults","setSearchResults","searchBox","reactState","searchRow","searchResult","nodeID","selectSearchResult","modelName","modelDescription","columnName","columnDescription","tagName","getSearchResults","trim","getModelSearch","error","allSearchRows","results","Navbar","expand","Brand","Toggle","aria-controls","Collapse","role","preventSearchClicks","onFocus","aria-label","actionText","prRequestBody","createPR","process","removeItem","dagreGraph","dagre","graphlib","Graph","setDefaultEdgeLabel","nodeWidth","LayoutFlow","layoutedElements","elements","direction","setGraph","rankdir","el","isNode","setNode","height","setEdge","source","layout","nodeWithPosition","node","targetPosition","sourcePosition","position","x","random","y","nodeHeight","getLayoutedElements","lineageArray","lineage","connectionLineType","onLoad","reactFlowInstance","fitView","onNodeContextMenu","Catalog","catalogDescription","catalogModel","catalogDependsOn","depends_on","nodes","split","pop","macros","catalogDependencies","referenced_by","nodeContributors","all_contributors","nodeHistory","gitRepo","gitExtract","scope","all_commits","gitLink","hash","authorDate","authorDateRel","authorName","subject","catalogColumns","entries","tests","html","updateMetadataModel","data-metadatafield","data-columnName","key","testIndex","severity","related_model","related_field","metadataBody","metadatafield","yaml_path","model_path","innerText","item","columnname","lineageModal","LineageModal","setShow","showCreatedBy","model_type","created_by","created_relative_date","tags","join","materialization","minWidth","database","schema","row_count","Number","toLocaleString","Accordion","Card","raw_sql","compiled_sql","modelNodeId","App","modelBuilder","userMessages","handleAllClicks","nodeId","getModel","openState","newUser","newUserConfig","getSSH","getGenerateSSH","getOpenGit","getCheckDBTConnection","toast","success","autoClose","message","toastType","clearUserMessages","location","port","getItem","hostVersion","socket","io","auth","cb","on","send","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.565cc08b.chunk.js","sourcesContent":["export async function postLoginUser(loginBody) {\r\n    // console.log(loginBody);\r\n    const response = await fetch('/api/v1/users/login', {\r\n        method: 'POST', \r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(loginBody)\r\n    });\r\n    return await response.json();\r\n}","export async function postRegisterUser(registerBody) {\r\n    // console.log(registerBody);\r\n    const response = await fetch('/api/v1/users', {\r\n        method: 'POST', \r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(registerBody)\r\n    });\r\n    return await response.json();\r\n}","export async function refreshMetadata(user) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/refresh_metadata', {\r\n        method: 'POST', \r\n        headers: {\r\n                Authorization: \"Token \" + user.token\r\n            }\r\n    });\r\n    return await response;\r\n}","export async function getUserConfig(user) {\r\n    const response = await fetch('/api/v1/get_user_config/', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Tabs, Tab, TabContainer} from \"react-bootstrap\";\r\nimport { postLoginUser } from \"../services/postLoginUser\";\r\nimport { postRegisterUser } from \"../services/postRegisterUser\";\r\nimport { refreshMetadata } from \"../services/refreshMetadata\";\r\nimport { getUserConfig } from \"../services/getUserConfig\";\r\n// import \"./Login.css\";\r\n\r\nexport default function Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n\r\n  function validateLoginForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n  function validateRegisterForm() {\r\n    return email.length > 0 && password.length > 0 && firstName.length > 0;\r\n  }\r\n\r\n  function handleLogin(event) {\r\n    event.preventDefault(); //stop the click catcher\r\n    var loginBody = {\"user\": {\"email\": email, \"password\": password}};\r\n    postLoginUser(loginBody)\r\n        .then(response => {\r\n            props.setUser(response);\r\n            sessionStorage.setItem(\"user\", JSON.stringify(response));\r\n            refreshMetadata(response.user);\r\n            getUserConfig(response.user)\r\n                .then(response => {\r\n                    props.setUserConfig(response.user);\r\n                }\r\n            );\r\n        }\r\n    );\r\n    \r\n  }\r\n\r\n  function handleRegister(event) {\r\n    event.preventDefault(); //stop the click catcher\r\n    var registerBody = {\"user\": {\"email\": email, \"password\": password, \"config\": {\"firstname\": firstName, \"lastname\": lastName}}};\r\n    postRegisterUser(registerBody)\r\n        .then(response => {\r\n            props.setUser(response);\r\n            sessionStorage.setItem(\"user\", JSON.stringify(response));\r\n            refreshMetadata(response.user);\r\n            getUserConfig(response.user)\r\n                .then(response => {\r\n                    props.setUserConfig(response.user);\r\n                }\r\n            );\r\n        }\r\n    );\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n    <nav class=\"navbar-dark bg-brand position-fixed w-100 z-100 navbar navbar-expand-xl navbar-light\"><div class=\"navbar-brand\">TĀNGATA</div></nav>\r\n    <div className=\"Login\">\r\n      <Tabs defaultActiveKey=\"login\" id=\"loginOrRegister\">\r\n        <Tab eventKey=\"login\" title=\"Login\">\r\n          <Form onSubmit={handleLogin}>\r\n            <Form.Group size=\"lg\" controlId=\"loginEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"loginPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateLoginForm()}>\r\n              Login\r\n            </Button>\r\n          </Form>\r\n        </Tab>\r\n        <Tab eventKey=\"register\" title=\"Sign Up\">\r\n          <Form onSubmit={handleRegister}>\r\n            <Form.Group size=\"lg\" controlId=\"registerEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"registerPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"firstname\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"lastname\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateRegisterForm()}>\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Tab>\r\n      </Tabs>\r\n      <div className=\"container md-3 text-center col-md-5 mt-3\">\r\n        <blockquote>\r\n          <p>“Hutia te rito o te harakeke<br/>\r\n          Kei whea to kōmako e kō?<br/>\r\n          Ki mai ki ahau<br/>\r\n          He aha te mea nui o te Ao?<br/>\r\n          Maku e kī atu,<br/>\r\n          <b>he tāngata, he tāngata, he tāngata</b>...\"</p>\r\n        </blockquote>\r\n        <p>\r\n          If the heart of the harakeke <em>(flax plant)</em> was removed,<br/>\r\n          where would the bellbird sing?<br/>\r\n          If I was asked what was the most important thing in the world<br/>\r\n          I would be compelled to reply,<br/>\r\n          it is people, it is people, it is people.<br/>\r\n          <em>Ngaroto</em>\r\n        </p>\r\n        <p>\r\n          In te ao Māori (the Māori world view), Tāngata (<em>TAHNG-uh-tuh</em>) describes something much larger than an addressed group of people: it describes <em>whakapapa</em>, the surrounding network of ancestors and descendants we are connected to.<br/>\r\n          With this work we intend to follow these principles to put our people first: not just the data &amp; analytics engineers, but those around our workplaces that know the deep details of how our businesses actually run.<br/>\r\n          These people are the lifeblood of what we do - and to keep moving forward, we need their context far more than ever.\r\n        </p>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}","export async function postUserConfig(user, newConfig) {\r\n    // console.log(newConfig);\r\n    var configToSend = {...newConfig};\r\n    delete configToSend._id;\r\n    delete configToSend.email;\r\n    delete configToSend.token;\r\n    const response = await fetch('/api/v1/set_user_config', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: \"Token \" + user.token},\r\n        body: JSON.stringify(configToSend)\r\n    });\r\n    return await response;\r\n}","export async function postFileUpload(uploadFormData, uploadType, user) {\r\n    const response = await fetch('/api/v1/file_upload', {\r\n        method: 'POST', \r\n        headers: {\r\n            'Authorization': \"Token \" + user.token,\r\n            'UploadType': uploadType\r\n        },\r\n        body: uploadFormData\r\n    });\r\n    return await response;\r\n}","export async function getDBTCloudAccounts(user) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/get_dbt_cloud_accounts', {\r\n        method: 'GET', \r\n        headers: {\r\n                Authorization: \"Token \" + user.token\r\n            }\r\n    })\r\n    return await response;\r\n}","export async function getDBTCloudJobs(user, account) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/get_dbt_cloud_jobs/' + account, {\r\n        method: 'GET', \r\n        headers: {\r\n                Authorization: \"Token \" + user.token\r\n            }\r\n    })\r\n    return await response;\r\n}","import {Button, Form, Tabs, Tab, TabContainer } from 'react-bootstrap';\r\nimport React, { useRef, useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { postUserConfig } from \"../services/postUserConfig\";\r\nimport { postFileUpload } from \"../services/postFileUpload\";\r\nimport { refreshMetadata } from \"../services/refreshMetadata\";\r\nimport { getDBTCloudAccounts } from \"../services/getDBTCloudAccounts\";\r\nimport { getDBTCloudJobs } from \"../services/getDBTCloudJobs\";\r\nexport default function Config(props) {\r\n  const [copySuccess, setCopySuccess] = useState('');\r\n  const [dbtMethod, setdbtMethod] = useState('LiveDB');\r\n  const [dbtAccounts, setdbtAccounts] = useState({});\r\n  const [dbtDocsJobs, setdbtDocsJobs] = useState({});\r\n  const [license, setLicense] = useState({});\r\n  const sshKeyRef = useRef(null);\r\n  const dbtCloudKey = useRef(null);\r\n  const dbtAccountRef = useRef(null);\r\n  const dbtJobRef = useRef(null);\r\n  \r\n  function copyToClipboard(e) {\r\n    sshKeyRef.current.select();\r\n    document.execCommand('copy');\r\n    // This is just personal preference.\r\n    // I prefer to not show the whole text area selected.\r\n    e.target.focus();\r\n    setCopySuccess('Copied!');\r\n  };\r\n\r\n\r\n  // console.log(props.userConfig);\r\n  \r\n  function updateConfigValue(newValue, updatedField) {\r\n    var newConfig = {...props.userConfig};\r\n    newConfig[updatedField] = newValue;\r\n    props.setUserConfig(newConfig);\r\n    postUserConfig(props.user, newConfig);\r\n  }\r\n\r\n  function uploadFile(uploadedFiles, uploadType) {\r\n    // console.log(uploadedFiles[0]);\r\n    if(uploadedFiles.length>0) {\r\n      const uploadData = new FormData();\r\n      uploadData.append('file', uploadedFiles[0]);\r\n      postFileUpload(uploadData, uploadType, props.user)\r\n      .then(response=> {\r\n        // console.log(response);\r\n        if(response.ok === true) {\r\n          // console.log(\"Success\");\r\n          props.toastSender(\"\" + uploadType + \" Upload Successful.\",\"success\");\r\n        } else {\r\n          response.text()\r\n          .then(responseText=> {\r\n            // console.log(response);\r\n            // console.log(responseText);\r\n            props.toastSender(\"\" + uploadType + \" Upload Failed: \\n\" + responseText,\"error\");\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function updateDBTCloudKey(newKey) {\r\n    if(newKey.length>0) {\r\n      const uploadData = new FormData();\r\n      var keyFile = new Blob([newKey], {type: 'text/plain'});\r\n        uploadData.append('file', keyFile);\r\n        postFileUpload(uploadData, 'dbt_ Cloud Key', props.user)\r\n        .then(response=> {\r\n          // console.log(response);\r\n          if(response.ok === true) {\r\n            // console.log(\"Success\");\r\n            props.toastSender(\"dbt_ Cloud Key Upload Successful.\",\"success\");\r\n          } else {\r\n            response.text()\r\n            .then(responseText=> {\r\n              // console.log(response);\r\n              // console.log(responseText);\r\n              props.toastSender(\"dbt_ Cloud Key Upload Failed: \\n\" + responseText,\"error\");\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  function updateDBTCloudConfig() { //doing it manually rather than updateConfigValue because it's two at once - saving one without the other breaks existing config\r\n    var newConfig = {...props.userConfig};\r\n    newConfig[\"dbt_cloud_account\"] = dbtAccountRef.current.value;\r\n    newConfig[\"dbt_cloud_job\"] = dbtJobRef.current.value;\r\n    postUserConfig(props.user, newConfig);\r\n    props.setUserConfig(newConfig);\r\n  }\r\n\r\n  function loadDBTAccounts() {\r\n    getDBTCloudAccounts(props.user)\r\n    .then(response=> response.json())\r\n    .then(returnedDBTCloudAccounts => {\r\n      // console.log(returnedDBTCloudAccounts);\r\n      setdbtAccounts(returnedDBTCloudAccounts);\r\n      selectAccount();\r\n    })\r\n  }\r\n\r\n  function selectAccount() {\r\n    // console.log(\"Account Selected\")\r\n    // console.log(dbtAccountRef.current.value);\r\n    getDBTCloudJobs(props.user, dbtAccountRef.current.value)\r\n    .then(response=> response.json())\r\n    .then(returnedDBTCloudJobs => {\r\n      // console.log(returnedDBTCloudJobs);\r\n      setdbtDocsJobs(returnedDBTCloudJobs);\r\n    });\r\n  }\r\n\r\n  function listDBTDocsJobs() {\r\n    // console.log(dbtDocsJobs);\r\n    return dbtDocsJobs.map((job, index) => {return(<option key={\"dbt job \"+index} value={job.id}>{job.id}: {job.name}</option>)})\r\n  }\r\n  function dbtDocsJobsSelect() {\r\n    if(dbtDocsJobs.length > 0) {\r\n      return(\r\n        <>\r\n          <Form.Group size=\"lg\" controlId=\"dbt_cloud_jobs\">\r\n            <Form.Label>dbt_ Cloud Jobs</Form.Label>\r\n            <Form.Control\r\n              autoFocus\r\n              as=\"select\"\r\n              custom\r\n              ref={dbtJobRef}\r\n            >\r\n              {listDBTDocsJobs()}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"m-1\"\r\n            onClick={(e) => {e.stopPropagation(); updateDBTCloudConfig();}}\r\n          >\r\n            Save\r\n          </Button>\r\n        </>\r\n      );\r\n    } else return null;\r\n  }\r\n\r\n  function listDBTAccounts() {\r\n    return dbtAccounts.map((account, index) => {return(<option key={\"dbt account \"+index} value={account.id}>{account.id}: {account.name}</option>)})\r\n  }\r\n  function dbtAccountsSelect() {\r\n    if(dbtAccounts.length > 0) {\r\n      return(\r\n        <Form.Group size=\"lg\" controlId=\"dbt_cloud_accounts\">\r\n          <Form.Label>dbt_ Cloud Accounts</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            as=\"select\"\r\n            custom\r\n            ref={dbtAccountRef}\r\n            onChange={e => selectAccount()}\r\n          >\r\n            {listDBTAccounts()}\r\n          </Form.Control>\r\n        </Form.Group>);\r\n    } else return null;\r\n  }\r\n  \r\n\r\n  const getLicense = () => {\r\n    fetch('/license.md', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/text',\r\n        'Content-Type': 'application/text',\r\n      }\r\n    })\r\n    .then(response=> response.text())\r\n    .then(resText => {\r\n      setLicense(resText);\r\n    });\r\n}\r\ngetLicense();\r\n\r\n  if(props.appState === \"Config\") {\r\n    console.log(license);\r\n    return (\r\n      <div className=\"container mt-3\">\r\n        <h1>Config</h1>\r\n        <Tabs defaultActiveKey=\"userdetails\" id=\"config\">\r\n          <Tab eventKey=\"userdetails\" title=\"User Details\" className=\"border-right border-left border-bottom p-3\">\r\n            <Form>\r\n              {/* <Form.Group size=\"lg\" controlId=\"loginEmail\"> //let's not change email addresses for now.\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  autoFocus\r\n                  type=\"email\"\r\n                  value={props.user.email}\r\n                  onChange={(e) => updateConfigValue(e.target.value, \"email\")}\r\n                />\r\n              </Form.Group> */}\r\n              <Form.Group size=\"lg\" controlId=\"firstname\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control\r\n                  autoFocus\r\n                  type=\"text\"\r\n                  value={props.userConfig.firstname}\r\n                  onChange={(e) => updateConfigValue(e.target.value, \"firstname\")}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group size=\"lg\" controlId=\"lastname\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control\r\n                  autoFocus\r\n                  type=\"text\"\r\n                  value={props.userConfig.lastname}\r\n                  onChange={(e) => updateConfigValue(e.target.value, \"lastname\")}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Tab>\r\n          <Tab eventKey=\"gitConfig\" title=\"Git Config\" className=\"border-right border-left border-bottom p-3\">\r\n            <Form>\r\n              <Form.Group size=\"lg\" controlId=\"gitSSHKey\">\r\n                <Form.Label>SSH Key</Form.Label>\r\n                <br/>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={(e) => {e.stopPropagation(); props.setSSHKey()}}\r\n                  className=\"m-1\"\r\n                >\r\n                  Get current SSH public key\r\n                </Button>\r\n                <Button\r\n                  variant=\"warning\"\r\n                  className=\"m-1\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    let checkIntent = prompt(\"This will delete any current SSH keys. Please type 'New Key' to continue\");\r\n                    if(checkIntent === \"New Key\") {\r\n                      props.generateSSHKey()\r\n                    }\r\n                  }}\r\n                >\r\n                  Create new SSH Key\r\n                </Button>\r\n                <Form.Control\r\n                  autoFocus\r\n                  as=\"textarea\"\r\n                  rows={2}\r\n                  value={props.sshKey}\r\n                  ref={sshKeyRef}\r\n                  // onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                {\r\n                /* Logical shortcut for only displaying the \r\n                    button if the copy command exists */\r\n                document.queryCommandSupported('copy') &&\r\n                  <div>\r\n                    <Button variant=\"primary\" onClick={copyToClipboard} className=\"m-1\">Copy</Button> \r\n                    {copySuccess}\r\n                  </div>\r\n                }\r\n                <Form.Text id=\"gitSSHHelpBlock\" muted>\r\n                  Where to add your key:<br/>\r\n                  <a href=\"https://github.com/settings/ssh/new\">GitHub SSH Keys - Add New</a><br/>\r\n                  <a href=\"https://gitlab.com/profile/keys\">GitLab SSH Keys - Add an SSH key</a><br/>\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Form.Group size=\"lg\" controlId=\"gitrepo\">\r\n                <Form.Label>Git SSH URL</Form.Label>\r\n                <Form.Control\r\n                  autoFocus\r\n                  type=\"text\"\r\n                  value={props.userConfig.gitrepo || ''}\r\n                  onChange={(e) => updateConfigValue(e.target.value, \"gitrepo\")}\r\n                />\r\n                <Form.Text id=\"gitSSHHelpBlock\" muted>\r\n                  Examples:<br/>\r\n                  git@github.com:yourname/yourproject.git<br/>\r\n                  git@gitlab.com:yourname/yourproject.git\r\n                </Form.Text>\r\n              </Form.Group>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  className=\"m-1\"\r\n                  onClick={(e) => {e.stopPropagation(); props.openGitConnection()}}\r\n                >\r\n                  Clone Git Repository\r\n                </Button>\r\n            </Form>\r\n          </Tab>\r\n          <Tab eventKey=\"dbtConfig\" title=\"DBT Config\" className=\"border-right border-left border-bottom p-3\">\r\n            <Form>\r\n              <Form.Group size=\"lg\" controlId=\"dbtConfigMethod\">\r\n                <Form.Label>dbt_ Config Method</Form.Label>\r\n                <div key={'custom-inline-radio'} className=\"mb-3\">\r\n                  <Form.Check\r\n                    custom\r\n                    inline\r\n                    label=\"Live Database Connection\"\r\n                    type='radio'\r\n                    id={'LiveDB'}\r\n                    checked={props.userConfig.dbtmethod===\"LiveDB\"}\r\n                    onClick={(e) => {e.stopPropagation(); updateConfigValue(\"LiveDB\", \"dbtmethod\")}}\r\n                  />\r\n                  <Form.Check\r\n                    custom\r\n                    inline\r\n                    label=\"Upload Compiled Metadata\"\r\n                    type='radio'\r\n                    id={'UploadMetadata'}\r\n                    checked={props.userConfig.dbtmethod===\"UploadMetadata\"}\r\n                    onClick={(e) => {e.stopPropagation(); updateConfigValue(\"UploadMetadata\", \"dbtmethod\")}}\r\n                  />\r\n                  <Form.Check\r\n                    custom\r\n                    inline\r\n                    label=\"dbt_ Cloud API\"\r\n                    type='radio'\r\n                    id={'Cloud'}\r\n                    checked={props.userConfig.dbtmethod===\"Cloud\"}\r\n                    onClick={(e) => {e.stopPropagation(); updateConfigValue(\"Cloud\", \"dbtmethod\")}}\r\n                  />\r\n                </div>\r\n              </Form.Group>\r\n              <hr/>\r\n              <div className={props.userConfig.dbtmethod===\"LiveDB\"?null:\"d-none\"}>\r\n                <Form.Group size=\"lg\" controlId=\"uploadProfilesYML\">\r\n                  <Form.Label>Upload Profiles.YML</Form.Label>\r\n                  <Form.File\r\n                    className=\"position-relative\"\r\n                    required\r\n                    name=\"profilesYMLUpload\"\r\n                    onChange={(e) => uploadFile(e.target.files, \"ProfilesYML\") }\r\n                    // isInvalid={!!errors.file}\r\n                    // feedback={errors.file}\r\n                    id=\"profilesYMLUpload\"\r\n                    feedbackTooltip\r\n                  />\r\n                  <Form.Text id=\"profilesYMLHelpBlock\" muted>\r\n                    To connect to your database, DBT requires a profiles.yml file. See <a href=\"https://docs.getdbt.com/dbt-cli/configure-your-profile\">the dbt_ docs</a> for setup details.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  className=\"m-1\"\r\n                  onClick={(e) => {e.stopPropagation(); props.checkDBTConnection()}}\r\n                >\r\n                  Check DBT Connection\r\n                </Button>\r\n              </div>\r\n              <div className={props.userConfig.dbtmethod===\"UploadMetadata\"?null:\"d-none\"}>\r\n                <p><i>To run without connecting to your database, the catalog requires metadata from dbt_.<br/>\r\n                Run <code>dbt docs generate</code> in your dbt_ project, and upload the Manifest and Catalog from /target.</i></p>\r\n                <p><i>To automate this upload, download <code>tangata_refresh.py</code> from the Tangata git repository, and run it in the root of your project.</i></p> \r\n                <Form.Group size=\"lg\" controlId=\"uploadManifestJSON\">\r\n                  <Form.Label>Upload manifest.json</Form.Label>\r\n                  <Form.File\r\n                    className=\"position-relative\"\r\n                    required\r\n                    name=\"manifestJSONUpload\"\r\n                    onChange={(e) => uploadFile(e.target.files, \"ManifestJSON\") }\r\n                    // isInvalid={!!errors.file}\r\n                    // feedback={errors.file}\r\n                    id=\"manifestJSONUpload\"\r\n                    feedbackTooltip\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"uploadCatalogJSON\">\r\n                  <Form.Label>Upload catalog.json</Form.Label>\r\n                  <Form.File\r\n                    className=\"position-relative\"\r\n                    required\r\n                    name=\"catalogJSONUpload\"\r\n                    onChange={(e) => uploadFile(e.target.files, \"CatalogJSON\") }\r\n                    // isInvalid={!!errors.file}\r\n                    // feedback={errors.file}\r\n                    id=\"catalogJSONUpload\"\r\n                    feedbackTooltip\r\n                  />\r\n                </Form.Group>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  className=\"m-1\"\r\n                  onClick={(e) => {e.stopPropagation(); refreshMetadata(props.user);}}\r\n                >\r\n                  Load Metadata\r\n                </Button>\r\n              </div>\r\n              <div className={props.userConfig.dbtmethod===\"Cloud\"?null:\"d-none\"}>\r\n                <Form.Group size=\"lg\" controlId=\"firstname\">\r\n                  <Form.Label>dbt_ Cloud API Key</Form.Label>\r\n                  <Form.Control\r\n                    autoFocus\r\n                    type=\"text\"\r\n                    placeholder=\"Change dbt_ Cloud Key\"\r\n                    ref={dbtCloudKey}\r\n                  />\r\n                </Form.Group>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  className=\"m-1\"\r\n                  onClick={(e) => {e.stopPropagation(); updateDBTCloudKey(dbtCloudKey.current.value); loadDBTAccounts();}}\r\n                >Load dbt_ Cloud Accounts</Button>\r\n                {dbtAccountsSelect()}\r\n                {dbtDocsJobsSelect()}\r\n              </div>\r\n            </Form>\r\n          </Tab>\r\n          <Tab eventKey=\"license\" title=\"License\" className=\"border-right border-left border-bottom p-3\">\r\n            <ReactMarkdown children={license} />\r\n          </Tab>\r\n          {/* <Tab eventKey=\"password\" title=\"Change Password\" className=\"border-right border-left border-bottom p-3\">\r\n          <Form>\r\n              <Form.Group size=\"lg\" controlId=\"loginPassword\">\r\n                <Form.Label>Current Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  // onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group size=\"lg\" controlId=\"newPassword\">\r\n                <Form.Label>New Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  // onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group size=\"lg\" controlId=\"repeatNewPassword\">\r\n                <Form.Label>Repeat New Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  // onChange={(e) => setPassword(e.target.value)}\r\n                />`\r\n              </Form.Group>\r\n            </Form>\r\n          </Tab> */}\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  } else {\r\n    return(\"\");\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport {Modal, Button, Form, Container} from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport function EditJoinPanel( {model, modelIndex, saveEditedModel, models, toggleJoinModal, showJoinModal}) {\r\n  const [newModel, setModelState] = useState(model);\r\n  const { register, handleSubmit } = useForm();\r\n  if(modelIndex===0) return null;\r\n  // console.log(\"Start of join panel debug\");\r\n  // console.log(showJoinModal);\r\n  // console.log(models);\r\n  // console.log(modelIndex);\r\n  // console.log(model);\r\n  // console.log(newModel);\r\n\r\n    const handleClose = () => toggleJoinModal(-1);\r\n    const handleShow = () => {\r\n      setModelState(JSON.parse(JSON.stringify(model)));\r\n      toggleJoinModal(modelIndex);\r\n    }\r\n\r\n    const handleSaveAndClose = () => {\r\n      // TODO: Create join output columns\r\n      saveEditedModel(model, newModel);\r\n      handleClose();\r\n    }\r\n\r\n    // new join condition submit\r\n    const onSubmit = (data) => {\r\n      var newCondition = (\r\n        {\r\n          \"conditionField1\": {\r\n            \"model\": model.name,\r\n            \"column\": data.condition1Field\r\n          },\r\n          \"conditionOperator\": data.conditionOperator,\r\n          \"conditionField2\": {\r\n            \"model\": models.response.models[modelIndex-1].name,\r\n            \"column\": data.condition2Field\r\n          },\r\n          \"fullName\": model.name+\".\"+data.condition1Field+\" \"+data.conditionOperator+\" \"+models.response.models[modelIndex-1].name+\".\"+data.condition2Field\r\n        }\r\n        );\r\n\r\n      // saveEditedJoin(join, newJoin);\r\n      setModelState({...newModel, \"joinConditions\": newModel.joinConditions.concat(newCondition)})\r\n    }\r\n\r\n    const removeCondition = (condition) => {\r\n      setModelState({...newModel, \"joinConditions\": newModel.joinConditions.filter(conditions => conditions !== condition)});\r\n    }\r\n\r\n\r\n    const joinConditionRow = (condition, index, showRemove) => { // row per join condition\r\n      if(showRemove===false) {\r\n        return (\r\n          <tr className=\"row\" key={\"joinCondition_\" + index}>\r\n            <td className=\"col w-100\">\r\n              {condition.fullName}\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n      return(\r\n        <tr key={\"joinCondition_\" + index}>\r\n          <td className=\"p-2\">\r\n            {condition.fullName}\r\n          </td>\r\n          <td className=\"w-md-auto p-2\">\r\n            <Button variant=\"secondary\" onClick={() => removeCondition(condition)}>\r\n              Remove\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    const listJoinConditions = (showRemove) => newModel.joinConditions.map((condition, index) => {\r\n      return joinConditionRow(condition, index, showRemove);\r\n    }\r\n    );\r\n\r\n\r\n\r\n    const listModelColumns = (models,model,register,controlName) => {\r\n      const columnOption = (column,index) => {\r\n        return(\r\n          <option key={index}>{column}</option>\r\n        )\r\n      }\r\n\r\n      var listModel = {};\r\n      for(var modelIndex=0;modelIndex<models.response.models.length;modelIndex++) {\r\n        // console.log(models.response.models[modelIndex].name);\r\n        if(models.response.models[modelIndex].name===model) {\r\n          // console.log(\"matched\");\r\n          listModel = models.response.models[modelIndex];\r\n        }\r\n      }\r\n      // console.log(listModel);\r\n      if(listModel===null) return null;\r\n      if(listModel.columns.length===0) return null;\r\n      const tempListModelColumns = listModel.columns.map((column, index) => columnOption(column,index))\r\n      // console.log(tempListModelColumns);\r\n      return (\r\n        \r\n        <Form.Control as=\"select\" name={controlName} ref={register}>\r\n          {tempListModelColumns}\r\n        </Form.Control>\r\n      );\r\n    }\r\n    // console.log(\"before render editjoinpanel debug:\");\r\n    // console.log(models);\r\n    // console.log(modelIndex);\r\n    return (\r\n      <div>\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n          Edit Join\r\n        </Button>\r\n        <table className=\"table\">\r\n          <tbody>\r\n            {listJoinConditions(false)}\r\n          </tbody>\r\n        </table>\r\n        <Modal show={(showJoinModal === modelIndex)} onHide={handleClose} size=\"lg\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Join </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          <Container>\r\n            <h5>Join Conditions</h5>\r\n            <table className=\"table-striped table-bordered w-100\">\r\n              <tbody>\r\n              {listJoinConditions(true)}\r\n              </tbody>\r\n            </table>\r\n          </Container>\r\n          <Container className=\"mt-3\">\r\n            <h5>Add new Join Condition</h5>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              \r\n              <div className=\"row text-center \">\r\n                <div className=\"col\">\r\n                  <Form.Group>\r\n                    <Form.Label>{model.name}</Form.Label>\r\n                      {listModelColumns(models,model.name,register,\"condition1Field\")}\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col-md-auto\">\r\n                  <Form.Group>\r\n                    <Form.Label>Operator type</Form.Label>\r\n                    <Form.Control name=\"conditionOperator\" as=\"select\"  ref={register} >\r\n                      <option>=</option>\r\n                      <option>&gt;=</option>\r\n                      <option>&lt;=</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col\">\r\n                  \r\n                <Form.Group>\r\n                    <Form.Label>{models.response.models[modelIndex-1].name}</Form.Label>\r\n                      {listModelColumns(models,models.response.models[modelIndex-1].name,register,\"condition2Field\")}\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col-md-auto\">\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"joinConditionAddButton\">\r\n                    Add\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleSaveAndClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n","import React, {useState} from 'react';\r\n// import Draggable from 'react-draggable';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { EditJoinPanel } from './EditJoinPanel'\r\nimport { Container, Overlay, Table } from 'react-bootstrap';\r\n\r\n\r\nexport function Models ({models, modelDragEnd, showColumns, saveEditedModel, toggleJoinModal, showJoinModal, highlightedColumns, openContextMenu, contextMenuOpen, editSelect}) {\r\n    const [contextMenu, setContextMenu] = useState({\"x\":null,\"y\":null,\"display\":false});\r\n    // console.log(\"Models\");\r\n    // console.log(contextMenuOpen);\r\n    // console.log(contextMenuOpen);\r\n    // console.log(models);\r\n    // console.log(highlightedColumns);\r\n    if (models.length === 0) return null\r\n      \r\n    if(contextMenuOpen === false && contextMenu.display===true) { //add this to every other component that has context menus\r\n        setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n      }\r\n\r\n      const contextMenuDisplay = (contextMenu, models) => {\r\n        if(contextMenu.display === false) return null;\r\n        // console.log(\"Displaying Context Menu\");\r\n        // console.log(contextMenu);\r\n    \r\n        // console.log(contextMenu.target.firstChild.data);\r\n        // console.log(contextMenu.target);\r\n        // console.log(JSON.parse(contextMenu.target.dataset.selectvalue));\r\n        // console.log(contextMenu.target.dataset.selectvalue.model);\r\n        const addToSelect = (selectToAdd) => {\r\n          editSelect(null,selectToAdd);\r\n          openContextMenu(false);\r\n        };\r\n        return(\r\n          <div>\r\n            <Overlay target={contextMenu.target} show={contextMenu.display} placement=\"right-start\">\r\n              <div>\r\n                <Table bordered variant=\"dark\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td onClick={() => addToSelect({\"inputColumns\": [{\"model\": contextMenu.target.parentNode.dataset.model, \"column\": contextMenu.target.parentNode.dataset.column}], \"alias\": contextMenu.target.parentNode.dataset.column})}>\r\n                        Add to Output\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </Overlay>\r\n          </div>\r\n        )\r\n      }\r\n\r\n\r\n    const modelDraw = (model,index,showColumns, showJoinModal, toggleJoinModal, highlightedColumns, handleClick) => {\r\n        const columnRows = (columns,showColumns) => {\r\n            const columnRow = (column,index) => {\r\n                const handleClick = (e) => {\r\n                    // console.log(e);\r\n                    if (e.type === 'click') {\r\n                    setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                    openContextMenu(false);\r\n                    } else if (e.type === 'contextmenu') {\r\n                    e.preventDefault();\r\n                    if(contextMenu.display===false) { //if contextMenu is not displayed\r\n                        setContextMenu({\"x\":e.pageX,\"y\":e.pageY,\"display\":true,\"clickTargetType\":\"Condition\",\"target\": e.target});\r\n                        openContextMenu(true);\r\n                    } else {\r\n                        setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                        openContextMenu(false);\r\n                    }\r\n                    }\r\n                }\r\n                // console.log(\"modelDraw\");\r\n                // console.log(model);\r\n                // console.log(column);\r\n                var highlightThisColumn = false;\r\n                for(var highlightedColumnIndex=0;highlightedColumnIndex<highlightedColumns.length;highlightedColumnIndex++) {\r\n                    if(model.name===highlightedColumns[highlightedColumnIndex].model && column===highlightedColumns[highlightedColumnIndex].column) {\r\n                        highlightThisColumn = true;\r\n                    }\r\n                }\r\n                return(\r\n                    <tr\r\n                        key = {index}\r\n                        className={index%2 === 0?'odd':'even'}\r\n                        onClick={(e) => handleClick(e)}\r\n                        onContextMenu={(e) => handleClick(e)}\r\n                        data-model = {model.name}\r\n                        data-column = {column}\r\n                    >\r\n                        <td\r\n                            className={\"col-md-auto \"+(highlightThisColumn?\"highlightColumn\":null)}\r\n                        >\r\n                            {index + 1}\r\n                        </td>\r\n                        <td\r\n                            className={\"col \"+(highlightThisColumn?\"highlightColumn\":null)}\r\n                        >\r\n                            {column}\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            }\r\n            \r\n            const columnRowsOutput = columns.map((column,index) => columnRow(column,index));\r\n            return(<tbody>{columnRowsOutput}</tbody>);\r\n        }\r\n        return(\r\n        <Draggable key={\"model_\"+model.name} draggableId={model.name} index={index}>\r\n        {(provided, snapshot) => (\r\n            <div\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            className=\"col removeFocusOutline\"\r\n            >\r\n            <div className=\"w-100 bg-secondary text-white text-center font-weight-bold\">\r\n                {model.name}\r\n            </div>\r\n            <div className=\"w-100 bg-light text-dark text-center font-italic mb-3\">\r\n                {model.description}\r\n            </div>\r\n            <div className=\"w-100 bg-light text-dark text-center\">\r\n                <EditJoinPanel\r\n                    model = { model }\r\n                    saveEditedModel = { saveEditedModel }\r\n                    models = { models }\r\n                    showJoinModal = { showJoinModal }\r\n                    toggleJoinModal = { toggleJoinModal }\r\n                    modelIndex = { index }\r\n                />\r\n            </div>\r\n            <table className=\"table table-bordered table-striped table-hover w-100\">\r\n                    {showColumns===true ? columnRows(model.columns) : null}\r\n            </table>\r\n            </div>\r\n        )}\r\n        </Draggable>)\r\n    }\r\n    const modelsDraw = (models,showColumns, showJoinModal, toggleJoinModal) => \r\n        models.response.models.map((model,index) => {\r\n            return modelDraw(model,index,showColumns, showJoinModal, toggleJoinModal, highlightedColumns)\r\n        }\r\n        );\r\n    \r\n    \r\n\r\n    const ModelTable = () => {\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                \r\n\r\n                <DragDropContext onDragEnd={modelDragEnd}> \r\n                {/* TODO: only allow reordering models if they are all models\r\n                TODO: only allow two models in a join */}\r\n                    <Droppable droppableId=\"droppable\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        >\r\n                        {modelsDraw(models,showColumns, showJoinModal, toggleJoinModal, highlightedColumns)}\r\n                        {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"text-center\">\r\n            <h2>Models</h2>\r\n            {ModelTable()}\r\n            {contextMenuDisplay(contextMenu, models)}\r\n        </div>\r\n    )\r\n}\r\n","// MIT License\r\n\r\n// Copyright (c) 2016 Yury Dymov\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\n\r\nimport React, { createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport getCaretCoordinates from 'textarea-caret';\r\nimport getInputSelection, { setCaretPosition } from 'get-input-selection';\r\n\r\nconst KEY_UP = 38;\r\nconst KEY_DOWN = 40;\r\nconst KEY_RETURN = 13;\r\nconst KEY_ENTER = 14;\r\nconst KEY_ESCAPE = 27;\r\nconst KEY_TAB = 9;\r\n\r\nconst OPTION_LIST_Y_OFFSET = 10;\r\nconst OPTION_LIST_MIN_WIDTH = 100;\r\n\r\nconst propTypes = {\r\n  Component: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.elementType,\r\n  ]),\r\n  defaultValue: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  maxOptions: PropTypes.number,\r\n  onBlur: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  onKeyDown: PropTypes.func,\r\n  onRequestOptions: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  options: PropTypes.arrayOf(PropTypes.object),\r\n  regex: PropTypes.string,\r\n  matchAny: PropTypes.bool,\r\n  minChars: PropTypes.number,\r\n  requestOnlyIfNoOptions: PropTypes.bool,\r\n  spaceRemovers: PropTypes.arrayOf(PropTypes.string),\r\n  spacer: PropTypes.string,\r\n  trigger: PropTypes.string,\r\n  value: PropTypes.string,\r\n  offsetX: PropTypes.number,\r\n  offsetY: PropTypes.number,\r\n  passThroughEnter: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  Component: 'textarea',\r\n  defaultValue: '',\r\n  disabled: false,\r\n  maxOptions: 6,\r\n  onBlur: () => {},\r\n  onChange: () => {},\r\n  onKeyDown: () => {},\r\n  onRequestOptions: () => {},\r\n  onSelect: () => {},\r\n  options: [],\r\n  fullOptions: [],\r\n  regex: '^[A-Za-z0-9\\\\-_]+$',\r\n  matchAny: false,\r\n  minChars: 0,\r\n  requestOnlyIfNoOptions: true,\r\n  spaceRemovers: [',', '.', '!', '?'],\r\n  spacer: ' ',\r\n  trigger: '@',\r\n  offsetX: 0,\r\n  offsetY: 0,\r\n  value: null,\r\n  passThroughEnter: false,\r\n};\r\n\r\nclass AutocompleteTextField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.isTrigger = this.isTrigger.bind(this);\r\n    this.getMatch = this.getMatch.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleResize = this.handleResize.bind(this);\r\n    this.handleSelection = this.handleSelection.bind(this);\r\n    this.updateCaretPosition = this.updateCaretPosition.bind(this);\r\n    this.updateHelper = this.updateHelper.bind(this);\r\n    this.resetHelper = this.resetHelper.bind(this);\r\n    this.renderAutocompleteList = this.renderAutocompleteList.bind(this);\r\n\r\n    this.state = {\r\n      helperVisible: false,\r\n      left: 0,\r\n      matchLength: 0,\r\n      matchStart: 0,\r\n      options: [],\r\n      fullOptions: [],\r\n      selection: 0,\r\n      top: 0,\r\n      value: null,\r\n    };\r\n\r\n    this.recentValue = props.defaultValue;\r\n    this.enableSpaceRemovers = false;\r\n    this.refInput = createRef();\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.handleResize);\r\n    // console.log(\"Autocomplete\");\r\n    // console.log(this.recentValue);\r\n    // console.log(this.state.fullOptions);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { options } = this.props;\r\n    const { fullOptions } = this.props;\r\n    const { caret } = this.state;\r\n\r\n    if (options.length !== prevProps.options.length) {\r\n      this.updateHelper(this.recentValue, caret, options, fullOptions);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  getMatch(str, caret, providedOptions, fullOptions) {\r\n    const { trigger, matchAny, regex } = this.props;\r\n    const re = new RegExp(regex);\r\n    const triggerLength = trigger.length;\r\n    const triggerMatch = trigger.match(re);\r\n\r\n    for (let i = caret - 1; i >= 0; --i) {\r\n      const substr = str.substring(i, caret);\r\n      const match = substr.match(re);\r\n      let matchStart = -1;\r\n\r\n      if (triggerLength > 0) {\r\n        const triggerIdx = triggerMatch ? i : i - triggerLength + 1;\r\n\r\n        if (triggerIdx < 0) { // out of input\r\n          return null;\r\n        }\r\n\r\n        if (this.isTrigger(str, triggerIdx)) {\r\n          matchStart = triggerIdx + triggerLength;\r\n        }\r\n\r\n        if (!match && matchStart < 0) {\r\n          return null;\r\n        }\r\n      } else {\r\n        if (match && i > 0) { // find first non-matching character or begin of input\r\n          continue;\r\n        }\r\n        matchStart = i === 0 && match ? 0 : i + 1;\r\n\r\n        if (caret - matchStart === 0) { // matched slug is empty\r\n          return null;\r\n        }\r\n      }\r\n\r\n      if (matchStart >= 0) {\r\n        const matchedSlug = str.substring(matchStart, caret);\r\n        \r\n        const options = providedOptions.filter((slug) => {\r\n          const idx = slug.toLowerCase().indexOf(matchedSlug.toLowerCase());\r\n          return idx !== -1 && (matchAny || idx === 0);\r\n        });\r\n        var newFullOptions = [];\r\n        for(var j=0;j<providedOptions.length;j++) {\r\n            const matchIdx = providedOptions[j].toLowerCase().indexOf(matchedSlug.toLowerCase());\r\n            if(matchIdx !== -1 && (matchAny || matchIdx === 0))\r\n            // console.log(j);\r\n            newFullOptions.push(this.props.fullOptions[j]);\r\n        }\r\n        this.setState({\"fullOptions\": newFullOptions});\r\n        const matchLength = matchedSlug.length;\r\n        // console.log(\"returning slug:\")\r\n        // console.log(options);\r\n        // console.log(newFullOptions);\r\n        // console.log(this.props.fullOptions);\r\n\r\n        return { matchStart, matchLength, options };\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  isTrigger(str, i) {\r\n    const { trigger } = this.props;\r\n\r\n    if (!trigger || !trigger.length) {\r\n      return true;\r\n    }\r\n\r\n    if (str.substr(i, trigger.length) === trigger) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  handleChange(e) {\r\n    const {\r\n      onChange,\r\n      options,\r\n      fullOptions,\r\n      spaceRemovers,\r\n      spacer,\r\n      value,\r\n    } = this.props;\r\n\r\n    const old = this.recentValue;\r\n    const str = e.target.value;\r\n    const caret = getInputSelection(e.target).end;\r\n\r\n    if (!str.length) {\r\n      this.setState({ helperVisible: false });\r\n    }\r\n\r\n    this.recentValue = str;\r\n\r\n    this.setState({ caret, value: e.target.value });\r\n\r\n    if (!str.length || !caret) {\r\n      return onChange(e.target.value);\r\n    }\r\n\r\n    // '@wonderjenny ,|' -> '@wonderjenny, |'\r\n    if (this.enableSpaceRemovers && spaceRemovers.length && str.length > 2 && spacer.length) {\r\n      for (let i = 0; i < Math.max(old.length, str.length); ++i) {\r\n        if (old[i] !== str[i]) {\r\n          if (\r\n            i >= 2\r\n            && str[i - 1] === spacer\r\n            && spaceRemovers.indexOf(str[i - 2]) === -1\r\n            && spaceRemovers.indexOf(str[i]) !== -1\r\n            && this.getMatch(str.substring(0, i - 2), caret - 3, options, fullOptions)\r\n          ) {\r\n            const newValue = (`${str.slice(0, i - 1)}${str.slice(i, i + 1)}${str.slice(i - 1, i)}${str.slice(i + 1)}`);\r\n\r\n            this.updateCaretPosition(i + 1);\r\n            this.refInput.current.value = newValue;\r\n\r\n            if (!value) {\r\n              this.setState({ value: newValue });\r\n            }\r\n\r\n            return onChange(newValue);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.enableSpaceRemovers = false;\r\n    }\r\n\r\n    this.updateHelper(str, caret, options, fullOptions);\r\n\r\n    if (!value) {\r\n      this.setState({ value: e.target.value });\r\n    }\r\n\r\n    return onChange(e.target.value);\r\n  }\r\n\r\n  handleKeyDown(event) {\r\n    const { helperVisible, options, selection } = this.state;\r\n    const { onKeyDown, passThroughEnter } = this.props;\r\n\r\n    if (helperVisible) {\r\n      switch (event.keyCode) {\r\n        case KEY_ESCAPE:\r\n          event.preventDefault();\r\n          this.resetHelper();\r\n          break;\r\n        case KEY_UP:\r\n          event.preventDefault();\r\n          this.setState({ selection: ((options.length + selection) - 1) % options.length });\r\n          break;\r\n        case KEY_DOWN:\r\n          event.preventDefault();\r\n          this.setState({ selection: (selection + 1) % options.length });\r\n          break;\r\n        case KEY_ENTER:\r\n        case KEY_RETURN:\r\n          if (!passThroughEnter) { event.preventDefault(); }\r\n          this.handleSelection(selection);\r\n          break;\r\n        case KEY_TAB:\r\n          this.handleSelection(selection);\r\n          break;\r\n        default:\r\n          onKeyDown(event);\r\n          break;\r\n      }\r\n    } else {\r\n      onKeyDown(event);\r\n    }\r\n  }\r\n\r\n  handleResize() {\r\n    this.setState({ helperVisible: false });\r\n  }\r\n\r\n  handleSelection(idx) {\r\n    const { matchStart, matchLength, fullOptions } = this.state;\r\n    const { spacer, onSelect } = this.props;\r\n    // console.log(\"handleSelection\");\r\n    // console.log(idx);\r\n    // console.log(fullOptions);\r\n    const slug = fullOptions[idx];\r\n    const value = this.recentValue;\r\n    const part1 = value.substring(0, matchStart);\r\n    const part2 = value.substring(matchStart + matchLength);\r\n\r\n    const event = { target: this.refInput.current };\r\n\r\n    event.target.value = `${part1}${slug}${spacer}${part2}`;\r\n    this.handleChange(event);\r\n    onSelect(event.target.value);\r\n\r\n    this.resetHelper();\r\n\r\n    this.updateCaretPosition(part1.length + slug.length + 1);\r\n\r\n    this.enableSpaceRemovers = true;\r\n  }\r\n\r\n  updateCaretPosition(caret) {\r\n    this.setState({ caret }, () => setCaretPosition(this.refInput.current, caret));\r\n  }\r\n\r\n  updateHelper(str, caret, options, fullOptions) {\r\n    const input = this.refInput.current;\r\n\r\n    const slug = this.getMatch(str, caret, options, fullOptions);\r\n    // console.log(\"updateHelper\");\r\n    // console.log(slug);\r\n    if (slug) {\r\n      const caretPos = getCaretCoordinates(input, caret);\r\n      const rect = input.getBoundingClientRect();\r\n\r\n      const top = caretPos.top + input.offsetTop;\r\n      const left = Math.min(\r\n        caretPos.left + input.offsetLeft - OPTION_LIST_Y_OFFSET,\r\n        input.offsetLeft + rect.width - OPTION_LIST_MIN_WIDTH,\r\n      );\r\n\r\n      const { minChars, onRequestOptions, requestOnlyIfNoOptions } = this.props;\r\n\r\n      if (\r\n        slug.matchLength >= minChars\r\n        && (\r\n          slug.options.length > 1\r\n          || (\r\n            slug.options.length === 1\r\n            && slug.options[0].length !== slug.matchLength\r\n          )\r\n        )\r\n      ) {\r\n        this.setState({\r\n          helperVisible: true,\r\n          top,\r\n          left,\r\n          ...slug,\r\n        });\r\n      } else {\r\n        if (!requestOnlyIfNoOptions || !slug.options.length) {\r\n          onRequestOptions(str.substr(slug.matchStart, slug.matchLength));\r\n        }\r\n\r\n        this.resetHelper();\r\n      }\r\n    } else {\r\n      this.resetHelper();\r\n    }\r\n  }\r\n\r\n  resetHelper() {\r\n    this.setState({ helperVisible: false, selection: 0 });\r\n  }\r\n\r\n  renderAutocompleteList() {\r\n    const {\r\n      helperVisible,\r\n      left,\r\n      matchStart,\r\n      matchLength,\r\n      options,\r\n      fullOptions,\r\n      selection,\r\n      top,\r\n      value,\r\n    } = this.state;\r\n\r\n    if (!helperVisible) {\r\n      return null;\r\n    }\r\n\r\n    const { maxOptions, offsetX, offsetY } = this.props;\r\n\r\n    if (options.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    if (selection >= options.length) {\r\n      this.setState({ selection: 0 });\r\n\r\n      return null;\r\n    }\r\n\r\n    const optionNumber = maxOptions === 0 ? options.length : maxOptions;\r\n\r\n    const helperOptions = options.slice(0, optionNumber).map((val, idx) => {\r\n      const highlightStart = val.toLowerCase().indexOf(value.substr(matchStart, matchLength).toLowerCase());\r\n\r\n      return (\r\n        <li\r\n          className={idx === selection ? 'active' : null}\r\n          key={val}\r\n          onClick={() => { this.handleSelection(idx); }}\r\n          onMouseEnter={() => { this.setState({ selection: idx }); }}\r\n        >\r\n          {val.slice(0, highlightStart)}\r\n          <strong>{val.substr(highlightStart, matchLength)}</strong>\r\n          {val.slice(highlightStart + matchLength)}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <ul className=\"react-autocomplete-input\" style={{ left: left + offsetX, top: top + offsetY }}>\r\n        {helperOptions}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      Component,\r\n      defaultValue,\r\n      disabled,\r\n      onBlur,\r\n      value,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    const { value: stateValue } = this.state;\r\n\r\n    const propagated = Object.assign({}, rest);\r\n    Object.keys(this.constructor.propTypes).forEach((k) => { delete propagated[k]; });\r\n\r\n    let val = '';\r\n\r\n    if (typeof value !== 'undefined' && value !== null) {\r\n      val = value;\r\n    } else if (stateValue) {\r\n      val = stateValue;\r\n    } else if (defaultValue) {\r\n      val = defaultValue;\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        <Component\r\n          disabled={disabled}\r\n          onBlur={onBlur}\r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          ref={this.refInput}\r\n          value={val}\r\n          {...propagated}\r\n        />\r\n        {this.renderAutocompleteList()}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nAutocompleteTextField.propTypes = propTypes;\r\nAutocompleteTextField.defaultProps = defaultProps;\r\n\r\nexport default AutocompleteTextField;","import React, {useState} from 'react';\r\nimport {Container, Modal, Row, Col, Overlay, Table, Button, Form } from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\n// import Draggable from 'react-draggable';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { EditJoinPanel } from './EditJoinPanel'\r\nimport AutocompleteTextField from './AutoComplete';\r\n\r\n\r\nexport const Conditions = ({models, conditions, editCondition, openContextMenu, contextMenuOpen}) => {\r\n    const [contextMenu, setContextMenu] = useState({\"x\":null,\"y\":null,\"display\":false});\r\n    const [editConditionMenu, setEditConditionMenu] = useState({\"show\": false, \"conditionToEdit\":null});\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    \r\n    if(contextMenuOpen === false && contextMenu.display===true) { //add this to every other component that has context menus\r\n      setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n    }\r\n\r\n    // console.log(\"Conditions debug:\");\r\n    // console.log(models);\r\n    // console.log(conditions);\r\n    // console.log(contextMenu);\r\n    // console.log(editConditionMenu);\r\n    if (models.length === 0) return null\r\n\r\n    const showConditions = (conditions,editCondition,openContextMenu) => {\r\n        // console.log(conditions);\r\n        if (conditions.length === 0) return null;\r\n        const handleClick = (e) => {\r\n          // console.log(e);\r\n            if (e.type === 'click') {\r\n              setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n              openContextMenu(false);\r\n            } else if (e.type === 'contextmenu') {\r\n              e.preventDefault();\r\n              if(contextMenu.display===false) { //if contextMenu is not displayed\r\n                setContextMenu({\"x\":e.pageX,\"y\":e.pageY,\"display\":true,\"clickTargetType\":\"Condition\",\"target\": e.target});\r\n                openContextMenu(true);\r\n              } else {\r\n                setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                openContextMenu(false);\r\n              }\r\n            }\r\n        }\r\n        const conditionRow = (condition, index, handleClick) => {\r\n            // console.log(\"conditionRow\");\r\n            // console.log(condition);\r\n            // console.log(index);\r\n            // console.log(index%2 === 0?'odd':'even');\r\n            return ( \r\n                <tr key={index} className={\"componentRow \"} onClick={handleClick} onContextMenu={handleClick}>\r\n                  <td md=\"auto\" className=\"fullSize\">\r\n                    <div className=\"componentContent\">{condition}</div>\r\n                  </td>\r\n                </tr>\r\n            );\r\n        }\r\n        var conditionList = []\r\n        for(var conditionIndex=0;conditionIndex<conditions.length;conditionIndex++) {\r\n            conditionList.push(conditionRow(conditions[conditionIndex],conditionIndex,handleClick));\r\n        }\r\n        return (\r\n          <div>\r\n            <div className=\"w-100 bg-secondary text-white text-center\">Add / Remove Conditions to filter results</div>\r\n            <Table striped bordered>\r\n              <tbody>\r\n              {conditionList}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        );\r\n    }\r\n\r\n\r\n    const handleModalClose = () => setEditConditionMenu({\"show\": false, \"conditionToEdit\":null});\r\n\r\n    \r\n\r\n      \r\n    const editConditionMenuDisplay = (editConditionMenu, handleModalClose, editCondition) => {\r\n      // console.log(\"Displaying Edit Condition Modal\");\r\n      // console.log(editConditionMenu);\r\n      if(editConditionMenu.menuOpen === false) return null;\r\n      const conditionCriteria = React.createRef();\r\n      const handleModalSaveAndClose = () => {\r\n        editCondition(editConditionMenu.conditionToEdit,conditionCriteria.current.recentValue);\r\n        handleModalClose();\r\n      }\r\n      \r\n      const modelColumns = () => {\r\n        var tempModelColumns = [];\r\n        for(var modelIndex=0;modelIndex<models.response.models.length;modelIndex++) {\r\n          for(var columnIndex=0;columnIndex<models.response.models[modelIndex].columns.length;columnIndex++) {\r\n            tempModelColumns.push(models.response.models[modelIndex].columns[columnIndex]);\r\n            tempModelColumns.push(models.response.models[modelIndex].name+\".\"+models.response.models[modelIndex].columns[columnIndex]);\r\n          }\r\n        }\r\n        // console.log(\"tempModelColumns\");\r\n        // console.log(tempModelColumns);\r\n        return tempModelColumns;\r\n      }\r\n\r\n      const modelFullColumns = () => {\r\n        var tempModelColumns = [];\r\n        for(var modelIndex=0;modelIndex<models.response.models.length;modelIndex++) {\r\n          for(var columnIndex=0;columnIndex<models.response.models[modelIndex].columns.length;columnIndex++) {\r\n            tempModelColumns.push(models.response.models[modelIndex].name+\".\"+models.response.models[modelIndex].columns[columnIndex]);\r\n            tempModelColumns.push(models.response.models[modelIndex].name+\".\"+models.response.models[modelIndex].columns[columnIndex]);\r\n          }\r\n        }\r\n        // console.log(\"tempModelColumns\");\r\n        // console.log(tempModelColumns);\r\n        return tempModelColumns;\r\n      }\r\n\r\n      return(\r\n        <div>\r\n          <Modal show={(editConditionMenu.show)} onHide={handleModalClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Join </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            Join Conditions:\r\n            <Form>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <Form.Group>\r\n                    <Form.Label>Condition Criteria</Form.Label>\r\n                      <AutocompleteTextField className=\"form-control\" rows={3} ref={conditionCriteria} options={modelColumns()} fullOptions={modelFullColumns()} trigger=\"\" defaultValue={editConditionMenu.conditionToEdit}/>\r\n                  </Form.Group>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleModalSaveAndClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        </div>\r\n      )\r\n      };\r\n\r\n\r\n    const contextMenuDisplay = (contextMenu) => {\r\n      if(contextMenu.display === false) return null;\r\n      // console.log(\"Displaying Context Menu\");\r\n      // console.log(contextMenu);\r\n      // console.log(contextMenu.target.firstChild.data);\r\n      const clickEditCondition = (conditionToEdit) => {\r\n        setEditConditionMenu({\"show\": true, \"conditionToEdit\":contextMenu.target.firstChild.data});\r\n        openContextMenu(false);\r\n      };\r\n      const clickRemoveCondition = (conditionToRemove) => {\r\n        editCondition(conditionToRemove, null);\r\n        openContextMenu(false);\r\n      };\r\n      return(\r\n        <div>\r\n          <Overlay target={contextMenu.target} show={contextMenu.display} placement=\"right-start\">\r\n            <div>\r\n              <Table bordered variant=\"dark\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td onClick={() => clickEditCondition(contextMenu.target.firstChild.data)}>\r\n                      <div>Edit Condition</div>\r\n                      \r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td onClick={() => clickRemoveCondition(contextMenu.target.firstChild.data)}>\r\n                      Delete Condition\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </Overlay>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n          <h2 className=\"text-center\">Conditions</h2>\r\n          <div>\r\n            {showConditions(conditions,editCondition,openContextMenu)}\r\n            {contextMenuDisplay(contextMenu)}\r\n            {editConditionMenuDisplay(editConditionMenu, handleModalClose, editCondition)}\r\n          </div>\r\n          <div className=\"pt-2 text-center\">\r\n            <Button variant=\"primary\" onClick={() => setEditConditionMenu({\"show\": true, \"conditionToEdit\":null})}>\r\n                Add Condition\r\n            </Button>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport { Container, Overlay, Table, Form } from 'react-bootstrap';\r\n\r\n\r\n\r\nexport function Selects( {models, openContextMenu, contextMenuOpen, selects, editSelect, highlightColumn, outputModel, editOutputModel}) {\r\n    const [contextMenu, setContextMenu] = useState({\"x\":null,\"y\":null,\"display\":false});\r\n    const [editingField, setEditingField] = useState(-1);\r\n    const [editingDescription, setEditingDescription] = useState(-1);\r\n    // console.log(\"Selects:\")\r\n    // console.log(models);\r\n    // console.log(selects);\r\n    // console.log(contextMenu);\r\n    // console.log(clicked);\r\n    // console.log(editingField);\r\n    if (models.length === 0) return null\r\n\r\n    if(contextMenuOpen === false && contextMenu.display===true) { //add this to every other component that has context menus\r\n        setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n      }\r\n\r\n    const contextMenuDisplay = (contextMenu, selects) => {\r\n        if(contextMenu.display === false) return null;\r\n        // console.log(\"Displaying Context Menu\");\r\n        // console.log(contextMenu);\r\n        // console.log(contextMenu.target.firstChild.data);\r\n        // console.log(contextMenu.target);\r\n        // console.log(contextMenu.target.dataset.selectindex);\r\n        const clickEditSelectName = (selectToEdit) => {\r\n        //   setEditConditionMenu({\"show\": true, \"conditionToEdit\":contextMenu.target.firstChild.data});\r\n          setEditingField(parseInt(selectToEdit));\r\n          openContextMenu(false);\r\n        };\r\n        const clickEditSelectDescription = (selectToEdit) => {\r\n        //   setEditConditionMenu({\"show\": true, \"conditionToEdit\":contextMenu.target.firstChild.data});\r\n          // console.log(\"clickEditSelectDescription\");\r\n          // console.log(selectToEdit);\r\n          setEditingDescription(parseInt(selectToEdit));\r\n          openContextMenu(false);\r\n        };\r\n        const clickRemoveSelect = (selectToRemove) => {\r\n          editSelect(selectToRemove,null);\r\n          openContextMenu(false);\r\n        };\r\n        return(\r\n          <div>\r\n            <Overlay target={contextMenu.target} show={contextMenu.display} placement=\"left-start\">\r\n              <div>\r\n                <Table bordered variant=\"dark\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td onClick={() => clickEditSelectName(contextMenu.target.dataset.selectindex)}>\r\n                        <div>Edit Name</div>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td onClick={() => clickEditSelectDescription(contextMenu.target.dataset.selectindex)}>\r\n                        <div>Edit Description</div>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td onClick={() => clickRemoveSelect(selects[contextMenu.target.dataset.selectindex])}>\r\n                        Delete Field\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </Overlay>\r\n          </div>\r\n        )\r\n      }\r\n    \r\n    \r\n    const listModelColumns = (models,selects, highlightColumn,openContextMenu) => {\r\n        \r\n        const handleClick = (e) => {\r\n            // console.log(\"handleClick\");\r\n            // console.log(e);\r\n              if (e.type === 'click') {\r\n                setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                openContextMenu(false);\r\n              } else if (e.type === 'contextmenu') {\r\n                e.preventDefault();\r\n                if(contextMenu.display===false) { //if contextMenu is not displayed\r\n                  setContextMenu({\"x\":e.pageX,\"y\":e.pageY,\"display\":true,\"clickTargetType\":\"Condition\",\"target\": e.target});\r\n                  openContextMenu(true);\r\n                } else {\r\n                  setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                  openContextMenu(false);\r\n                }\r\n              }\r\n          };\r\n\r\n          const updateColumnAlias = (e) => {\r\n            //   console.log(\"updateColumnAlias\");\r\n            //   console.log(e);\r\n              e.preventDefault();\r\n              setEditingField(-1);\r\n              editSelect(selects[editingField],{...selects[editingField], \"alias\": e.target.value});\r\n          };\r\n          const updateColumnDescription = (e) => {\r\n              // console.log(\"updateColumnDescription\");\r\n              // console.log(e);\r\n              e.preventDefault();\r\n              setEditingDescription(-1);\r\n              editSelect(selects[editingDescription],{...selects[editingDescription], \"description\": e.target.value});\r\n          };\r\n\r\n          const showField = (selects, selectsIndex) => {\r\n            //   console.log(\"showField\");\r\n            //   console.log(selectsIndex);\r\n            //   console.log(editingField);\r\n            if(editingField === selectsIndex) {\r\n                return(\r\n                    <>\r\n                        <Form onSubmit={(e) => e.preventDefault()}>\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    defaultValue={(selects[selectsIndex].alias !== null && selects[selectsIndex].alias !== undefined)?selects[selectsIndex].alias:selects[selectsIndex].column}\r\n                                    onBlur={(e) => updateColumnAlias(e)}\r\n                                    placeholder=\"Add name for output field\"\r\n                                    autoFocus\r\n                                />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </>\r\n                );\r\n            } else {\r\n                return(\r\n                    <>\r\n                        <div className=\"w-100 text-dark text-right\" data-selectindex = {selectsIndex}>\r\n                          {(selects[selectsIndex].alias !== null && selects[selectsIndex].alias !== undefined)?selects[selectsIndex].alias:selects[selectsIndex].column}\r\n                        </div>\r\n                    </>\r\n                );\r\n            }\r\n          };\r\n        const showDescription = (selects, selectsIndex) => {\r\n          // console.log(selects);\r\n          // console.log(selectsIndex);\r\n          // console.log(editingDescription);\r\n          if(editingDescription === selectsIndex) { //if decription is being edited\r\n            return(\r\n                <>\r\n                    <Form onSubmit={(e) => e.preventDefault()}>\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                defaultValue={(selects[selectsIndex].description !== null && selects[selectsIndex].description !== undefined)?selects[selectsIndex].description:null}\r\n                                onBlur={(e) => updateColumnDescription(e)}\r\n                                placeholder=\"Add description for output field\"\r\n                                autoFocus\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </>\r\n            );\r\n        } else if(selects[selectsIndex].description !== null && selects[selectsIndex].description !== undefined) { // if description is defined\r\n            return(\r\n                <>\r\n                    <div className=\"w-100 text-dark text-right font-italic\" data-selectindex = {selectsIndex}>\r\n                      {selects[selectsIndex].description}\r\n                    </div>\r\n                </>\r\n            );\r\n        } else return null;\r\n      };\r\n        \r\n\r\n        const highlightColumns = (col) => {\r\n            // console.log(\"highlightColumns\");\r\n            // console.log(col);\r\n            var tempColumnsToHighlight = [];\r\n            if(col !== undefined & col !== null) {\r\n                for(var columnIndex=0;columnIndex<col.inputColumns.length;columnIndex++) {\r\n                    tempColumnsToHighlight.push(col.inputColumns[columnIndex]);\r\n                } \r\n            }\r\n            highlightColumn(tempColumnsToHighlight);\r\n        };\r\n        var tempListModelColumns = [];\r\n        for(let selectsIndex=0;selectsIndex<selects.length;selectsIndex++) {\r\n            // console.log(\"selectsMap\");\r\n            // console.log(selects[selectsIndex]);\r\n            tempListModelColumns.push(\r\n                <tr\r\n                    key={selectsIndex}\r\n                    onMouseEnter={() => highlightColumns(selects[selectsIndex])}\r\n                    onMouseLeave={() => highlightColumns()}\r\n                    onClick={(e) => handleClick(e)}\r\n                    onContextMenu={(e) => handleClick(e)}\r\n                >\r\n                    <td\r\n                    data-selectindex = {selectsIndex}\r\n                    >\r\n                        {showField(selects, selectsIndex)}\r\n                        {showDescription(selects, selectsIndex)}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        };\r\n        return tempListModelColumns;\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <h2 className=\"text-center\">\r\n                Output\r\n            </h2>\r\n            <div className=\"w-100 bg-secondary text-white text-center\">{outputModel.name}</div>\r\n            <div className=\"w-100 bg-light text-dark text-center font-italic mb-3\">\r\n                {outputModel.description?outputModel.description:\"New Model\"}\r\n            </div>\r\n            <table className=\"table table-striped table-hover w-100\">\r\n                <tbody>\r\n                    {listModelColumns(models,selects, highlightColumn,openContextMenu)}\r\n                </tbody>\r\n            </table>\r\n            {contextMenuDisplay(contextMenu, selects)}\r\n        </div>\r\n    )\r\n}","export async function getModelJson(modelJsonFilename, user) {\r\n    const response = await fetch('/api/model_old/' + modelJsonFilename, {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","import React from 'react'\r\nconst conditionConcat = (conditions) => {\r\n    // console.log(\"SQLPanel Conditions\");\r\n    // console.log(conditions);\r\n    if (conditions.length === 0) return null;\r\n    var tempConditionConcat = conditions[0].fullName;\r\n    for(var conditionIndex=1;conditionIndex<conditions.length;conditionIndex++) {\r\n        tempConditionConcat += \"\\n  AND \" + conditions[conditionIndex].fullName;\r\n    }\r\n    return tempConditionConcat;\r\n}\r\nconst selectStatement = (state) => {\r\n    var tempSelectStatement = \"SELECT\\n\";\r\n    const columnDefinition = (select) => {\r\n        if('definition' in select) { // if SQL definition for column exists, use that\r\n            return select.definition;\r\n        } else { // otherwise use the column in inputColumns\r\n            return select.inputColumns[0].model + \".\" + select.inputColumns[0].column;\r\n        }\r\n    }\r\n\r\n    const selectLine = (select) => {\r\n        return columnDefinition(select) + \" AS \" + select.alias;\r\n    }\r\n\r\n    if (state.selects.length !== 0) {\r\n        tempSelectStatement += \"  \" + selectLine(state.selects[0]) + \"\\n\"\r\n        for(var selectIndex=1;selectIndex<state.selects.length;selectIndex++) {\r\n            tempSelectStatement += \"  , \" \r\n                + selectLine(state.selects[selectIndex]) + \"\\n\";\r\n        }\r\n    } else {\r\n        tempSelectStatement += \"  *\\n\"\r\n    }\r\n    return tempSelectStatement;\r\n}\r\n\r\nconst fromStatement = (state) => {\r\n    var tempFromStatement = \"\";\r\n\r\n    const fromSyntax = (model) => {\r\n        return \"{{ ref(\\\"\" + model.name + \"\\\") }} AS \" + model.name;\r\n    }\r\n\r\n    if (state.models.length !== 0) {\r\n        tempFromStatement += \"FROM \" + fromSyntax(state.models.response.models[0]) + \"\\n\"\r\n        for(var joinIndex=1;joinIndex<state.models.response.models.length;joinIndex++) {\r\n            tempFromStatement += \"LEFT JOIN \" \r\n                + fromSyntax(state.models.response.models[joinIndex])\r\n                + \"\\n  ON \" + conditionConcat(state.models.response.models[joinIndex].joinConditions) + \"\\n\";\r\n        }\r\n    } else {\r\n        tempFromStatement += \"FROM \" + state.outputModel\r\n    }\r\n    return tempFromStatement;\r\n}\r\nconst whereStatement = (state) => {\r\n    var tempWhereStatement = \"\";\r\n    if (state.models.length !== 0) {\r\n        tempWhereStatement += \"WHERE \" + state.conditions[0] + \"\\n\"\r\n        // console.log(\"Loading conditions\");\r\n        // console.log(state.conditions.length);\r\n        for(var conditionIndex=1;conditionIndex<state.conditions.length;conditionIndex++) {\r\n            tempWhereStatement += \"  AND \" + state.conditions[conditionIndex] + \"\\n\";\r\n        }\r\n    } else {\r\n        tempWhereStatement += \"FROM \" + state.outputModel\r\n    }\r\n    return tempWhereStatement;\r\n}\r\nexport const SQLPanel = ({state}) => {\r\n    // const fromItem = (joinModel) => {\r\n    //     return(\r\n    //         {join.}\r\n    //     )\r\n    // }\r\n    return(\r\n    <div>\r\n        Generated SQL:\r\n        <div className=\"sqlContent\">\r\n            {selectStatement(state)}\r\n            {fromStatement(state)}\r\n            {whereStatement(state)}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport {Collapse, Container, Row, Col } from 'react-bootstrap';\r\nimport { XCircle } from 'react-bootstrap-icons';\r\n// import logo from './logo.svg';\r\nimport '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import JsonFilenameInput from './components/JsonFilenameInput'\r\nimport { Models } from './Models'\r\nimport { Conditions } from './Conditions'\r\nimport { Selects } from './Selects'\r\nimport { getModelJson } from '../services/getModelJson'\r\nimport { SQLPanel } from './SQLPanel';\r\n\r\nclass ModelBuilder extends Component {\r\n  \r\n  state = {\r\n    model: {},\r\n    models: [],\r\n    openSQLPanel: false,\r\n    showJoinModal: -1,\r\n    outputModel: \"\",\r\n    showColumns: true,\r\n    conditions: [],\r\n    selects: [],\r\n    highlightedColumns: []\r\n  }\r\n  \r\n  toggleJoinModal = (joinNum) => {\r\n    this.setState({showJoinModal: joinNum})\r\n  }\r\n\r\n  \r\n  openSQLPanel = () => {\r\n    this.state.openSQLPanel?this.setState({openSQLPanel: false}):this.setState({openSQLPanel: true})\r\n  }\r\n\r\n  componentDidMount() { // on load\r\n    getModelJson('all_models.json', this.props.user)\r\n      .then(response => {\r\n        this.setState({models: {response}});\r\n        this.setState({conditions: response.conditions});\r\n        var selects = [];\r\n        var outputName = \"\";\r\n        for(var modelIndex=0;modelIndex < response.models.length;modelIndex++) {\r\n          for(var columnIndex=0;columnIndex<response.models[modelIndex].columns.length;columnIndex++) {\r\n            var columnUsedToJoin = false;\r\n            for(var joinModelIndex=0;joinModelIndex<response.models.length;joinModelIndex++) {\r\n              if('joinConditions' in response.models[modelIndex] && typeof response.models[modelIndex].joinConditions !== 'undefined') {\r\n                // console.log(models.response.models[modelIndex]);\r\n                for(var joinConditionIndex=0;joinConditionIndex<response.models[modelIndex].joinConditions.length;joinConditionIndex++) {\r\n                  if(\r\n                    response.models[modelIndex].name===response.models[modelIndex].joinConditions[joinConditionIndex].conditionField1.model\r\n                    && response.models[modelIndex].columns[columnIndex]===response.models[modelIndex].joinConditions[joinConditionIndex].conditionField1.column\r\n                  ) {\r\n                    columnUsedToJoin = true;\r\n                  }\r\n                }\r\n              }\r\n                  \r\n            }\r\n            if(!columnUsedToJoin) {\r\n              selects.push({\"inputColumns\": [{\"column\": response.models[modelIndex].columns[columnIndex],\"model\": response.models[modelIndex].name}],\"alias\": response.models[modelIndex].columns[columnIndex]});\r\n            }\r\n          }\r\n          outputName += (modelIndex!==0?\"_\":\"\") + response.models[modelIndex].name\r\n        }\r\n        this.setState({selects: selects});\r\n        this.setState({outputModel: {\"name\": outputName}})\r\n      });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.models !== this.props.models) { // update Models\r\n        // check all existing joins\r\n        // add new joins\r\n    }\r\n  }\r\n\r\n  saveEditedModel = (previousModel, newModel) => {\r\n    // console.log(\"saveEditedModel\");\r\n    // console.log(previousModel);\r\n    // console.log(newModel);\r\n    this.setState(prevState => ({\r\n      models: prevState.models.response.models.filter(models => models !== previousModel) \r\n    }));\r\n    this.setState({models: {...this.state.models, \"response\": {...this.state.models.response, \"models\": [...this.state.models.response.models.filter(models => models !== previousModel), newModel]}}});\r\n  }\r\n\r\n\r\n  logState = () => {\r\n    console.log(this.state);\r\n  }\r\n\r\n\r\n  editCondition = (oldCondition, newCondition) => {\r\n      // console.log(\"editCondition\")\r\n      // console.log(oldCondition);\r\n      // console.log(newCondition);\r\n      // console.log(this.state.conditions);\r\n    \r\n    if(newCondition === null) { //Removing a select:\r\n      this.setState({conditions: [...this.state.conditions.filter(conditions => conditions !== oldCondition)]});\r\n    } else if (oldCondition === null) { //Adding a select\r\n      this.setState({conditions: [...this.state.conditions, newCondition]});\r\n    } else {\r\n      var conditionToEditIndex = -1;\r\n      for(var conditionIndex=0;conditionIndex<this.state.conditions.length;conditionIndex++) {\r\n        if(this.state.conditions[conditionIndex] === oldCondition) {\r\n          conditionToEditIndex = conditionIndex;\r\n        }\r\n      }\r\n      let conditions = [...this.state.conditions];\r\n      let condition = {...conditions[conditionToEditIndex]};\r\n      condition = newCondition;\r\n      conditions[conditionToEditIndex] = condition;\r\n      this.setState({conditions: conditions});\r\n    }\r\n  \r\n  }\r\n\r\n\r\n  editSelect = (oldSelect, newSelect) => {\r\n    // console.log(\"editSelect\")\r\n    // console.log(oldSelect);\r\n    // console.log(newSelect);\r\n    // console.log(this.state.selects);\r\n    \r\n    if(newSelect === null) { //Removing a select:\r\n      this.setState({selects: [...this.state.selects.filter(selects => selects !== oldSelect)]});\r\n    } else if (oldSelect === null) { //Adding a select\r\n      this.setState({selects: [...this.state.selects, newSelect]});\r\n    } else {\r\n      var selectToEditIndex = -1;\r\n      for(var selectIndex=0;selectIndex<this.state.selects.length;selectIndex++) {\r\n        if(this.state.selects[selectIndex] == oldSelect) {\r\n          selectToEditIndex = selectIndex;\r\n        }\r\n      }\r\n      let selects = [...this.state.selects];\r\n      let select = {...selects[selectToEditIndex]};\r\n      select = newSelect;\r\n      selects[selectToEditIndex] = select;\r\n      this.setState({selects: selects});\r\n    }\r\n  \r\n  }\r\n\r\n  editOutputModel = (newOutputModel) => {\r\n    // console.log(\"editOutputModel\")\r\n    // console.log(newOutputModel);\r\n      this.setState({outputModel: newOutputModel});  \r\n  }\r\n\r\n  // this function reorders items on dragdrop\r\n  reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n  };\r\n\r\n  highlightColumn = (columnsToHighlight) => {\r\n    // console.log(\"highlightColumn\");\r\n    // console.log(columnsToHighlight);\r\n    this.setState({highlightedColumns: columnsToHighlight});\r\n  }\r\n\r\n  modelDragEnd = (result) => {\r\n    // dropped outside the list\r\n    // console.log(\"Start of modelDragEnd\");\r\n    //   console.log(result);\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    if (result.destination.index===result.source.index) {\r\n      return;\r\n    }\r\n    // console.log(\"got past checks\");\r\n    const reorderJoinConditions = (joinConditions) => {\r\n      var newJoinCondition = JSON.parse(JSON.stringify(joinConditions));\r\n      for(var joinConditionIndex=0;joinConditionIndex<joinConditions.length;joinConditionIndex++) {\r\n        newJoinCondition[joinConditionIndex].conditionField1 = joinConditions[joinConditionIndex].conditionField2;\r\n        newJoinCondition[joinConditionIndex].conditionField2 = joinConditions[joinConditionIndex].conditionField1;\r\n        newJoinCondition[joinConditionIndex].fullName = \r\n          joinConditions[joinConditionIndex].conditionField2.model\r\n          +\".\"+joinConditions[joinConditionIndex].conditionField2.column\r\n          +\" \"+joinConditions[joinConditionIndex].conditionOperator\r\n          +\" \"+joinConditions[joinConditionIndex].conditionField1.model\r\n          +\".\"+joinConditions[joinConditionIndex].conditionField1.column\r\n      }\r\n      return(newJoinCondition);\r\n    }\r\n    var fixedModels = this.reorder(\r\n      this.state.models.response.models,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    // console.log(\"Fixed Models\");\r\n    // console.log(fixedModels);\r\n    var tempJoinConditions = fixedModels[result.source.index].joinConditions;\r\n    fixedModels[result.source.index].joinConditions = fixedModels[result.destination.index].joinConditions;\r\n    fixedModels[result.destination.index].joinConditions = tempJoinConditions;\r\n    // console.log(fixedModels[result.source.index]);\r\n    if(fixedModels[result.source.index].joinConditions) {\r\n      fixedModels[result.source.index].joinConditions = reorderJoinConditions(fixedModels[result.source.index].joinConditions);\r\n    } else {\r\n      fixedModels[result.destination.index].joinConditions = reorderJoinConditions(fixedModels[result.destination.index].joinConditions);\r\n    }\r\n    // console.log(fixedModels);\r\n    this.setState({models: {...this.state.models, \"response\": {...this.state.models.response, \"models\":  fixedModels}}});\r\n    }\r\n  \r\n\r\n  render() {\r\n    if(this.props.appState !== \"ModelBuilder\") return null;\r\n    if(this.props.logState === true) {\r\n        console.log(\"ModelBuilder State:\");\r\n        console.log(this.state);\r\n      }\r\n    if(this.props.openSQLPanel) this.state.openSQLPanel?this.setState({openSQLPanel: false}):this.setState({openSQLPanel: true})\r\n    return (\r\n        <div>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"modelList\">\r\n                  <Models \r\n                    models={this.state.models} \r\n                    modelDragEnd={this.modelDragEnd}\r\n                    showColumns={this.state.showColumns}\r\n                    saveEditedModel={this.saveEditedModel}\r\n                    toggleJoinModal = { this.toggleJoinModal }\r\n                    showJoinModal = {this.state.showJoinModal}\r\n                    highlightedColumns = {this.state.highlightedColumns}\r\n                    contextMenuOpen={this.props.contextMenuOpen}\r\n                    openContextMenu={this.props.openContextMenu}\r\n                    editSelect={this.editSelect}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"conditionList\">\r\n                  <Conditions \r\n                      models={this.state.models} \r\n                      conditions={this.state.conditions}\r\n                      editCondition={this.editCondition}\r\n                      contextMenuOpen={this.props.contextMenuOpen}\r\n                      openContextMenu={this.props.openContextMenu}\r\n                    />\r\n                </div>\r\n                </Col>\r\n                <Col>\r\n                <div className=\"outputList\">\r\n                  <Selects\r\n                    models={this.state.models}\r\n                    highlightColumn={this.highlightColumn}\r\n                    selects={this.state.selects}\r\n                    editSelect={this.editSelect}\r\n                    contextMenuOpen={this.props.contextMenuOpen}\r\n                    openContextMenu={this.props.openContextMenu}\r\n                    outputModel={this.state.outputModel}\r\n                    editOutputModel={this.editOutputModel}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Collapse in={ this.state.openSQLPanel } timeout={2000} dimension={'width'}>\r\n            <div>\r\n              <div id=\"sqlPanelSideBar\" className=\"sidePanelContent\">\r\n                <div className=\"sideBarExitButton\">\r\n                  <XCircle onClick={() => this.setState({openSQLPanel: false})}></XCircle>\r\n                </div>\r\n                <SQLPanel\r\n                  state={this.state}\r\n                >\r\n                </SQLPanel>\r\n              </div>\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n          \r\n    );\r\n  }\r\n}\r\n\r\nexport default ModelBuilder;\r\n","export async function getModelSearch(searchString, user) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/model_search/' + searchString, {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","import React, { useRef, useState } from 'react';\r\nimport { Overlay, Popover, Navbar, Nav } from 'react-bootstrap'; \r\nimport { getModelSearch } from '../services/getModelSearch';\r\nconst reactState = process.env.NODE_ENV;\r\nexport const NavBar = ({addModel, logState, openSQLPanel, openModelBuilder, openCatalog, openConfig, appState, contextMenuOpen, openContextMenu, selectModel, user, setUser, userConfig, setUserConfig}) => {\r\n    const [searchDropdown, setSearchDropdown] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const debugLogState = (reactState) => {\r\n        if ( reactState === 'development') {\r\n            return(\r\n                <div className=\"nav-item nav-link\" role=\"button\" onClick={() => logState()}>Show state in console </div>\r\n                );\r\n        } else return null;\r\n    }\r\n    const searchBox = useRef(null);\r\n\r\n    if(contextMenuOpen === false && searchDropdown===true) { //add this to every other component that has context menus\r\n        setSearchDropdown(false);\r\n      }\r\n\r\n\r\n    const selectSearchResult = (e,index) => {\r\n        // console.log(\"clickResult\");\r\n        // console.log(index);\r\n        openContextMenu(false);\r\n        setSearchDropdown(false);\r\n        e.stopPropagation();\r\n        selectModel(searchResults[index].nodeID);\r\n        openCatalog();\r\n    }\r\n\r\n    const toggleSearchDropdown = (newValue) => {\r\n        \r\n        setSearchDropdown(newValue);\r\n        openContextMenu(newValue);\r\n    }\r\n\r\n    const preventSearchClicks = (e) => {\r\n        if(e.target.value.length>0) {\r\n            e.stopPropagation();\r\n            openContextMenu(true);\r\n        }\r\n    }\r\n\r\n    const searchRow = (searchResult, index) => {\r\n        // console.log(\"searchRow\")\r\n        // console.log(searchResult);\r\n        const columnDetails = () => {\r\n            if(searchResult.type===\"column_name\" || searchResult.type===\"column_description\") {\r\n                return(\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            Column: {searchResult.columnName}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {searchResult.columnDescription}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else return null;\r\n        }\r\n        const tagDetails = () => {\r\n            if(searchResult.type===\"tag_name\") {\r\n                return(\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            Tag: {searchResult.tagName}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else return null;\r\n        }\r\n        \r\n        return (\r\n            <div className=\"row\" key={\"searchRow\"+index}>\r\n                <div className=\"col-sm\">\r\n                    <div className=\"container border-top border-bottom\" onClick={(e) => selectSearchResult(e, index)}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col font-weight-bold\">\r\n                                {searchResult.modelName.toLowerCase()}\r\n                            </div>\r\n                            <div className=\"col font-weight-light font-italic text-right\">\r\n                                {searchResult.nodeID.toLowerCase()}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col font-italic\">\r\n                                {searchResult.modelDescription}\r\n                            </div>\r\n                        </div>\r\n                        {columnDetails()}\r\n                        {tagDetails()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }    \r\n    \r\n    const getSearchResults = (e) => {\r\n        // console.log(\"getSearchResults\");\r\n        if(e.target.value.trim().length===0) {\r\n            setSearchResults([]);\r\n            return null;\r\n        };\r\n        openContextMenu(true);\r\n        setSearchDropdown(true);\r\n        getModelSearch(searchBox.current.value, user)\r\n            .then(response => {\r\n                // console.log(response);\r\n                if(response.length===0 || response.error) {\r\n                    setSearchResults([]);\r\n                    return null;\r\n                }\r\n                if(response.searchString === searchBox.current.value) {\r\n                    const allSearchRows = response.results.slice(0,15);\r\n                    setSearchResults(allSearchRows);\r\n                }\r\n                // console.log(\"getSearchResults\");\r\n                // console.log(allSearchRows);\r\n            });\r\n        \r\n    }\r\n\r\n    const allSearchRows = () => {\r\n        if(searchResults.length===0 || !searchDropdown) return null;\r\n        \r\n        const allSearchRows = searchResults.map((searchResult, index) => searchRow(searchResult, index));\r\n        const actionText = appState===\"Catalog\"?\"open in Catalog\":\"add to Model Builder\"\r\n        return(\r\n            <Overlay target={searchBox} show={searchDropdown} placement=\"bottom\">\r\n                <div className=\"container bg-light searchbox-width z-200\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm font-weight-bold font-italic\">\r\n                            Select model to {actionText}:\r\n                        </div>\r\n                    </div>\r\n                    {allSearchRows}\r\n                </div>\r\n            </Overlay>\r\n        );\r\n        \r\n    }\r\n\r\n    const reloadDBT = () => {\r\n        fetch('/api/v1/reload_dbt', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Token ' + user.token,\r\n          }\r\n        });\r\n    }\r\n\r\n    const createPR = () => {\r\n        var prTitle = prompt(\"Please describe your changes:\", \"Added descriptions to models x, y\");\r\n        // console.log(prTitle);\r\n        var prRequestBody = {\r\n            \"prTitle\": prTitle\r\n        }\r\n        fetch('/api/v1/create_pr', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Token ' + user.token,\r\n          },\r\n          body: JSON.stringify(prRequestBody)\r\n        });\r\n    }\r\n\r\n    const logout = () => {\r\n        fetch('/api/v1/users/logout', {\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Token ' + user.token,\r\n          },\r\n        });\r\n        setUser({\"user\":{}});\r\n        sessionStorage.removeItem(\"user\");\r\n        setUserConfig({});\r\n        sessionStorage.removeItem(\"userconfig\");\r\n    }\r\n\r\n    return(\r\n    <Navbar className=\"navbar-dark bg-brand position-fixed w-100 z-100\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">TĀNGATA</Navbar.Brand>\r\n        {/* <a className=\"navbar-brand bg-brand\" href=\"/\">TANGATA</a> */}\r\n        <Navbar.Toggle aria-controls=\"navbarContent\"/>\r\n        <Navbar.Collapse id=\"navbarContent\" className=\"justify-content-between\">\r\n            <div className=\"navbar-nav p-2 bg-brand\">\r\n                <div className={\"nav-item nav-link bg-brand \"+(appState===\"Catalog\"?\"active\":null)} role=\"button\" onClick={() => openCatalog()}>Catalog</div>\r\n                <div className={\"nav-item nav-link bg-brand \"+(appState===\"Config\"?\"active\":null)} role=\"button\" onClick={() => openConfig()}>Config</div>\r\n            </div>\r\n            <div className=\"navbar-nav p2\">\r\n                <form className=\"form-inline\">\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" ref={searchBox} onClick={(e) => preventSearchClicks(e)} onChange={(e) => getSearchResults(e)} onFocus={() => toggleSearchDropdown(true)} placeholder=\"Search Models\" aria-label=\"Search Models\"/>\r\n                </form>\r\n                {allSearchRows()}\r\n            </div>\r\n            <div className=\"navbar-nav p-2\">\r\n                <div className={\"nav-item nav-link mr-sm-2\"+(userConfig.dbtmethod!==\"UploadMetadata\"?null:\" d-none\")} role=\"button\" onClick={() => reloadDBT()}>Refresh dbt_ catalog</div>\r\n                <div className=\"nav-item nav-link mr-sm-2\" role=\"button\" onClick={() => createPR()}>Submit changes</div>\r\n                {/* <div className=\"nav-item nav-link mr-sm-2\" role=\"button\" onClick={() => openSQLPanel()}>Open SQL Panel </div> */}\r\n                {debugLogState(reactState)}\r\n                <div className=\"nav-item nav-link mr-sm-2\" role=\"button\" onClick={() => logout()}>Logout {userConfig.firstname}</div>\r\n            {/* <a class=\"nav-item nav-link active\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n            <a class=\"nav-item nav-link\" href=\"#\">Features</a>\r\n            <a class=\"nav-item nav-link\" href=\"#\">Pricing</a>\r\n            <a class=\"nav-item nav-link disabled\" href=\"#\">Disabled</a> */}\r\n            </div>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n    )\r\n}\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  removeElements,\r\n  Controls,\r\n  MiniMap,\r\n  isNode,\r\n  useZoomPanHelper\r\n} from 'react-flow-renderer';\r\nimport dagre from 'dagre';\r\n\r\n\r\n// import './layouting.css';\r\n\r\nconst dagreGraph = new dagre.graphlib.Graph();\r\ndagreGraph.setDefaultEdgeLabel(() => ({}));\r\n\r\n// In order to keep this example simple the node width and height are hardcoded.\r\n// In a real world app you would use the correct width and height values of\r\n// const nodes = useStoreState(state => state.nodes) and then node.__rf.width, node.__rf.height\r\n\r\nconst nodeWidth = 200;\r\nconst nodeHeight = 33;\r\nconst getLayoutedElements = (elements, direction = 'LR') => {\r\n  const isHorizontal = direction === 'LR';\r\n  dagreGraph.setGraph({ rankdir: direction });\r\n  // console.log(\"getLayoutedElements\");\r\n  // console.log(elements);\r\n  elements.forEach((el) => {\r\n    if (isNode(el)) {\r\n      dagreGraph.setNode(el.id, { width: nodeWidth, height: nodeHeight });\r\n    } else {\r\n      dagreGraph.setEdge(el.source, el.target);\r\n    }\r\n  });\r\n\r\n  dagre.layout(dagreGraph);\r\n\r\n  return elements.map((el) => {\r\n    if (isNode(el)) {\r\n      const nodeWithPosition = dagreGraph.node(el.id);\r\n      el.targetPosition = 'left';\r\n      el.sourcePosition = 'right';\r\n\r\n      // unfortunately we need this little hack to pass a slighltiy different position\r\n      // to notify react flow about the change. More over we are shifting the dagre node position\r\n      // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\r\n      el.position = {\r\n        x: nodeWithPosition.x - nodeWidth / 2 + Math.random() / 1000,\r\n        y: nodeWithPosition.y - nodeHeight / 2,\r\n      };\r\n    }\r\n\r\n    return el;\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\nconst LayoutFlow = (props) => {\r\n//   const { fitView } = useZoomPanHelper();\r\n// console.log(\"LayoutFlow\");  \r\n// console.log(props.lineageArray);\r\n    const layoutedElements = getLayoutedElements(props.lineageArray.lineage);\r\n  const [elements, setElements] = useState(layoutedElements);\r\n  const onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView();\r\n  }\r\n  const onNodeRightClick = (event, node) => {\r\n    event.preventDefault();\r\n    // console.log(event);\r\n    // console.log(node.id);\r\n    props.selectModel(node.id);\r\n  }\r\n  return (\r\n    <div className=\"layoutflow lineagebox\">\r\n      <ReactFlowProvider>\r\n        <ReactFlow\r\n          elements={elements}\r\n          connectionLineType=\"smoothstep\"\r\n          onLoad={onLoad}\r\n          onNodeContextMenu={onNodeRightClick}\r\n        >\r\n            <MiniMap />\r\n        </ReactFlow>\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LayoutFlow;\r\n\r\n","import React, { Component, useState } from 'react';\r\nimport {Container, Tabs, Tab, Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport  LayoutFlow  from './Lineage';\r\nimport ContentEditable from 'react-contenteditable'\r\n\r\nclass Catalog extends Component {\r\n\r\n  catalogDescription = () => {\r\n    if(this.props.catalogModel.description) {\r\n      return this.props.catalogModel.description;\r\n    } else {\r\n      return null;\r\n    };\r\n  }\r\n\r\n  catalogDependsOn = () => {\r\n    // console.log(\"this.props.catalogModel.depends_on\");\r\n    // console.log(this.props.catalogModel.depends_on);\r\n\r\n    const ancestorModels = () => {\r\n      if(!this.props.catalogModel.depends_on) return null;\r\n      // console.log(\"found ancestors\");\r\n      return this.props.catalogModel.depends_on.nodes.map((value,index) => {\r\n        // console.log(value);\r\n        var ancestorClickEvent = (e) => {e.preventDefault(); this.props.selectModel(value);};\r\n        return(\r\n          <div key={\"catalogDependsOnModel\"+index} title={value}>\r\n            {index===0?(<b>Models:<br/></b>):null}\r\n            <a href=\"#\" onClick={ancestorClickEvent}>{value.split(\".\").pop()}</a>\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n    const ancestorMacros = () => {\r\n      if(!this.props.catalogModel.depends_on) return null;\r\n      return this.props.catalogModel.depends_on.macros.map((value,index) => {\r\n        return(\r\n          <div key={\"catalogDependsOnMacro\"+index} title={value}>\r\n            {index===0?(<b>Macros:<br/></b>):null}\r\n            {value.split(\".\").pop()}\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n        {ancestorModels()}\r\n        {ancestorMacros()}\r\n      </>\r\n    )\r\n  }\r\n\r\n  catalogDependencies = () => {\r\n    // console.log(\"this.props.catalogModel.referenced_by\");\r\n    // console.log(this.props.catalogModel.referenced_by);\r\n\r\n    const dependentModels = () => this.props.catalogModel.referenced_by.map((value,index) => {\r\n      var dependentClickEvent = (e) => {e.preventDefault(); this.props.selectModel(value);};\r\n      return(\r\n        <div key={\"catalogDependentModel\"+index} title={value}>\r\n          {index===0?(<b>Models:<br/></b>):null}\r\n          <a href=\"#\" onClick={dependentClickEvent}>{value.split(\".\").pop()}</a>\r\n        </div>\r\n      )\r\n    });\r\n    return (\r\n      <>\r\n        {dependentModels()}\r\n      </>\r\n    )\r\n  }\r\n\r\n  nodeContributors = () => {\r\n    // console.log(\"this.props.catalogModel.referenced_by\");\r\n    // console.log(this.props.catalogModel.referenced_by);\r\n\r\n    const nodeContributorMap = () => this.props.catalogModel.all_contributors.map((value,index) => {\r\n      return(\r\n        <div key={\"nodeContributor\"+index} title={value}>\r\n          {index===0?(<b>Contributors:<br/></b>):null}\r\n          {value}\r\n        </div>\r\n      )\r\n    });\r\n\r\n    if(this.props.catalogModel.all_contributors.length > 1) {\r\n      return (\r\n        <>\r\n          {nodeContributorMap()}\r\n        </>\r\n      )\r\n    } else {\r\n      return null;\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  nodeHistory = () => {\r\n    // console.log(\"this.props.catalogModel.referenced_by\");\r\n    // console.log(this.props.catalogModel.referenced_by);\r\n    var gitRepo = null;\r\n      if(this.props.userConfig.dbtmethod === \"LiveDB\") {\r\n        let gitExtract = this.props.userConfig.gitrepo.match(/[^@]+@(github.com|gitlab.com):([^.]+).git/);\r\n        // console.log(gitExtract);\r\n        gitRepo = \"http://\"+gitExtract[1]+\"/\"+gitExtract[2]+\"/\";\r\n        // console.log(gitRepo);\r\n      }\r\n    const fileCommits = () => this.props.catalogModel.all_commits.map((value,index) => {\r\n      var gitLink = null;\r\n      if(gitRepo !== null) {\r\n        gitLink = gitRepo + 'commit/' + value.hash;\r\n        // console.log(gitLink);\r\n      }\r\n      return(\r\n        <tr key={\"catalogFileCommit \"+index} title={value.hash}>\r\n          <td title={value.authorDate}>\r\n            {value.authorDateRel}\r\n          </td>\r\n          <td>\r\n            {value.authorName}\r\n          </td>\r\n          <td>\r\n            <a href={this.gitLink !== null?gitLink:null} target=\"_blank\">\r\n              {value.subject}\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n    return (\r\n      <>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">\r\n                Date\r\n              </th>\r\n              <th scope=\"col\">\r\n                Author\r\n              </th>\r\n              <th scope=\"col\">\r\n                Commit Message\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {fileCommits()}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    )\r\n  }\r\n  \r\n  \r\n\r\n  catalogColumns = () => {\r\n\r\n    const columnRows = () => {\r\n      return Object.entries(this.props.catalogModel.columns).map((value,index) => {\r\n        const testList = (tests) => {\r\n          // console.log(tests);\r\n          return tests.map((key,testIndex) => {\r\n            // console.log(key);\r\n            // console.log(value);\r\n            if(key.type===\"relationships\") {\r\n              return (\r\n                <div key={\"catalogTest\"+index+\".\"+testIndex} className={\"test-\"+key.severity.toLowerCase()} title={\"On fail: \"+key.severity}>\r\n                  is found in {key.related_model}.{key.related_field}\r\n                </div>\r\n              )\r\n            }\r\n            return (\r\n              <div key={\"catalogTest\"+index+\".\"+testIndex} className={\"test-\"+key.severity.toLowerCase()} title={\"On fail: \"+key.severity}>\r\n                {key.type}\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n        return(\r\n          <tr key={\"columnRow\"+value[0]}>\r\n            <td>\r\n              {value[0].toLowerCase()}\r\n            </td>\r\n            <td>\r\n              {value[1].type.toLowerCase()}\r\n            </td>\r\n            <td>\r\n              \r\n            <ContentEditable\r\n                  html={value[1].description}\r\n                  onBlur={this.updateMetadataModel}\r\n                  data-metadatafield=\"ColumnDescription\"\r\n                  data-columnName={value[0].toLowerCase()}\r\n                  placeholder={\"Add a description\"}\r\n                />\r\n            </td>\r\n            <td>\r\n              {testList(value[1].tests)}\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n    if(Object.keys(this.props.catalogModel.columns).length > 0) { //if this has columns\r\n      return(\r\n        <div className=\"row mt-md-3\">\r\n          <div className=\"col\">\r\n            <table className=\"table table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    Name\r\n                  </th>\r\n                  <th>\r\n                    Type\r\n                  </th>\r\n                  <th>\r\n                    Description\r\n                  </th>\r\n                  <th>\r\n                    Tests\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {columnRows()}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(\r\n        <div className=\"row\">\r\n          <div className=\"col col-md-auto\">\r\n            This model does not appear to contain any rows.\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n\r\n  updateMetadataModel = (e) => {\r\n    // console.log(\"updateMetadataModel\");\r\n    // console.log(e);\r\n    // console.log(e.target.dataset.metadatafield);\r\n    // console.log(e.target.innerText);\r\n    // console.log(this.props.catalogModel.yaml_path);\r\n    // console.log(this.props.catalogModel.model_path);\r\n    var metadataBody = {};\r\n    switch(e.target.dataset.metadatafield) {\r\n      case \"Description\":\r\n        metadataBody = {\r\n          \"updateMethod\": \"yamlModelProperty\",\r\n          \"yaml_path\": this.props.catalogModel.yaml_path,\r\n          \"model_path\": this.props.catalogModel.model_path,\r\n          \"model\": this.props.catalogModel.name,\r\n          \"node_id\": this.props.catalogModel.nodeID,\r\n          \"property_name\": \"description\",\r\n          \"new_value\": e.target.innerText\r\n        }\r\n      break;\r\n      case \"Tags\":\r\n        if(e.target.innerText === \"None\") {\r\n          metadataBody = null;\r\n          break;\r\n        }\r\n        metadataBody = {\r\n          \"updateMethod\": \"yamlModelTags\",\r\n          \"yaml_path\": this.props.catalogModel.yaml_path,\r\n          \"model_path\": this.props.catalogModel.model_path,\r\n          \"model\": this.props.catalogModel.name,\r\n          \"node_id\": this.props.catalogModel.nodeID,\r\n          \"property_name\": \"tags\",\r\n          \"new_value\": e.target.innerText.split(',').map(function(item) { // Split tags by commas, and remove any spaces if any\r\n              return item.trim();\r\n            })\r\n        }\r\n      break;\r\n      case \"ColumnDescription\":\r\n        metadataBody = {\r\n          \"updateMethod\": \"yamlModelColumnProperty\",\r\n          \"yaml_path\": this.props.catalogModel.yaml_path,\r\n          \"model_path\": this.props.catalogModel.model_path,\r\n          \"model\": this.props.catalogModel.name,\r\n          \"node_id\": this.props.catalogModel.nodeID,\r\n          \"column\": e.target.dataset.columnname,\r\n          \"property_name\": \"description\",\r\n          \"new_value\": e.target.innerText\r\n        }\r\n      break;\r\n      default:\r\n        // console.log(\"updateMetadata: no switch case found\");\r\n    }\r\n    if(metadataBody) {\r\n      // console.log(this.props.user.token);\r\n      fetch('/api/v1/update_metadata', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Token ' + this.props.user.token,\r\n        },\r\n        body: JSON.stringify(metadataBody)\r\n      });\r\n    }\r\n  }\r\n\r\n  lineageModal = (lineage, selectModel) => {\r\n    function LineageModal(lineage) {\r\n      const [show, setShow] = useState(false);\r\n    \r\n      const handleClose = () => setShow(false);\r\n      const handleShow = () => setShow(true);\r\n      // console.log(\"lineageModal\");\r\n      // console.log(lineage);\r\n    \r\n      return (\r\n        <>\r\n          <Button variant=\"primary\" onClick={handleShow}>\r\n            Show Lineage\r\n          </Button>\r\n    \r\n          <Modal show={show} onHide={handleClose} size=\"xl\">\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Modal heading</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"lineagebox\">\r\n              <LayoutFlow className=\"lineagebox\" lineageArray={lineage} selectModel={selectModel}/>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n    return <LineageModal lineage={lineage}/>\r\n  }\r\n\r\n  showCreatedBy = () => {\r\n    if(this.props.catalogModel.model_type===\"node\" && this.props.catalogModel.created_by) { \r\n      return(\r\n        <div className=\"row mt-md-3\">\r\n          <div className=\"col col-md-auto\">\r\n            Created: {this.props.catalogModel.created_by + (this.props.catalogModel.created_relative_date?\", \"+this.props.catalogModel.created_relative_date:null)} \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  }\r\n\r\n  render() {\r\n    if(this.props.appState !== \"Catalog\") return null;\r\n    if(Object.keys(this.props.catalogModel).length === 0) { //Default catalog screen\r\n      return (\r\n        <div>\r\n          Welcome to the Catalog. Search in the bar above to find models.\r\n        </div>\r\n      );\r\n    } else {\r\n      const tags = this.props.catalogModel.tags.length>0?this.props.catalogModel.tags.join(\", \"):null\r\n      return (\r\n          <Container className=\"catalogContainer display-block\">\r\n            <div className=\"row justify-content-md-left\">\r\n              <div className=\"col col-md-auto pr-md-3\">\r\n                <h3 className=\"mb-md-0\">{this.props.catalogModel.name.toLowerCase()}</h3>\r\n              </div>\r\n              <div className=\"col font-italic align-self-end pl-md-0\">\r\n                {this.props.catalogModel.materialization}\r\n              </div>\r\n              <div className=\"col align-self-end pl-md-0 text-right\">\r\n                tags: <i>\r\n                  <ContentEditable\r\n                    innerRef={this.tags}\r\n                    html={tags}\r\n                    onBlur={this.updateMetadataModel}\r\n                    data-metadatafield=\"Tags\"\r\n                    placeholder={\"Add comma-separated Tags\"}\r\n                    style= {{display: \"inline\", minWidth: \"100px\"}}\r\n                  />\r\n                </i>\r\n              </div>\r\n            </div>\r\n            <div className=\"row justify-content-between pt-md-1\">\r\n              <div className=\"col col-md-auto\">\r\n                {this.props.catalogModel.database.toLowerCase()}.{this.props.catalogModel.schema.toLowerCase()}.{this.props.catalogModel.name.toLowerCase()}\r\n              </div>\r\n              <div className=\"col col-md-auto\">\r\n                {this.props.catalogModel.row_count?Number(this.props.catalogModel.row_count).toLocaleString()+\" rows\":null}\r\n              </div>\r\n            </div>\r\n            {this.showCreatedBy()}\r\n            <div className=\"row mt-md-3\">\r\n              <div className=\"col col-md-auto\">\r\n                <ContentEditable\r\n                  innerRef={this.description}\r\n                  html={this.catalogDescription()}\r\n                  onBlur={this.updateMetadataModel}\r\n                  data-metadatafield=\"Description\"\r\n                  placeholder={\"Add a description\"}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-md-3\">\r\n              <div className=\"col col-md-auto\">\r\n                {this.lineageModal(this.props.catalogModel.lineage, this.props.selectModel)}\r\n              </div>\r\n            </div>\r\n            <Accordion className=\"mt-md-3\" defaultActiveKey=\"0\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                    Columns\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <div className=\"container\">\r\n                    {this.catalogColumns()}\r\n                  </div>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                    SQL\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"1\">\r\n                  <div className=\"container\">\r\n                    <div className=\"row mt-md-3 mb-md-3\">\r\n                      <div className=\"col col-md-auto\">\r\n                        <Tabs defaultActiveKey=\"raw\" id=\"uncontrolled-tab-example\" className=\"ml-md-1\">\r\n                          <Tab eventKey=\"raw\" title=\"raw SQL\" className=\"py-md-3 catalogSQL\">\r\n                            {this.props.catalogModel.raw_sql}\r\n                          </Tab>\r\n                          <Tab eventKey=\"processed\" title=\"processed SQL\" className=\"py-md-3 catalogSQL\">\r\n                            {this.props.catalogModel.compiled_sql}\r\n                          </Tab>\r\n                        </Tabs>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                    Code Change History\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"2\">\r\n                  <div className=\"container\">\r\n                    <div className=\"row mt-md-3 mb-md-3\">\r\n                      <div className=\"col col-md-auto\">\r\n                        {this.nodeContributors()}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row mt-md-3 mb-md-3\">\r\n                      <div className=\"col col-md-auto\">\r\n                        {this.nodeHistory()}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\r\n                    Depends On\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"3\">\r\n                  <div className=\"container\">\r\n                    <div className=\"row mt-md-3 mb-md-3\">\r\n                      <div className=\"col col-md-auto\">\r\n                        {this.catalogDependsOn()}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"4\">\r\n                    Dependencies\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"4\">\r\n                  <div className=\"container\">\r\n                    <div className=\"row mt-md-3 mb-md-3\">\r\n                      <div className=\"col col-md-auto\">\r\n                        {this.catalogDependencies()}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          </Container>\r\n            \r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Catalog;\r\n","export async function getModel(modelNodeId, user) {\r\n    const response = await fetch('/api/v1/models/' + modelNodeId, {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","export async function getSSH(user) {\r\n    const response = await fetch('/api/v1/get_ssh', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response;\r\n}","export async function getGenerateSSH(user) {\r\n    const response = await fetch('/api/v1/generate_ssh', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response;\r\n}","export async function getOpenGit(user) {\r\n    const response = await fetch('/api/v1/open_git_connection', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response;\r\n}","export async function getCheckDBTConnection(user) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/check_dbt_connection', {\r\n        method: 'GET', \r\n        headers: {\r\n                Authorization: \"Token \" + user.token\r\n            }\r\n    })\r\n    return await response;\r\n}","import React, { Component } from 'react';\r\nimport {Collapse, Container, Row, Col } from 'react-bootstrap';\r\nimport { io } from \"socket.io-client\";\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import JsonFilenameInput from './components/JsonFilenameInput'\r\nimport Login from './components/Login';\r\nimport Config from './components/Config';\r\nimport ModelBuilder from './components/ModelBuilder';\r\nimport { NavBar } from './components/NavBar';\r\nimport Catalog from './components/Catalog';\r\nimport { getModel } from './services/getModel';\r\nimport { getSSH } from \"./services/getSSH\";\r\nimport { getUserConfig } from \"./services/getUserConfig\";\r\nimport { getGenerateSSH } from \"./services/getGenerateSSH\";\r\nimport { getOpenGit } from \"./services/getOpenGit\";\r\nimport { getCheckDBTConnection } from \"./services/getCheckDBTConnection\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.modelBuilder = React.createRef();\r\n  }\r\n  state = {\r\n    appState: \"Catalog\",\r\n    modelBuilder: {\r\n      \"models\": [{\"name\": \"humans\"},{\"name\":\"abductions\"}],\r\n      \"logState\": false,\r\n      \"openSQLPanel\": false,\r\n      \"addModel\": {}\r\n    },\r\n    contextMenuOpen: false,\r\n    catalogModel: {},\r\n    sshKey: \"\",\r\n    user: {},\r\n    userConfig: {},\r\n    userMessages: []\r\n  }\r\n  \r\n\r\n  handleAllClicks = (e) => {\r\n    // console.log(\"handleAllClicks\");\r\n    if(this.state.contextMenuOpen===true) {\r\n      this.setState({contextMenuOpen: false});\r\n    }\r\n  };\r\n\r\n  // addModelToModelBuilder = (nodeId) => {\r\n\r\n  //   this.setState({modelBuilder: {...this.state.modelBuilder, \"addModel\": \r\n  // }\r\n\r\n  selectModel = (nodeId) => {\r\n    // console.log(\"selectModel\");\r\n    // console.log(nodeId);\r\n    getModel(nodeId, this.state.user)\r\n      .then(response => {\r\n        // console.log(response)\r\n        if(!response.error) {\r\n          if(this.state.appState === \"Catalog\") {\r\n            this.setState({\"catalogModel\":response})\r\n          }\r\n        }\r\n        \r\n      });\r\n  }\r\n\r\n  openContextMenu = (openState) => {\r\n    // console.log(\"openContextMenu\");\r\n    if(openState===true) {\r\n      this.setState({contextMenuOpen: true});\r\n    } else {\r\n      this.setState({contextMenuOpen: false});\r\n    }\r\n  }\r\n\r\n  logState = () => {\r\n    this.setState({\"logState\": true})\r\n  }\r\n  openSQLPanel = () => {\r\n    this.setState({\"openSQLPanel\": true})\r\n  }\r\n\r\n  addModel = () => {\r\n    // console.log(\"Not yet implemented\"); //TODO: add input model from catalog\r\n  }\r\n\r\n  openModelBuilder = () => {\r\n    this.setState({\"appState\": \"ModelBuilder\"})\r\n  }\r\n\r\n  openCatalog = () => {\r\n    this.setState({\"appState\": \"Catalog\"})\r\n  }\r\n\r\n  openConfig = () => {\r\n    this.setState({\"appState\": \"Config\"})\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(this.state.logState === true) {\r\n      console.log(\"App State:\");\r\n      console.log(this.state);\r\n      this.setState({\"logState\": false})\r\n    }\r\n    if(this.state.openSQLPanel === true) this.setState({\"openSQLPanel\": false});\r\n  }\r\n  componentDidMount() {\r\n    if(window.location.port === '8080') { // python version\r\n      console.log('python')\r\n      this.setState({\"hostVersion\": \"python\"})\r\n    } else {\r\n      console.log('node')\r\n      this.setState({\"hostVersion\": \"node\"})\r\n    }\r\n    if(Object.keys(this.state.user).length === 0) {\r\n      if(sessionStorage.getItem(\"user\")) {\r\n        getUserConfig(JSON.parse(sessionStorage.getItem(\"user\")).user)\r\n        .then(response => {\r\n          this.setUserConfig(response.user);\r\n        });\r\n        this.setUser(JSON.parse(sessionStorage.getItem(\"user\")))\r\n      }\r\n      \r\n    }\r\n    document.title = 'Tāngata';\r\n  }\r\n\r\n  setUser = (newUser) => {\r\n    this.setState({\"user\": newUser.user})\r\n  }\r\n  setUserConfig = (newUserConfig) => {\r\n    this.setState({\"userConfig\": newUserConfig})\r\n  }\r\n\r\n  setSSHKey = () => {\r\n    getSSH(this.state.user)\r\n    .then(response=> response.text())\r\n    .then(responseText => {\r\n      // console.log(responseText);\r\n      this.setState({\"sshKey\": responseText});\r\n    });\r\n  }\r\n\r\n  generateSSHKey = () => {\r\n    getGenerateSSH(this.state.user)\r\n    .then(response=> response.text())\r\n    .then(responseText => {\r\n      this.setState({\"sshKey\": responseText});\r\n    });\r\n  }\r\n\r\n  openGitConnection = () => {\r\n    getOpenGit(this.state.user)\r\n    .then(response=> response.text())\r\n    .then(responseText => {\r\n      return responseText;\r\n    });\r\n  }\r\n  checkDBTConnection = () => {\r\n    getCheckDBTConnection(this.state.user)\r\n    .then(response=> {\r\n      // console.log(response);\r\n      if(response.ok === true) {\r\n        // console.log(\"Success\");\r\n        toast.success(\"DBT_ Connection Successful.\");\r\n      } else {\r\n        response.text()\r\n        .then(responseText=> {\r\n          // console.log(response);\r\n          // console.log(responseText);\r\n          toast.error(\"DBT_ Connection Failed: \" + responseText, {\r\n            autoClose: 10000,\r\n            });\r\n          // toast(response);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  toastSender = (message, toastType) => {\r\n    if(toastType === \"error\") {\r\n      toast.error(message);\r\n    } else if (toastType === \"success\") {\r\n      toast.success(message);\r\n    } else {\r\n      toast(message);\r\n    }\r\n  }\r\n  \r\n  clearUserMessages = () => {\r\n    this.setState({\"userMessages\": []})\r\n  } \r\n  \r\n  render() {\r\n    console.log(window.location.port)\r\n    if(this.state.hostVersion !== 'python' && Object.keys(this.state.user).length === 0) {\r\n      return (\r\n        <div id=\"main\">\r\n          <Login\r\n            setUser={this.setUser}\r\n            setUserConfig={this.setUserConfig}\r\n          />\r\n        </div>\r\n      )\r\n    } else {\r\n      var socket = null\r\n      // if(this.state.hostVersion !== 'python') { // TODO: remove python filter from sockets. It's crowding my console.\r\n      socket = io({\r\n        auth: (cb) => {\r\n          cb({\r\n            token: this.state.user\r\n          });\r\n        }\r\n      });\r\n      socket.on(\"connect\", () => {\r\n        // either with send()\r\n        socket.send(\"Hello!\");\r\n      });\r\n      socket.on(\"toast\", (data) => {\r\n        // console.log(\"Toast received\");\r\n        this.toastSender(data.message, data.type);\r\n      });\r\n    // }\r\n  \r\n      \r\n      return (\r\n        <div id=\"main\" onClick={this.handleAllClicks} onContextMenu={this.handleAllClicks}>\r\n          <NavBar\r\n            addModel={this.addModel}\r\n            logState={this.logState}\r\n            openSQLPanel={this.openSQLPanel}\r\n            openModelBuilder={this.openModelBuilder}\r\n            openCatalog={this.openCatalog}\r\n            openConfig={this.openConfig}\r\n            appState={this.state.appState}\r\n            openContextMenu={this.openContextMenu}\r\n            contextMenuOpen={this.state.contextMenuOpen}\r\n            selectModel={this.selectModel}\r\n            user={this.state.user}\r\n            setUser={this.setUser}\r\n            userConfig={this.state.userConfig}\r\n            setUserConfig={this.setUserConfig}\r\n            />\r\n            <div className=\"body\">\r\n            {/* <ModelBuilder\r\n              modelBuilder={this.state.modelBuilder}\r\n              ref={this.modelBuilder}\r\n              logState={this.state.logState}\r\n              openSQLPanel={this.state.openSQLPanel}\r\n              appState={this.state.appState}\r\n              openContextMenu={this.openContextMenu}\r\n              contextMenuOpen={this.state.contextMenuOpen}\r\n              user={this.state.user}\r\n            /> */}\r\n            <Catalog\r\n              appState={this.state.appState}\r\n              catalogModel={this.state.catalogModel}\r\n              selectModel={this.selectModel}\r\n              user={this.state.user}\r\n              userConfig={this.state.userConfig}\r\n            />\r\n            <Config\r\n              appState={this.state.appState}\r\n              user={this.state.user}\r\n              userConfig={this.state.userConfig}\r\n              setUserConfig={this.setUserConfig}\r\n              sshKey={this.state.sshKey}\r\n              setSSHKey={this.setSSHKey}\r\n              generateSSHKey={this.generateSSHKey}\r\n              openGitConnection={this.openGitConnection}\r\n              checkDBTConnection={this.checkDBTConnection}\r\n              toastSender={this.toastSender}\r\n            />\r\n            <ToastContainer\r\n              position=\"bottom-center\"\r\n              autoClose={8000}\r\n              hideProgressBar={false}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnFocusLoss\r\n              draggable\r\n              pauseOnHover\r\n            />\r\n            </div>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}