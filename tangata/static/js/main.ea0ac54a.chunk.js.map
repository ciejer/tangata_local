{"version":3,"sources":["services/postLoginUser.js","services/postRegisterUser.js","services/refreshMetadata.js","services/getUserConfig.js","services/getServerConfig.js","components/Login.js","services/postUserConfig.js","services/postServerConfig.js","services/postFileUpload.js","services/getDBTCloudAccounts.js","services/getDBTCloudJobs.js","components/Config.js","components/EditJoinPanel.js","components/Models.js","components/AutoComplete.js","components/Conditions.js","components/Selects.js","services/getModelJson.js","components/SQLPanel.js","components/ModelBuilder.js","components/NavBar.js","components/Lineage.js","components/ShowSearchResults.js","services/getModelSearch.js","services/getModel.js","components/RefSearchResults.js","services/getModelTree.js","services/getDBTree.js","components/Catalog.js","services/getSSH.js","services/getGenerateSSH.js","services/getOpenGit.js","services/getCheckDBTConnection.js","App.js","reportWebVitals.js","index.js"],"names":["loginBody","a","fetch","method","headers","body","JSON","stringify","response","json","registerBody","refreshMetadata","user","Authorization","token","getUserConfig","getServerConfig","Login","props","useState","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","history","useHistory","hostVersion","Object","keys","length","push","class","className","Tabs","defaultActiveKey","id","Tab","eventKey","title","Form","onSubmit","event","preventDefault","postLoginUser","then","setUser","sessionStorage","setItem","setUserConfig","Group","size","controlId","Label","Control","autoFocus","type","value","onChange","e","target","Button","block","disabled","postRegisterUser","setServerConfig","postUserConfig","newConfig","configToSend","_id","postFileUpload","uploadFormData","uploadType","account","Config","copySuccess","setCopySuccess","dbtAccounts","setdbtAccounts","dbtDocsJobs","setdbtDocsJobs","sshKeyRef","useRef","dbtCloudKey","dbtAccountRef","dbtJobRef","updateConfigValue","newValue","updatedField","userConfig","updateServerConfigValue","newServerConfig","serverConfig","postServerConfig","uploadFile","uploadedFiles","uploadData","FormData","append","ok","toastSender","text","responseText","loadDBTAccounts","getDBTCloudAccounts","returnedDBTCloudAccounts","selectAccount","getDBTCloudJobs","current","returnedDBTCloudJobs","console","log","tabClassName","firstname","lastname","variant","onClick","stopPropagation","setSSHKey","prompt","generateSSHKey","as","rows","sshKey","ref","document","queryCommandSupported","select","execCommand","focus","Text","muted","href","gitrepo","openGitConnection","Check","custom","inline","label","checked","dbtmethod","File","required","name","files","feedbackTooltip","checkDBTConnection","placeholder","newKey","keyFile","Blob","updateDBTCloudKey","map","index","job","updateDBTCloudConfig","defaultValue","promotion_tag","demotion_tag","schema_file_settings","EditJoinPanel","model","modelIndex","saveEditedModel","models","toggleJoinModal","showJoinModal","newModel","setModelState","useForm","register","handleSubmit","handleClose","joinConditionRow","condition","showRemove","fullName","joinConditions","filter","conditions","removeCondition","listJoinConditions","listModelColumns","controlName","listModel","columns","tempListModelColumns","column","columnOption","parse","Modal","show","onHide","Header","closeButton","Title","Body","Container","data","newCondition","condition1Field","conditionOperator","condition2Field","concat","Footer","Models","modelDragEnd","showColumns","highlightedColumns","openContextMenu","contextMenuOpen","editSelect","contextMenu","setContextMenu","display","modelDraw","handleClick","columnRows","columnRowsOutput","pageX","pageY","highlightThisColumn","highlightedColumnIndex","onContextMenu","data-model","data-column","columnRow","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","description","modelsDraw","onDragEnd","droppableId","droppableProps","Overlay","placement","Table","bordered","selectToAdd","parentNode","dataset","contextMenuDisplay","AutocompleteTextField","isTrigger","bind","getMatch","handleChange","handleKeyDown","handleResize","handleSelection","updateCaretPosition","updateHelper","resetHelper","renderAutocompleteList","state","helperVisible","left","matchLength","matchStart","options","fullOptions","selection","top","recentValue","enableSpaceRemovers","refInput","createRef","window","addEventListener","this","prevProps","caret","removeEventListener","str","providedOptions","trigger","matchAny","regex","re","RegExp","triggerLength","triggerMatch","match","i","substring","triggerIdx","newFullOptions","j","matchedSlug","slug","idx","toLowerCase","indexOf","matchIdx","setState","substr","spaceRemovers","spacer","old","getInputSelection","end","Math","max","slice","onKeyDown","passThroughEnter","keyCode","onSelect","part1","part2","setCaretPosition","input","caretPos","getCaretCoordinates","rect","getBoundingClientRect","offsetTop","min","offsetLeft","width","minChars","onRequestOptions","requestOnlyIfNoOptions","maxOptions","offsetX","offsetY","optionNumber","helperOptions","val","highlightStart","onMouseEnter","style","Component","onBlur","rest","stateValue","propagated","assign","constructor","propTypes","forEach","k","React","defaultProps","Conditions","editCondition","editConditionMenu","setEditConditionMenu","conditionRow","md","conditionList","conditionIndex","striped","showConditions","firstChild","conditionToRemove","handleModalClose","menuOpen","conditionCriteria","tempModelColumns","columnIndex","modelColumns","modelFullColumns","conditionToEdit","editConditionMenuDisplay","Selects","selects","highlightColumn","outputModel","editOutputModel","editingField","setEditingField","editingDescription","setEditingDescription","updateColumnAlias","updateColumnDescription","showField","selectsIndex","alias","undefined","data-selectindex","showDescription","highlightColumns","col","tempColumnsToHighlight","inputColumns","onMouseLeave","selectToEdit","selectindex","parseInt","selectToRemove","modelJsonFilename","conditionConcat","tempConditionConcat","selectStatement","tempSelectStatement","selectLine","definition","columnDefinition","selectIndex","fromStatement","tempFromStatement","fromSyntax","joinIndex","whereStatement","tempWhereStatement","SQLPanel","NavBar","addModel","logState","openSQLPanel","openModelBuilder","openCatalog","openConfig","appState","selectModel","searchBox","reactState","getSearchResults","trim","timer","clearTimeout","setTimeout","debounceSearchResults","logout","removeItem","Navbar","expand","Brand","Toggle","aria-controls","Collapse","location","pathname","includes","role","onFocus","aria-label","createPR","submitChanges","prRequestBody","process","logoutButton","dagreGraph","dagre","graphlib","Graph","setDefaultEdgeLabel","nodeWidth","LayoutFlow","layoutedElements","elements","direction","setGraph","rankdir","el","isNode","setNode","height","setEdge","source","layout","nodeWithPosition","node","targetPosition","sourcePosition","position","x","random","y","nodeHeight","getLayoutedElements","lineageArray","lineage","Backdrop","background","zIndex","connectionLineType","onLoad","reactFlowInstance","fitView","padding","includeHiddenNodes","onNodeContextMenu","minZoom","nodeID","open","ShowSearchResults","searchResults","results","sort","firstEl","secondEl","promoteStatus","resultSelectFunction","AllSearchRows","Row","Col","allSearchRows","searchResult","modelName","xmlns","fill","viewBox","fill-rule","d","modelDescription","columnName","columnDescription","tagName","searchRow","getModelSearch","searchString","getModel","modelNodeId","RefSearchResults","selectColumn","selectModelColumn","selectedModel","clearColumns","refColumns","CatalogColumns","entries","replaceAll","refSearchResults","refSearchBox","error","debounceRefSearchResults","getDBTree","Catalog","catalogModel","setCatalogModel","rawModelTree","setRawModelTree","setRawDBTree","setSearchResults","newRefTest","setNewRefTest","useRouteMatch","treeTab","setTreeTab","folderTree","setFolderTree","dbTree","setDBTree","treeFolderRef","treeDBRef","path","url","useContextMenu","AddRefTest","allTests","newTest","thisTest","tests","related_model","related_field","severity","toUpperCase","updateMetadataModel","catalogColumns","Date","now","colourStyles","control","styles","backgroundColor","option","isDisabled","isFocused","isSelected","color","chroma","alpha","css","contrast","cursor","multiValue","multiValueLabel","multiValueRemove","changeTest","triggerEvent","removeItemIndex","findIndex","testType","relatedField","replace","innerText","newTests","html","data-metadatafield","data-columnName","currentTests","testSeverityColor","testLabel","formatTests","isMulti","testValue","testAction","action","removedValue","menuPortalTarget","openMenuOnClick","components","MultiValueContainer","textContent","MultiValueClick","ClearIndicator","promoteIcon","demoteIcon","modelLabel","findFolderTreeNode","arr","reduce","item","key","nodes","useEffect","getModelTree","RecurseFullFolderTree","RecurseFullDBTree","RecurseFolderTree","lastItem","modelPath","loopVar","items","b","promote_status","PopulateDBTree","db_models","database","thisDB","schema","sortByLabel","itemDB","itemDBSchema","metadataBody","newTags","newTagsWithPromotion","metadatafield","yaml_path","model_path","tags","newPromotionStatus","newDBTree","split","columnname","lineageModal","LineageModal","setShow","showCreatedBy","model_type","created_by","created_relative_date","treePath","last","arrayPath","lastIndexOf","o","removedProjectName","splice","getTreeRef","runningFullModel","pop","strPath","pathSoFar","thisModel","SearchPage","searchQuery","useParams","CatalogPage","catalogPage","setModelPromotion","join","showPromotionMenu","materialization","minWidth","row_count","Number","toLocaleString","Accordion","Card","raw_sql","compiled_sql","all_contributors","scope","all_commits","hash","authorDate","authorDateRel","authorName","originURL","subject","depends_on","macros","referenced_by","fluid","setOpen","treeModelClick","hasNodes","resetOpenNodes","openNodes","toggleNode","in","Overflow","Nav","activeKey","initialActiveKey","initialOpenNodes","splitNodeID","thisStep","stepsSoFar","currentOpenNodes","onClickItem","hasSearch","xs","lg","exact","App","handleAllClicks","openState","newUser","newUserConfig","getSSH","getGenerateSSH","getOpenGit","getCheckDBTConnection","toast","success","autoClose","message","toastType","clearUserMessages","LoginRoute","children","render","to","modelBuilder","tempUser","port","getItem","userMessages","socket","io","auth","cb","on","send","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ea0ac54a.chunk.js","sourcesContent":["export async function postLoginUser(loginBody) {\r\n    // console.log(loginBody);\r\n    const response = await fetch('/api/v1/users/login', {\r\n        method: 'POST', \r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(loginBody)\r\n    });\r\n    return await response.json();\r\n}","export async function postRegisterUser(registerBody) {\r\n    // console.log(registerBody);\r\n    const response = await fetch('/api/v1/users', {\r\n        method: 'POST', \r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(registerBody)\r\n    });\r\n    return await response.json();\r\n}","export async function refreshMetadata(user) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/refresh_metadata', {\r\n        method: 'POST', \r\n        headers: {\r\n                Authorization: \"Token \" + user.token\r\n            }\r\n    });\r\n    return await response;\r\n}","export async function getUserConfig(user) {\r\n    const response = await fetch('/api/v1/get_user_config/', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","export async function getServerConfig(user) {\r\n    const response = await fetch('/api/v1/get_server_config', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Tabs, Tab, TabContainer} from \"react-bootstrap\";\r\nimport { postLoginUser } from \"../services/postLoginUser\";\r\nimport { postRegisterUser } from \"../services/postRegisterUser\";\r\nimport { refreshMetadata } from \"../services/refreshMetadata\";\r\nimport { getUserConfig } from \"../services/getUserConfig\";\r\nimport { getServerConfig } from \"../services/getServerConfig\";\r\nimport { useHistory } from 'react-router-dom';\r\n// import \"./Login.css\";\r\n\r\nexport default function Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  let history = useHistory();\r\n  if(props.hostVersion === 'python' || Object.keys(props.user).length > 0) {\r\n    // console.log(props.user);\r\n    history.push(\"/\");\r\n  }\r\n\r\n  function validateLoginForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n  function validateRegisterForm() {\r\n    return email.length > 0 && password.length > 0 && firstName.length > 0;\r\n  }\r\n\r\n  function handleLogin(event) {\r\n    event.preventDefault(); //stop the click catcher\r\n    var loginBody = {\"user\": {\"email\": email, \"password\": password}};\r\n    postLoginUser(loginBody)\r\n      .then(response => {\r\n        props.setUser(response);\r\n        sessionStorage.setItem(\"user\", JSON.stringify(response));\r\n        refreshMetadata(response.user);\r\n        getUserConfig(response.user)\r\n          .then(response => {\r\n            props.setUserConfig(response.user);\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  function handleRegister(event) {\r\n    event.preventDefault(); //stop the click catcher\r\n    var registerBody = {\"user\": {\"email\": email, \"password\": password, \"config\": {\"firstname\": firstName, \"lastname\": lastName}}};\r\n    postRegisterUser(registerBody)\r\n      .then(response => {\r\n        props.setUser(response);\r\n        sessionStorage.setItem(\"user\", JSON.stringify(response));\r\n        refreshMetadata(response.user);\r\n        getUserConfig(response.user)\r\n          .then(response => {\r\n            props.setUserConfig(response.user);\r\n          }\r\n        );\r\n        getServerConfig(response.user)\r\n          .then(response => {\r\n            props.setServerConfig(response.user);\r\n          }\r\n        );\r\n      }\r\n    );\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n    <nav class=\"navbar-dark bg-brand position-fixed w-100 z-100 navbar navbar-expand-xl navbar-light\"><div class=\"navbar-brand\">TĀNGATA</div></nav>\r\n    <div className=\"Login\">\r\n      <Tabs defaultActiveKey=\"login\" id=\"loginOrRegister\">\r\n        <Tab eventKey=\"login\" title=\"Login\">\r\n          <Form onSubmit={handleLogin}>\r\n            <Form.Group size=\"lg\" controlId=\"loginEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"loginPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateLoginForm()}>\r\n              Login\r\n            </Button>\r\n          </Form>\r\n        </Tab>\r\n        <Tab eventKey=\"register\" title=\"Sign Up\">\r\n          <Form onSubmit={handleRegister}>\r\n            <Form.Group size=\"lg\" controlId=\"registerEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"registerPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"firstname\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"lastname\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateRegisterForm()}>\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Tab>\r\n      </Tabs>\r\n      <div className=\"container md-3 text-center col-md-5 mt-3\">\r\n        <blockquote>\r\n          <p>“Hutia te rito o te harakeke<br/>\r\n          Kei whea to kōmako e kō?<br/>\r\n          Ki mai ki ahau<br/>\r\n          He aha te mea nui o te Ao?<br/>\r\n          Maku e kī atu,<br/>\r\n          <b>he tāngata, he tāngata, he tāngata</b>...\"</p>\r\n        </blockquote>\r\n        <p>\r\n          If the heart of the harakeke <em>(flax plant)</em> was removed,<br/>\r\n          where would the bellbird sing?<br/>\r\n          If I was asked what was the most important thing in the world<br/>\r\n          I would be compelled to reply,<br/>\r\n          it is people, it is people, it is people.<br/>\r\n          <em>Ngaroto</em>\r\n        </p>\r\n        <p>\r\n          In te ao Māori (the Māori world view), Tāngata (<em>TAHNG-uh-tuh</em>) describes something much larger than an addressed group of people: it describes <em>whakapapa</em>, the surrounding network of ancestors and descendants we are connected to.<br/>\r\n          With this work we intend to follow these principles to put our people first: not just the data &amp; analytics engineers, but those around our workplaces that know the deep details of how our businesses actually run.<br/>\r\n          These people are the lifeblood of what we do - and to keep moving forward, we need their context far more than ever.\r\n        </p>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}","export async function postUserConfig(user, newConfig) {\r\n    // console.log(newConfig);\r\n    var configToSend = {...newConfig};\r\n    delete configToSend._id;\r\n    delete configToSend.email;\r\n    delete configToSend.token;\r\n    const response = await fetch('/api/v1/set_user_config', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: \"Token \" + user.token},\r\n        body: JSON.stringify(configToSend)\r\n    });\r\n    return await response;\r\n}","export async function postServerConfig(user, newConfig) {\r\n    // console.log(newConfig);\r\n    var configToSend = {...newConfig};\r\n    const response = await fetch('/api/v1/set_server_config', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: \"Token \" + user.token},\r\n        body: JSON.stringify(configToSend)\r\n    });\r\n    return await response;\r\n}","export async function postFileUpload(uploadFormData, uploadType, user) {\r\n    const response = await fetch('/api/v1/file_upload', {\r\n        method: 'POST', \r\n        headers: {\r\n            'Authorization': \"Token \" + user.token,\r\n            'UploadType': uploadType\r\n        },\r\n        body: uploadFormData\r\n    });\r\n    return await response;\r\n}","export async function getDBTCloudAccounts(user) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/get_dbt_cloud_accounts', {\r\n        method: 'GET', \r\n        headers: {\r\n                Authorization: \"Token \" + user.token\r\n            }\r\n    })\r\n    return await response;\r\n}","export async function getDBTCloudJobs(user, account) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/get_dbt_cloud_jobs/' + account, {\r\n        method: 'GET', \r\n        headers: {\r\n                Authorization: \"Token \" + user.token\r\n            }\r\n    })\r\n    return await response;\r\n}","import {Button, Form, Tabs, Tab, TabContainer } from 'react-bootstrap';\r\nimport React, { useRef, useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { postUserConfig } from \"../services/postUserConfig\";\r\nimport { postServerConfig } from \"../services/postServerConfig\";\r\nimport { postFileUpload } from \"../services/postFileUpload\";\r\nimport { refreshMetadata } from \"../services/refreshMetadata\";\r\nimport { getDBTCloudAccounts } from \"../services/getDBTCloudAccounts\";\r\nimport { getDBTCloudJobs } from \"../services/getDBTCloudJobs\";\r\nexport default function Config(props) {\r\n  const [copySuccess, setCopySuccess] = useState('');\r\n  const [dbtMethod, setdbtMethod] = useState('LiveDB');\r\n  const [dbtAccounts, setdbtAccounts] = useState({});\r\n  const [dbtDocsJobs, setdbtDocsJobs] = useState({});\r\n  const sshKeyRef = useRef(null);\r\n  const dbtCloudKey = useRef(null);\r\n  const dbtAccountRef = useRef(null);\r\n  const dbtJobRef = useRef(null);\r\n  \r\n  function copyToClipboard(e) {\r\n    sshKeyRef.current.select();\r\n    document.execCommand('copy');\r\n    // This is just personal preference.\r\n    // I prefer to not show the whole text area selected.\r\n    e.target.focus();\r\n    setCopySuccess('Copied!');\r\n  };\r\n\r\n\r\n  // console.log(props.userConfig);\r\n  console.log(props.serverConfig);\r\n\r\n  function updateConfigValue(newValue, updatedField) {\r\n    var newConfig = {...props.userConfig};\r\n    newConfig[updatedField] = newValue;\r\n    props.setUserConfig(newConfig);\r\n    postUserConfig(props.user, newConfig);\r\n  }\r\n  \r\n  function updateServerConfigValue(newValue, updatedField) {\r\n    var newServerConfig = {...props.serverConfig};\r\n    newServerConfig[updatedField] = newValue;\r\n    props.setServerConfig(newServerConfig);\r\n    postServerConfig(props.user, newServerConfig);\r\n  }\r\n\r\n  function uploadFile(uploadedFiles, uploadType) {\r\n    // console.log(uploadedFiles[0]);\r\n    if(uploadedFiles.length>0) {\r\n      const uploadData = new FormData();\r\n      uploadData.append('file', uploadedFiles[0]);\r\n      postFileUpload(uploadData, uploadType, props.user)\r\n      .then(response=> {\r\n        // console.log(response);\r\n        if(response.ok === true) {\r\n          // console.log(\"Success\");\r\n          props.toastSender(\"\" + uploadType + \" Upload Successful.\",\"success\");\r\n        } else {\r\n          response.text()\r\n          .then(responseText=> {\r\n            // console.log(response);\r\n            // console.log(responseText);\r\n            props.toastSender(\"\" + uploadType + \" Upload Failed: \\n\" + responseText,\"error\");\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function updateDBTCloudKey(newKey) {\r\n    if(newKey.length>0) {\r\n      const uploadData = new FormData();\r\n      var keyFile = new Blob([newKey], {type: 'text/plain'});\r\n        uploadData.append('file', keyFile);\r\n        postFileUpload(uploadData, 'dbt_ Cloud Key', props.user)\r\n        .then(response=> {\r\n          // console.log(response);\r\n          if(response.ok === true) {\r\n            // console.log(\"Success\");\r\n            props.toastSender(\"dbt_ Cloud Key Upload Successful.\",\"success\");\r\n          } else {\r\n            response.text()\r\n            .then(responseText=> {\r\n              // console.log(response);\r\n              // console.log(responseText);\r\n              props.toastSender(\"dbt_ Cloud Key Upload Failed: \\n\" + responseText,\"error\");\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  function updateDBTCloudConfig() { //doing it manually rather than updateConfigValue because it's two at once - saving one without the other breaks existing config\r\n    var newConfig = {...props.userConfig};\r\n    newConfig[\"dbt_cloud_account\"] = dbtAccountRef.current.value;\r\n    newConfig[\"dbt_cloud_job\"] = dbtJobRef.current.value;\r\n    postUserConfig(props.user, newConfig);\r\n    props.setUserConfig(newConfig);\r\n  }\r\n\r\n  function loadDBTAccounts() {\r\n    getDBTCloudAccounts(props.user)\r\n    .then(response=> response.json())\r\n    .then(returnedDBTCloudAccounts => {\r\n      // console.log(returnedDBTCloudAccounts);\r\n      setdbtAccounts(returnedDBTCloudAccounts);\r\n      selectAccount();\r\n    })\r\n  }\r\n\r\n  function selectAccount() {\r\n    // console.log(\"Account Selected\")\r\n    // console.log(dbtAccountRef.current.value);\r\n    getDBTCloudJobs(props.user, dbtAccountRef.current.value)\r\n    .then(response=> response.json())\r\n    .then(returnedDBTCloudJobs => {\r\n      // console.log(returnedDBTCloudJobs);\r\n      setdbtDocsJobs(returnedDBTCloudJobs);\r\n    });\r\n  }\r\n\r\n  function listDBTDocsJobs() {\r\n    // console.log(dbtDocsJobs);\r\n    return dbtDocsJobs.map((job, index) => {return(<option key={\"dbt job \"+index} value={job.id}>{job.id}: {job.name}</option>)})\r\n  }\r\n  function dbtDocsJobsSelect() {\r\n    if(dbtDocsJobs.length > 0) {\r\n      return(\r\n        <>\r\n          <Form.Group size=\"lg\" controlId=\"dbt_cloud_jobs\">\r\n            <Form.Label>dbt_ Cloud Jobs</Form.Label>\r\n            <Form.Control\r\n              autoFocus\r\n              as=\"select\"\r\n              custom\r\n              ref={dbtJobRef}\r\n            >\r\n              {listDBTDocsJobs()}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"m-1\"\r\n            onClick={(e) => {e.stopPropagation(); updateDBTCloudConfig();}}\r\n          >\r\n            Save\r\n          </Button>\r\n        </>\r\n      );\r\n    } else return null;\r\n  }\r\n\r\n  function listDBTAccounts() {\r\n    return dbtAccounts.map((account, index) => {return(<option key={\"dbt account \"+index} value={account.id}>{account.id}: {account.name}</option>)})\r\n  }\r\n  function dbtAccountsSelect() {\r\n    if(dbtAccounts.length > 0) {\r\n      return(\r\n        <Form.Group size=\"lg\" controlId=\"dbt_cloud_accounts\">\r\n          <Form.Label>dbt_ Cloud Accounts</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            as=\"select\"\r\n            custom\r\n            ref={dbtAccountRef}\r\n            onChange={e => selectAccount()}\r\n          >\r\n            {listDBTAccounts()}\r\n          </Form.Control>\r\n        </Form.Group>);\r\n    } else return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <h1>Config</h1>\r\n      <Tabs defaultActiveKey={props.hostVersion === 'python' ? \"modelPromotion\" : \"userdetails\"} id=\"config\">\r\n        <Tab eventKey=\"userdetails\" title=\"User Details\" className=\"border-right border-left border-bottom p-3\" tabClassName={props.hostVersion === 'python' ? 'd-none' : ''}>\r\n          <Form>\r\n            {/* <Form.Group size=\"lg\" controlId=\"loginEmail\"> //let's not change email addresses for now.\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={props.user.email}\r\n                onChange={(e) => updateConfigValue(e.target.value, \"email\")}\r\n              />\r\n            </Form.Group> */}\r\n            <Form.Group size=\"lg\" controlId=\"firstname\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={props.userConfig.firstname}\r\n                onChange={(e) => updateConfigValue(e.target.value, \"firstname\")}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"lastname\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={props.userConfig.lastname}\r\n                onChange={(e) => updateConfigValue(e.target.value, \"lastname\")}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Tab>\r\n        <Tab eventKey=\"gitConfig\" title=\"Git Config\" className=\"border-right border-left border-bottom p-3\" tabClassName={props.hostVersion === 'python' ? 'd-none' : ''}>\r\n          <Form>\r\n            <Form.Group size=\"lg\" controlId=\"gitSSHKey\">\r\n              <Form.Label>SSH Key</Form.Label>\r\n              <br/>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={(e) => {e.stopPropagation(); props.setSSHKey()}}\r\n                className=\"m-1\"\r\n              >\r\n                Get current SSH public key\r\n              </Button>\r\n              <Button\r\n                variant=\"warning\"\r\n                className=\"m-1\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  let checkIntent = prompt(\"This will delete any current SSH keys. Please type 'New Key' to continue\");\r\n                  if(checkIntent === \"New Key\") {\r\n                    props.generateSSHKey()\r\n                  }\r\n                }}\r\n              >\r\n                Create new SSH Key\r\n              </Button>\r\n              <Form.Control\r\n                autoFocus\r\n                as=\"textarea\"\r\n                rows={2}\r\n                value={props.sshKey}\r\n                ref={sshKeyRef}\r\n                // onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              {\r\n              /* Logical shortcut for only displaying the \r\n                  button if the copy command exists */\r\n              document.queryCommandSupported('copy') &&\r\n                <div>\r\n                  <Button variant=\"primary\" onClick={copyToClipboard} className=\"m-1\">Copy</Button> \r\n                  {copySuccess}\r\n                </div>\r\n              }\r\n              <Form.Text id=\"gitSSHHelpBlock\" muted>\r\n                Where to add your key:<br/>\r\n                <a href=\"https://github.com/settings/ssh/new\">GitHub SSH Keys - Add New</a><br/>\r\n                <a href=\"https://gitlab.com/profile/keys\">GitLab SSH Keys - Add an SSH key</a><br/>\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"gitrepo\">\r\n              <Form.Label>Git SSH URL</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={props.userConfig.gitrepo || ''}\r\n                onChange={(e) => updateConfigValue(e.target.value, \"gitrepo\")}\r\n              />\r\n              <Form.Text id=\"gitSSHHelpBlock\" muted>\r\n                Examples:<br/>\r\n                git@github.com:yourname/yourproject.git<br/>\r\n                git@gitlab.com:yourname/yourproject.git\r\n              </Form.Text>\r\n            </Form.Group>\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"m-1\"\r\n                onClick={(e) => {e.stopPropagation(); props.openGitConnection()}}\r\n              >\r\n                Clone Git Repository\r\n              </Button>\r\n          </Form>\r\n        </Tab>\r\n        <Tab eventKey=\"dbtConfig\" title=\"DBT Config\" className=\"border-right border-left border-bottom p-3\" tabClassName={props.hostVersion === 'python' ? 'd-none' : ''}>\r\n          <Form>\r\n            <Form.Group size=\"lg\" controlId=\"dbtConfigMethod\">\r\n              <Form.Label>dbt_ Config Method</Form.Label>\r\n              <div key={'custom-inline-radio'} className=\"mb-3\">\r\n                <Form.Check\r\n                  custom\r\n                  inline\r\n                  label=\"Live Database Connection\"\r\n                  type='radio'\r\n                  id={'LiveDB'}\r\n                  checked={props.userConfig.dbtmethod===\"LiveDB\"}\r\n                  onClick={(e) => {e.stopPropagation(); updateConfigValue(\"LiveDB\", \"dbtmethod\")}}\r\n                />\r\n                <Form.Check\r\n                  custom\r\n                  inline\r\n                  label=\"Upload Compiled Metadata\"\r\n                  type='radio'\r\n                  id={'UploadMetadata'}\r\n                  checked={props.userConfig.dbtmethod===\"UploadMetadata\"}\r\n                  onClick={(e) => {e.stopPropagation(); updateConfigValue(\"UploadMetadata\", \"dbtmethod\")}}\r\n                />\r\n                <Form.Check\r\n                  custom\r\n                  inline\r\n                  label=\"dbt_ Cloud API\"\r\n                  type='radio'\r\n                  id={'Cloud'}\r\n                  checked={props.userConfig.dbtmethod===\"Cloud\"}\r\n                  onClick={(e) => {e.stopPropagation(); updateConfigValue(\"Cloud\", \"dbtmethod\")}}\r\n                />\r\n              </div>\r\n            </Form.Group>\r\n            <hr/>\r\n            <div className={props.userConfig.dbtmethod===\"LiveDB\"?null:\"d-none\"}>\r\n              <Form.Group size=\"lg\" controlId=\"uploadProfilesYML\">\r\n                <Form.Label>Upload Profiles.YML</Form.Label>\r\n                <Form.File\r\n                  className=\"position-relative\"\r\n                  required\r\n                  name=\"profilesYMLUpload\"\r\n                  onChange={(e) => uploadFile(e.target.files, \"ProfilesYML\") }\r\n                  // isInvalid={!!errors.file}\r\n                  // feedback={errors.file}\r\n                  id=\"profilesYMLUpload\"\r\n                  feedbackTooltip\r\n                />\r\n                <Form.Text id=\"profilesYMLHelpBlock\" muted>\r\n                  To connect to your database, DBT requires a profiles.yml file. See <a href=\"https://docs.getdbt.com/dbt-cli/configure-your-profile\">the dbt_ docs</a> for setup details.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"m-1\"\r\n                onClick={(e) => {e.stopPropagation(); props.checkDBTConnection()}}\r\n              >\r\n                Check DBT Connection\r\n              </Button>\r\n            </div>\r\n            <div className={props.userConfig.dbtmethod===\"UploadMetadata\"?null:\"d-none\"}>\r\n              <p><i>To run without connecting to your database, the catalog requires metadata from dbt_.<br/>\r\n              Run <code>dbt docs generate</code> in your dbt_ project, and upload the Manifest and Catalog from /target.</i></p>\r\n              <p><i>To automate this upload, download <code>tangata_refresh.py</code> from the Tangata git repository, and run it in the root of your project.</i></p> \r\n              <Form.Group size=\"lg\" controlId=\"uploadManifestJSON\">\r\n                <Form.Label>Upload manifest.json</Form.Label>\r\n                <Form.File\r\n                  className=\"position-relative\"\r\n                  required\r\n                  name=\"manifestJSONUpload\"\r\n                  onChange={(e) => uploadFile(e.target.files, \"ManifestJSON\") }\r\n                  // isInvalid={!!errors.file}\r\n                  // feedback={errors.file}\r\n                  id=\"manifestJSONUpload\"\r\n                  feedbackTooltip\r\n                />\r\n              </Form.Group>\r\n              <Form.Group size=\"lg\" controlId=\"uploadCatalogJSON\">\r\n                <Form.Label>Upload catalog.json</Form.Label>\r\n                <Form.File\r\n                  className=\"position-relative\"\r\n                  required\r\n                  name=\"catalogJSONUpload\"\r\n                  onChange={(e) => uploadFile(e.target.files, \"CatalogJSON\") }\r\n                  // isInvalid={!!errors.file}\r\n                  // feedback={errors.file}\r\n                  id=\"catalogJSONUpload\"\r\n                  feedbackTooltip\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"m-1\"\r\n                onClick={(e) => {e.stopPropagation(); refreshMetadata(props.user);}}\r\n              >\r\n                Load Metadata\r\n              </Button>\r\n            </div>\r\n            <div className={props.userConfig.dbtmethod===\"Cloud\"?null:\"d-none\"}>\r\n              <Form.Group size=\"lg\" controlId=\"firstname\">\r\n                <Form.Label>dbt_ Cloud API Key</Form.Label>\r\n                <Form.Control\r\n                  autoFocus\r\n                  type=\"text\"\r\n                  placeholder=\"Change dbt_ Cloud Key\"\r\n                  ref={dbtCloudKey}\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"m-1\"\r\n                onClick={(e) => {e.stopPropagation(); updateDBTCloudKey(dbtCloudKey.current.value); loadDBTAccounts();}}\r\n              >Load dbt_ Cloud Accounts</Button>\r\n              {dbtAccountsSelect()}\r\n              {dbtDocsJobsSelect()}\r\n            </div>\r\n          </Form>\r\n        </Tab>\r\n        <Tab eventKey=\"modelPromotion\" title=\"Model Promotion\" className=\"border-right border-left border-bottom p-3\" tabClassName={props.hostVersion !== 'python' ? 'd-none' : ''}>\r\n        {/* TODO: Add Node config for this */}\r\n          <Form>\r\n            <Form.Group size=\"lg\" controlId=\"promotion_tag\">\r\n              <Form.Label>Promotion Tag</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                defaultValue={props.serverConfig.promotion_tag}\r\n                onChange={(e) => updateServerConfigValue(e.target.value, \"promotion_tag\")}\r\n              />\r\n              <Form.Text id=\"promotionTagHelpBlock\" muted>\r\n                This tag will be used in your dbt repository for models you promote in Tāngata. These models will be highlighted in search.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"demotion_tag\">\r\n              <Form.Label>Demotion Tag</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                defaultValue={props.serverConfig.demotion_tag}\r\n                onChange={(e) => updateServerConfigValue(e.target.value, \"demotion_tag\")}\r\n              />\r\n              <Form.Text id=\"demotionTagHelpBlock\" muted>\r\n                This tag will be used in your dbt repository for models you demote in Tāngata. These models will be dimmed in search, and will appear after other results.\r\n              </Form.Text>\r\n            </Form.Group>\r\n          </Form>\r\n        </Tab>\r\n        <Tab eventKey=\"yamlConfig\" title=\"YAML Config\" className=\"border-right border-left border-bottom p-3\" tabClassName={props.hostVersion !== 'python' ? 'd-none' : ''}>\r\n        {/* TODO: Add Node config for this */}\r\n          <Form>\r\n            <Form.Group size=\"lg\" controlId=\"newYAMLNaming\">\r\n              <Form.Label>New YAML file behaviour</Form.Label>\r\n              <div key={'custom-inline-radio'} className=\"mb-3\">\r\n                <Form.Check\r\n                  custom\r\n                  inline\r\n                  label=\"One YAML per folder, named foldername.yml\"\r\n                  type='radio'\r\n                  id={'file_per_folder__folder_name'}\r\n                  checked={props.serverConfig.schema_file_settings===\"file_per_folder__folder_name\"}\r\n                  onClick={(e) => {e.stopPropagation(); updateServerConfigValue(\"file_per_folder__folder_name\", \"schema_file_settings\")}}\r\n                />\r\n                <Form.Check\r\n                  custom\r\n                  inline\r\n                  label=\"One YAML per folder, named schema.yml\"\r\n                  type='radio'\r\n                  id={'file_per_folder__schema_yml'}\r\n                  checked={props.serverConfig.schema_file_settings===\"file_per_folder__schema_yml\"}\r\n                  onClick={(e) => {e.stopPropagation(); updateServerConfigValue(\"file_per_folder__schema_yml\", \"schema_file_settings\")}}\r\n                />\r\n                <Form.Check\r\n                  custom\r\n                  inline\r\n                  label=\"One YAML per model, named modelname.yml\"\r\n                  type='radio'\r\n                  id={'file_per_model__model_name'}\r\n                  checked={props.serverConfig.schema_file_settings===\"file_per_model__model_name\"}\r\n                  onClick={(e) => {e.stopPropagation(); updateServerConfigValue(\"file_per_model__model_name\", \"schema_file_settings\")}}\r\n                />\r\n              </div>\r\n            </Form.Group>\r\n          </Form>\r\n        </Tab>\r\n        {/* <Tab eventKey=\"password\" title=\"Change Password\" className=\"border-right border-left border-bottom p-3\">\r\n        <Form>\r\n            <Form.Group size=\"lg\" controlId=\"loginPassword\">\r\n              <Form.Label>Current Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                // onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"newPassword\">\r\n              <Form.Label>New Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                // onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"repeatNewPassword\">\r\n              <Form.Label>Repeat New Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                // onChange={(e) => setPassword(e.target.value)}\r\n              />`\r\n            </Form.Group>\r\n          </Form>\r\n        </Tab> */}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport {Modal, Button, Form, Container} from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport function EditJoinPanel( {model, modelIndex, saveEditedModel, models, toggleJoinModal, showJoinModal}) {\r\n  const [newModel, setModelState] = useState(model);\r\n  const { register, handleSubmit } = useForm();\r\n  if(modelIndex===0) return null;\r\n  // console.log(\"Start of join panel debug\");\r\n  // console.log(showJoinModal);\r\n  // console.log(models);\r\n  // console.log(modelIndex);\r\n  // console.log(model);\r\n  // console.log(newModel);\r\n\r\n    const handleClose = () => toggleJoinModal(-1);\r\n    const handleShow = () => {\r\n      setModelState(JSON.parse(JSON.stringify(model)));\r\n      toggleJoinModal(modelIndex);\r\n    }\r\n\r\n    const handleSaveAndClose = () => {\r\n      // TODO: Create join output columns\r\n      saveEditedModel(model, newModel);\r\n      handleClose();\r\n    }\r\n\r\n    // new join condition submit\r\n    const onSubmit = (data) => {\r\n      var newCondition = (\r\n        {\r\n          \"conditionField1\": {\r\n            \"model\": model.name,\r\n            \"column\": data.condition1Field\r\n          },\r\n          \"conditionOperator\": data.conditionOperator,\r\n          \"conditionField2\": {\r\n            \"model\": models.response.models[modelIndex-1].name,\r\n            \"column\": data.condition2Field\r\n          },\r\n          \"fullName\": model.name+\".\"+data.condition1Field+\" \"+data.conditionOperator+\" \"+models.response.models[modelIndex-1].name+\".\"+data.condition2Field\r\n        }\r\n        );\r\n\r\n      // saveEditedJoin(join, newJoin);\r\n      setModelState({...newModel, \"joinConditions\": newModel.joinConditions.concat(newCondition)})\r\n    }\r\n\r\n    const removeCondition = (condition) => {\r\n      setModelState({...newModel, \"joinConditions\": newModel.joinConditions.filter(conditions => conditions !== condition)});\r\n    }\r\n\r\n\r\n    const joinConditionRow = (condition, index, showRemove) => { // row per join condition\r\n      if(showRemove===false) {\r\n        return (\r\n          <tr className=\"row\" key={\"joinCondition_\" + index}>\r\n            <td className=\"col w-100\">\r\n              {condition.fullName}\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n      return(\r\n        <tr key={\"joinCondition_\" + index}>\r\n          <td className=\"p-2\">\r\n            {condition.fullName}\r\n          </td>\r\n          <td className=\"w-md-auto p-2\">\r\n            <Button variant=\"secondary\" onClick={() => removeCondition(condition)}>\r\n              Remove\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    const listJoinConditions = (showRemove) => newModel.joinConditions.map((condition, index) => {\r\n      return joinConditionRow(condition, index, showRemove);\r\n    }\r\n    );\r\n\r\n\r\n\r\n    const listModelColumns = (models,model,register,controlName) => {\r\n      const columnOption = (column,index) => {\r\n        return(\r\n          <option key={index}>{column}</option>\r\n        )\r\n      }\r\n\r\n      var listModel = {};\r\n      for(var modelIndex=0;modelIndex<models.response.models.length;modelIndex++) {\r\n        // console.log(models.response.models[modelIndex].name);\r\n        if(models.response.models[modelIndex].name===model) {\r\n          // console.log(\"matched\");\r\n          listModel = models.response.models[modelIndex];\r\n        }\r\n      }\r\n      // console.log(listModel);\r\n      if(listModel===null) return null;\r\n      if(listModel.columns.length===0) return null;\r\n      const tempListModelColumns = listModel.columns.map((column, index) => columnOption(column,index))\r\n      // console.log(tempListModelColumns);\r\n      return (\r\n        \r\n        <Form.Control as=\"select\" name={controlName} ref={register}>\r\n          {tempListModelColumns}\r\n        </Form.Control>\r\n      );\r\n    }\r\n    // console.log(\"before render editjoinpanel debug:\");\r\n    // console.log(models);\r\n    // console.log(modelIndex);\r\n    return (\r\n      <div>\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n          Edit Join\r\n        </Button>\r\n        <table className=\"table\">\r\n          <tbody>\r\n            {listJoinConditions(false)}\r\n          </tbody>\r\n        </table>\r\n        <Modal show={(showJoinModal === modelIndex)} onHide={handleClose} size=\"lg\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Join </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          <Container>\r\n            <h5>Join Conditions</h5>\r\n            <table className=\"table-striped table-bordered w-100\">\r\n              <tbody>\r\n              {listJoinConditions(true)}\r\n              </tbody>\r\n            </table>\r\n          </Container>\r\n          <Container className=\"mt-3\">\r\n            <h5>Add new Join Condition</h5>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              \r\n              <div className=\"row text-center \">\r\n                <div className=\"col\">\r\n                  <Form.Group>\r\n                    <Form.Label>{model.name}</Form.Label>\r\n                      {listModelColumns(models,model.name,register,\"condition1Field\")}\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col-md-auto\">\r\n                  <Form.Group>\r\n                    <Form.Label>Operator type</Form.Label>\r\n                    <Form.Control name=\"conditionOperator\" as=\"select\"  ref={register} >\r\n                      <option>=</option>\r\n                      <option>&gt;=</option>\r\n                      <option>&lt;=</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col\">\r\n                  \r\n                <Form.Group>\r\n                    <Form.Label>{models.response.models[modelIndex-1].name}</Form.Label>\r\n                      {listModelColumns(models,models.response.models[modelIndex-1].name,register,\"condition2Field\")}\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col-md-auto\">\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"joinConditionAddButton\">\r\n                    Add\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleSaveAndClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n","import React, {useState} from 'react';\r\n// import Draggable from 'react-draggable';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { EditJoinPanel } from './EditJoinPanel'\r\nimport { Container, Overlay, Table } from 'react-bootstrap';\r\n\r\n\r\nexport function Models ({models, modelDragEnd, showColumns, saveEditedModel, toggleJoinModal, showJoinModal, highlightedColumns, openContextMenu, contextMenuOpen, editSelect}) {\r\n    const [contextMenu, setContextMenu] = useState({\"x\":null,\"y\":null,\"display\":false});\r\n    // console.log(\"Models\");\r\n    // console.log(contextMenuOpen);\r\n    // console.log(contextMenuOpen);\r\n    // console.log(models);\r\n    // console.log(highlightedColumns);\r\n    if (models.length === 0) return null\r\n      \r\n    if(contextMenuOpen === false && contextMenu.display===true) { //add this to every other component that has context menus\r\n        setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n      }\r\n\r\n      const contextMenuDisplay = (contextMenu, models) => {\r\n        if(contextMenu.display === false) return null;\r\n        // console.log(\"Displaying Context Menu\");\r\n        // console.log(contextMenu);\r\n    \r\n        // console.log(contextMenu.target.firstChild.data);\r\n        // console.log(contextMenu.target);\r\n        // console.log(JSON.parse(contextMenu.target.dataset.selectvalue));\r\n        // console.log(contextMenu.target.dataset.selectvalue.model);\r\n        const addToSelect = (selectToAdd) => {\r\n          editSelect(null,selectToAdd);\r\n          openContextMenu(false);\r\n        };\r\n        return(\r\n          <div>\r\n            <Overlay target={contextMenu.target} show={contextMenu.display} placement=\"right-start\">\r\n              <div>\r\n                <Table bordered variant=\"dark\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td onClick={() => addToSelect({\"inputColumns\": [{\"model\": contextMenu.target.parentNode.dataset.model, \"column\": contextMenu.target.parentNode.dataset.column}], \"alias\": contextMenu.target.parentNode.dataset.column})}>\r\n                        Add to Output\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </Overlay>\r\n          </div>\r\n        )\r\n      }\r\n\r\n\r\n    const modelDraw = (model,index,showColumns, showJoinModal, toggleJoinModal, highlightedColumns, handleClick) => {\r\n        const columnRows = (columns,showColumns) => {\r\n            const columnRow = (column,index) => {\r\n                const handleClick = (e) => {\r\n                    // console.log(e);\r\n                    if (e.type === 'click') {\r\n                    setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                    openContextMenu(false);\r\n                    } else if (e.type === 'contextmenu') {\r\n                    e.preventDefault();\r\n                    if(contextMenu.display===false) { //if contextMenu is not displayed\r\n                        setContextMenu({\"x\":e.pageX,\"y\":e.pageY,\"display\":true,\"clickTargetType\":\"Condition\",\"target\": e.target});\r\n                        openContextMenu(true);\r\n                    } else {\r\n                        setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                        openContextMenu(false);\r\n                    }\r\n                    }\r\n                }\r\n                // console.log(\"modelDraw\");\r\n                // console.log(model);\r\n                // console.log(column);\r\n                var highlightThisColumn = false;\r\n                for(var highlightedColumnIndex=0;highlightedColumnIndex<highlightedColumns.length;highlightedColumnIndex++) {\r\n                    if(model.name===highlightedColumns[highlightedColumnIndex].model && column===highlightedColumns[highlightedColumnIndex].column) {\r\n                        highlightThisColumn = true;\r\n                    }\r\n                }\r\n                return(\r\n                    <tr\r\n                        key = {index}\r\n                        className={index%2 === 0?'odd':'even'}\r\n                        onClick={(e) => handleClick(e)}\r\n                        onContextMenu={(e) => handleClick(e)}\r\n                        data-model = {model.name}\r\n                        data-column = {column}\r\n                    >\r\n                        <td\r\n                            className={\"col-md-auto \"+(highlightThisColumn?\"highlightColumn\":null)}\r\n                        >\r\n                            {index + 1}\r\n                        </td>\r\n                        <td\r\n                            className={\"col \"+(highlightThisColumn?\"highlightColumn\":null)}\r\n                        >\r\n                            {column}\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            }\r\n            \r\n            const columnRowsOutput = columns.map((column,index) => columnRow(column,index));\r\n            return(<tbody>{columnRowsOutput}</tbody>);\r\n        }\r\n        return(\r\n        <Draggable key={\"model_\"+model.name} draggableId={model.name} index={index}>\r\n        {(provided, snapshot) => (\r\n            <div\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            className=\"col removeFocusOutline\"\r\n            >\r\n            <div className=\"w-100 bg-secondary text-white text-center font-weight-bold\">\r\n                {model.name}\r\n            </div>\r\n            <div className=\"w-100 bg-light text-dark text-center font-italic mb-3\">\r\n                {model.description}\r\n            </div>\r\n            <div className=\"w-100 bg-light text-dark text-center\">\r\n                <EditJoinPanel\r\n                    model = { model }\r\n                    saveEditedModel = { saveEditedModel }\r\n                    models = { models }\r\n                    showJoinModal = { showJoinModal }\r\n                    toggleJoinModal = { toggleJoinModal }\r\n                    modelIndex = { index }\r\n                />\r\n            </div>\r\n            <table className=\"table table-bordered table-striped table-hover w-100\">\r\n                    {showColumns===true ? columnRows(model.columns) : null}\r\n            </table>\r\n            </div>\r\n        )}\r\n        </Draggable>)\r\n    }\r\n    const modelsDraw = (models,showColumns, showJoinModal, toggleJoinModal) => \r\n        models.response.models.map((model,index) => {\r\n            return modelDraw(model,index,showColumns, showJoinModal, toggleJoinModal, highlightedColumns)\r\n        }\r\n        );\r\n    \r\n    \r\n\r\n    const ModelTable = () => {\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                \r\n\r\n                <DragDropContext onDragEnd={modelDragEnd}> \r\n                {/* TODO: only allow reordering models if they are all models\r\n                TODO: only allow two models in a join */}\r\n                    <Droppable droppableId=\"droppable\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        >\r\n                        {modelsDraw(models,showColumns, showJoinModal, toggleJoinModal, highlightedColumns)}\r\n                        {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"text-center\">\r\n            <h2>Models</h2>\r\n            {ModelTable()}\r\n            {contextMenuDisplay(contextMenu, models)}\r\n        </div>\r\n    )\r\n}\r\n","// MIT License\r\n\r\n// Copyright (c) 2016 Yury Dymov\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\n\r\nimport React, { createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport getCaretCoordinates from 'textarea-caret';\r\nimport getInputSelection, { setCaretPosition } from 'get-input-selection';\r\n\r\nconst KEY_UP = 38;\r\nconst KEY_DOWN = 40;\r\nconst KEY_RETURN = 13;\r\nconst KEY_ENTER = 14;\r\nconst KEY_ESCAPE = 27;\r\nconst KEY_TAB = 9;\r\n\r\nconst OPTION_LIST_Y_OFFSET = 10;\r\nconst OPTION_LIST_MIN_WIDTH = 100;\r\n\r\nconst propTypes = {\r\n  Component: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.elementType,\r\n  ]),\r\n  defaultValue: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  maxOptions: PropTypes.number,\r\n  onBlur: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  onKeyDown: PropTypes.func,\r\n  onRequestOptions: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  options: PropTypes.arrayOf(PropTypes.object),\r\n  regex: PropTypes.string,\r\n  matchAny: PropTypes.bool,\r\n  minChars: PropTypes.number,\r\n  requestOnlyIfNoOptions: PropTypes.bool,\r\n  spaceRemovers: PropTypes.arrayOf(PropTypes.string),\r\n  spacer: PropTypes.string,\r\n  trigger: PropTypes.string,\r\n  value: PropTypes.string,\r\n  offsetX: PropTypes.number,\r\n  offsetY: PropTypes.number,\r\n  passThroughEnter: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  Component: 'textarea',\r\n  defaultValue: '',\r\n  disabled: false,\r\n  maxOptions: 6,\r\n  onBlur: () => {},\r\n  onChange: () => {},\r\n  onKeyDown: () => {},\r\n  onRequestOptions: () => {},\r\n  onSelect: () => {},\r\n  options: [],\r\n  fullOptions: [],\r\n  regex: '^[A-Za-z0-9\\\\-_]+$',\r\n  matchAny: false,\r\n  minChars: 0,\r\n  requestOnlyIfNoOptions: true,\r\n  spaceRemovers: [',', '.', '!', '?'],\r\n  spacer: ' ',\r\n  trigger: '@',\r\n  offsetX: 0,\r\n  offsetY: 0,\r\n  value: null,\r\n  passThroughEnter: false,\r\n};\r\n\r\nclass AutocompleteTextField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.isTrigger = this.isTrigger.bind(this);\r\n    this.getMatch = this.getMatch.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleResize = this.handleResize.bind(this);\r\n    this.handleSelection = this.handleSelection.bind(this);\r\n    this.updateCaretPosition = this.updateCaretPosition.bind(this);\r\n    this.updateHelper = this.updateHelper.bind(this);\r\n    this.resetHelper = this.resetHelper.bind(this);\r\n    this.renderAutocompleteList = this.renderAutocompleteList.bind(this);\r\n\r\n    this.state = {\r\n      helperVisible: false,\r\n      left: 0,\r\n      matchLength: 0,\r\n      matchStart: 0,\r\n      options: [],\r\n      fullOptions: [],\r\n      selection: 0,\r\n      top: 0,\r\n      value: null,\r\n    };\r\n\r\n    this.recentValue = props.defaultValue;\r\n    this.enableSpaceRemovers = false;\r\n    this.refInput = createRef();\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.handleResize);\r\n    // console.log(\"Autocomplete\");\r\n    // console.log(this.recentValue);\r\n    // console.log(this.state.fullOptions);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { options } = this.props;\r\n    const { fullOptions } = this.props;\r\n    const { caret } = this.state;\r\n\r\n    if (options.length !== prevProps.options.length) {\r\n      this.updateHelper(this.recentValue, caret, options, fullOptions);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  getMatch(str, caret, providedOptions, fullOptions) {\r\n    const { trigger, matchAny, regex } = this.props;\r\n    const re = new RegExp(regex);\r\n    const triggerLength = trigger.length;\r\n    const triggerMatch = trigger.match(re);\r\n\r\n    for (let i = caret - 1; i >= 0; --i) {\r\n      const substr = str.substring(i, caret);\r\n      const match = substr.match(re);\r\n      let matchStart = -1;\r\n\r\n      if (triggerLength > 0) {\r\n        const triggerIdx = triggerMatch ? i : i - triggerLength + 1;\r\n\r\n        if (triggerIdx < 0) { // out of input\r\n          return null;\r\n        }\r\n\r\n        if (this.isTrigger(str, triggerIdx)) {\r\n          matchStart = triggerIdx + triggerLength;\r\n        }\r\n\r\n        if (!match && matchStart < 0) {\r\n          return null;\r\n        }\r\n      } else {\r\n        if (match && i > 0) { // find first non-matching character or begin of input\r\n          continue;\r\n        }\r\n        matchStart = i === 0 && match ? 0 : i + 1;\r\n\r\n        if (caret - matchStart === 0) { // matched slug is empty\r\n          return null;\r\n        }\r\n      }\r\n\r\n      if (matchStart >= 0) {\r\n        const matchedSlug = str.substring(matchStart, caret);\r\n        \r\n        const options = providedOptions.filter((slug) => {\r\n          const idx = slug.toLowerCase().indexOf(matchedSlug.toLowerCase());\r\n          return idx !== -1 && (matchAny || idx === 0);\r\n        });\r\n        var newFullOptions = [];\r\n        for(var j=0;j<providedOptions.length;j++) {\r\n            const matchIdx = providedOptions[j].toLowerCase().indexOf(matchedSlug.toLowerCase());\r\n            if(matchIdx !== -1 && (matchAny || matchIdx === 0))\r\n            // console.log(j);\r\n            newFullOptions.push(this.props.fullOptions[j]);\r\n        }\r\n        this.setState({\"fullOptions\": newFullOptions});\r\n        const matchLength = matchedSlug.length;\r\n        // console.log(\"returning slug:\")\r\n        // console.log(options);\r\n        // console.log(newFullOptions);\r\n        // console.log(this.props.fullOptions);\r\n\r\n        return { matchStart, matchLength, options };\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  isTrigger(str, i) {\r\n    const { trigger } = this.props;\r\n\r\n    if (!trigger || !trigger.length) {\r\n      return true;\r\n    }\r\n\r\n    if (str.substr(i, trigger.length) === trigger) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  handleChange(e) {\r\n    const {\r\n      onChange,\r\n      options,\r\n      fullOptions,\r\n      spaceRemovers,\r\n      spacer,\r\n      value,\r\n    } = this.props;\r\n\r\n    const old = this.recentValue;\r\n    const str = e.target.value;\r\n    const caret = getInputSelection(e.target).end;\r\n\r\n    if (!str.length) {\r\n      this.setState({ helperVisible: false });\r\n    }\r\n\r\n    this.recentValue = str;\r\n\r\n    this.setState({ caret, value: e.target.value });\r\n\r\n    if (!str.length || !caret) {\r\n      return onChange(e.target.value);\r\n    }\r\n\r\n    // '@wonderjenny ,|' -> '@wonderjenny, |'\r\n    if (this.enableSpaceRemovers && spaceRemovers.length && str.length > 2 && spacer.length) {\r\n      for (let i = 0; i < Math.max(old.length, str.length); ++i) {\r\n        if (old[i] !== str[i]) {\r\n          if (\r\n            i >= 2\r\n            && str[i - 1] === spacer\r\n            && spaceRemovers.indexOf(str[i - 2]) === -1\r\n            && spaceRemovers.indexOf(str[i]) !== -1\r\n            && this.getMatch(str.substring(0, i - 2), caret - 3, options, fullOptions)\r\n          ) {\r\n            const newValue = (`${str.slice(0, i - 1)}${str.slice(i, i + 1)}${str.slice(i - 1, i)}${str.slice(i + 1)}`);\r\n\r\n            this.updateCaretPosition(i + 1);\r\n            this.refInput.current.value = newValue;\r\n\r\n            if (!value) {\r\n              this.setState({ value: newValue });\r\n            }\r\n\r\n            return onChange(newValue);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.enableSpaceRemovers = false;\r\n    }\r\n\r\n    this.updateHelper(str, caret, options, fullOptions);\r\n\r\n    if (!value) {\r\n      this.setState({ value: e.target.value });\r\n    }\r\n\r\n    return onChange(e.target.value);\r\n  }\r\n\r\n  handleKeyDown(event) {\r\n    const { helperVisible, options, selection } = this.state;\r\n    const { onKeyDown, passThroughEnter } = this.props;\r\n\r\n    if (helperVisible) {\r\n      switch (event.keyCode) {\r\n        case KEY_ESCAPE:\r\n          event.preventDefault();\r\n          this.resetHelper();\r\n          break;\r\n        case KEY_UP:\r\n          event.preventDefault();\r\n          this.setState({ selection: ((options.length + selection) - 1) % options.length });\r\n          break;\r\n        case KEY_DOWN:\r\n          event.preventDefault();\r\n          this.setState({ selection: (selection + 1) % options.length });\r\n          break;\r\n        case KEY_ENTER:\r\n        case KEY_RETURN:\r\n          if (!passThroughEnter) { event.preventDefault(); }\r\n          this.handleSelection(selection);\r\n          break;\r\n        case KEY_TAB:\r\n          this.handleSelection(selection);\r\n          break;\r\n        default:\r\n          onKeyDown(event);\r\n          break;\r\n      }\r\n    } else {\r\n      onKeyDown(event);\r\n    }\r\n  }\r\n\r\n  handleResize() {\r\n    this.setState({ helperVisible: false });\r\n  }\r\n\r\n  handleSelection(idx) {\r\n    const { matchStart, matchLength, fullOptions } = this.state;\r\n    const { spacer, onSelect } = this.props;\r\n    // console.log(\"handleSelection\");\r\n    // console.log(idx);\r\n    // console.log(fullOptions);\r\n    const slug = fullOptions[idx];\r\n    const value = this.recentValue;\r\n    const part1 = value.substring(0, matchStart);\r\n    const part2 = value.substring(matchStart + matchLength);\r\n\r\n    const event = { target: this.refInput.current };\r\n\r\n    event.target.value = `${part1}${slug}${spacer}${part2}`;\r\n    this.handleChange(event);\r\n    onSelect(event.target.value);\r\n\r\n    this.resetHelper();\r\n\r\n    this.updateCaretPosition(part1.length + slug.length + 1);\r\n\r\n    this.enableSpaceRemovers = true;\r\n  }\r\n\r\n  updateCaretPosition(caret) {\r\n    this.setState({ caret }, () => setCaretPosition(this.refInput.current, caret));\r\n  }\r\n\r\n  updateHelper(str, caret, options, fullOptions) {\r\n    const input = this.refInput.current;\r\n\r\n    const slug = this.getMatch(str, caret, options, fullOptions);\r\n    // console.log(\"updateHelper\");\r\n    // console.log(slug);\r\n    if (slug) {\r\n      const caretPos = getCaretCoordinates(input, caret);\r\n      const rect = input.getBoundingClientRect();\r\n\r\n      const top = caretPos.top + input.offsetTop;\r\n      const left = Math.min(\r\n        caretPos.left + input.offsetLeft - OPTION_LIST_Y_OFFSET,\r\n        input.offsetLeft + rect.width - OPTION_LIST_MIN_WIDTH,\r\n      );\r\n\r\n      const { minChars, onRequestOptions, requestOnlyIfNoOptions } = this.props;\r\n\r\n      if (\r\n        slug.matchLength >= minChars\r\n        && (\r\n          slug.options.length > 1\r\n          || (\r\n            slug.options.length === 1\r\n            && slug.options[0].length !== slug.matchLength\r\n          )\r\n        )\r\n      ) {\r\n        this.setState({\r\n          helperVisible: true,\r\n          top,\r\n          left,\r\n          ...slug,\r\n        });\r\n      } else {\r\n        if (!requestOnlyIfNoOptions || !slug.options.length) {\r\n          onRequestOptions(str.substr(slug.matchStart, slug.matchLength));\r\n        }\r\n\r\n        this.resetHelper();\r\n      }\r\n    } else {\r\n      this.resetHelper();\r\n    }\r\n  }\r\n\r\n  resetHelper() {\r\n    this.setState({ helperVisible: false, selection: 0 });\r\n  }\r\n\r\n  renderAutocompleteList() {\r\n    const {\r\n      helperVisible,\r\n      left,\r\n      matchStart,\r\n      matchLength,\r\n      options,\r\n      fullOptions,\r\n      selection,\r\n      top,\r\n      value,\r\n    } = this.state;\r\n\r\n    if (!helperVisible) {\r\n      return null;\r\n    }\r\n\r\n    const { maxOptions, offsetX, offsetY } = this.props;\r\n\r\n    if (options.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    if (selection >= options.length) {\r\n      this.setState({ selection: 0 });\r\n\r\n      return null;\r\n    }\r\n\r\n    const optionNumber = maxOptions === 0 ? options.length : maxOptions;\r\n\r\n    const helperOptions = options.slice(0, optionNumber).map((val, idx) => {\r\n      const highlightStart = val.toLowerCase().indexOf(value.substr(matchStart, matchLength).toLowerCase());\r\n\r\n      return (\r\n        <li\r\n          className={idx === selection ? 'active' : null}\r\n          key={val}\r\n          onClick={() => { this.handleSelection(idx); }}\r\n          onMouseEnter={() => { this.setState({ selection: idx }); }}\r\n        >\r\n          {val.slice(0, highlightStart)}\r\n          <strong>{val.substr(highlightStart, matchLength)}</strong>\r\n          {val.slice(highlightStart + matchLength)}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <ul className=\"react-autocomplete-input\" style={{ left: left + offsetX, top: top + offsetY }}>\r\n        {helperOptions}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      Component,\r\n      defaultValue,\r\n      disabled,\r\n      onBlur,\r\n      value,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    const { value: stateValue } = this.state;\r\n\r\n    const propagated = Object.assign({}, rest);\r\n    Object.keys(this.constructor.propTypes).forEach((k) => { delete propagated[k]; });\r\n\r\n    let val = '';\r\n\r\n    if (typeof value !== 'undefined' && value !== null) {\r\n      val = value;\r\n    } else if (stateValue) {\r\n      val = stateValue;\r\n    } else if (defaultValue) {\r\n      val = defaultValue;\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        <Component\r\n          disabled={disabled}\r\n          onBlur={onBlur}\r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          ref={this.refInput}\r\n          value={val}\r\n          {...propagated}\r\n        />\r\n        {this.renderAutocompleteList()}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nAutocompleteTextField.propTypes = propTypes;\r\nAutocompleteTextField.defaultProps = defaultProps;\r\n\r\nexport default AutocompleteTextField;","import React, {useState} from 'react';\r\nimport {Container, Modal, Row, Col, Overlay, Table, Button, Form } from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\n// import Draggable from 'react-draggable';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { EditJoinPanel } from './EditJoinPanel'\r\nimport AutocompleteTextField from './AutoComplete';\r\n\r\n\r\nexport const Conditions = ({models, conditions, editCondition, openContextMenu, contextMenuOpen}) => {\r\n    const [contextMenu, setContextMenu] = useState({\"x\":null,\"y\":null,\"display\":false});\r\n    const [editConditionMenu, setEditConditionMenu] = useState({\"show\": false, \"conditionToEdit\":null});\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    \r\n    if(contextMenuOpen === false && contextMenu.display===true) { //add this to every other component that has context menus\r\n      setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n    }\r\n\r\n    // console.log(\"Conditions debug:\");\r\n    // console.log(models);\r\n    // console.log(conditions);\r\n    // console.log(contextMenu);\r\n    // console.log(editConditionMenu);\r\n    if (models.length === 0) return null\r\n\r\n    const showConditions = (conditions,editCondition,openContextMenu) => {\r\n        // console.log(conditions);\r\n        if (conditions.length === 0) return null;\r\n        const handleClick = (e) => {\r\n          // console.log(e);\r\n            if (e.type === 'click') {\r\n              setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n              openContextMenu(false);\r\n            } else if (e.type === 'contextmenu') {\r\n              e.preventDefault();\r\n              if(contextMenu.display===false) { //if contextMenu is not displayed\r\n                setContextMenu({\"x\":e.pageX,\"y\":e.pageY,\"display\":true,\"clickTargetType\":\"Condition\",\"target\": e.target});\r\n                openContextMenu(true);\r\n              } else {\r\n                setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                openContextMenu(false);\r\n              }\r\n            }\r\n        }\r\n        const conditionRow = (condition, index, handleClick) => {\r\n            // console.log(\"conditionRow\");\r\n            // console.log(condition);\r\n            // console.log(index);\r\n            // console.log(index%2 === 0?'odd':'even');\r\n            return ( \r\n                <tr key={index} className={\"componentRow \"} onClick={handleClick} onContextMenu={handleClick}>\r\n                  <td md=\"auto\" className=\"fullSize\">\r\n                    <div className=\"componentContent\">{condition}</div>\r\n                  </td>\r\n                </tr>\r\n            );\r\n        }\r\n        var conditionList = []\r\n        for(var conditionIndex=0;conditionIndex<conditions.length;conditionIndex++) {\r\n            conditionList.push(conditionRow(conditions[conditionIndex],conditionIndex,handleClick));\r\n        }\r\n        return (\r\n          <div>\r\n            <div className=\"w-100 bg-secondary text-white text-center\">Add / Remove Conditions to filter results</div>\r\n            <Table striped bordered>\r\n              <tbody>\r\n              {conditionList}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        );\r\n    }\r\n\r\n\r\n    const handleModalClose = () => setEditConditionMenu({\"show\": false, \"conditionToEdit\":null});\r\n\r\n    \r\n\r\n      \r\n    const editConditionMenuDisplay = (editConditionMenu, handleModalClose, editCondition) => {\r\n      // console.log(\"Displaying Edit Condition Modal\");\r\n      // console.log(editConditionMenu);\r\n      if(editConditionMenu.menuOpen === false) return null;\r\n      const conditionCriteria = React.createRef();\r\n      const handleModalSaveAndClose = () => {\r\n        editCondition(editConditionMenu.conditionToEdit,conditionCriteria.current.recentValue);\r\n        handleModalClose();\r\n      }\r\n      \r\n      const modelColumns = () => {\r\n        var tempModelColumns = [];\r\n        for(var modelIndex=0;modelIndex<models.response.models.length;modelIndex++) {\r\n          for(var columnIndex=0;columnIndex<models.response.models[modelIndex].columns.length;columnIndex++) {\r\n            tempModelColumns.push(models.response.models[modelIndex].columns[columnIndex]);\r\n            tempModelColumns.push(models.response.models[modelIndex].name+\".\"+models.response.models[modelIndex].columns[columnIndex]);\r\n          }\r\n        }\r\n        // console.log(\"tempModelColumns\");\r\n        // console.log(tempModelColumns);\r\n        return tempModelColumns;\r\n      }\r\n\r\n      const modelFullColumns = () => {\r\n        var tempModelColumns = [];\r\n        for(var modelIndex=0;modelIndex<models.response.models.length;modelIndex++) {\r\n          for(var columnIndex=0;columnIndex<models.response.models[modelIndex].columns.length;columnIndex++) {\r\n            tempModelColumns.push(models.response.models[modelIndex].name+\".\"+models.response.models[modelIndex].columns[columnIndex]);\r\n            tempModelColumns.push(models.response.models[modelIndex].name+\".\"+models.response.models[modelIndex].columns[columnIndex]);\r\n          }\r\n        }\r\n        // console.log(\"tempModelColumns\");\r\n        // console.log(tempModelColumns);\r\n        return tempModelColumns;\r\n      }\r\n\r\n      return(\r\n        <div>\r\n          <Modal show={(editConditionMenu.show)} onHide={handleModalClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Join </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            Join Conditions:\r\n            <Form>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <Form.Group>\r\n                    <Form.Label>Condition Criteria</Form.Label>\r\n                      <AutocompleteTextField className=\"form-control\" rows={3} ref={conditionCriteria} options={modelColumns()} fullOptions={modelFullColumns()} trigger=\"\" defaultValue={editConditionMenu.conditionToEdit}/>\r\n                  </Form.Group>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleModalSaveAndClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        </div>\r\n      )\r\n      };\r\n\r\n\r\n    const contextMenuDisplay = (contextMenu) => {\r\n      if(contextMenu.display === false) return null;\r\n      // console.log(\"Displaying Context Menu\");\r\n      // console.log(contextMenu);\r\n      // console.log(contextMenu.target.firstChild.data);\r\n      const clickEditCondition = (conditionToEdit) => {\r\n        setEditConditionMenu({\"show\": true, \"conditionToEdit\":contextMenu.target.firstChild.data});\r\n        openContextMenu(false);\r\n      };\r\n      const clickRemoveCondition = (conditionToRemove) => {\r\n        editCondition(conditionToRemove, null);\r\n        openContextMenu(false);\r\n      };\r\n      return(\r\n        <div>\r\n          <Overlay target={contextMenu.target} show={contextMenu.display} placement=\"right-start\">\r\n            <div>\r\n              <Table bordered variant=\"dark\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td onClick={() => clickEditCondition(contextMenu.target.firstChild.data)}>\r\n                      <div>Edit Condition</div>\r\n                      \r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td onClick={() => clickRemoveCondition(contextMenu.target.firstChild.data)}>\r\n                      Delete Condition\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </Overlay>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n          <h2 className=\"text-center\">Conditions</h2>\r\n          <div>\r\n            {showConditions(conditions,editCondition,openContextMenu)}\r\n            {contextMenuDisplay(contextMenu)}\r\n            {editConditionMenuDisplay(editConditionMenu, handleModalClose, editCondition)}\r\n          </div>\r\n          <div className=\"pt-2 text-center\">\r\n            <Button variant=\"primary\" onClick={() => setEditConditionMenu({\"show\": true, \"conditionToEdit\":null})}>\r\n                Add Condition\r\n            </Button>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport { Container, Overlay, Table, Form } from 'react-bootstrap';\r\n\r\n\r\n\r\nexport function Selects( {models, openContextMenu, contextMenuOpen, selects, editSelect, highlightColumn, outputModel, editOutputModel}) {\r\n    const [contextMenu, setContextMenu] = useState({\"x\":null,\"y\":null,\"display\":false});\r\n    const [editingField, setEditingField] = useState(-1);\r\n    const [editingDescription, setEditingDescription] = useState(-1);\r\n    // console.log(\"Selects:\")\r\n    // console.log(models);\r\n    // console.log(selects);\r\n    // console.log(contextMenu);\r\n    // console.log(clicked);\r\n    // console.log(editingField);\r\n    if (models.length === 0) return null\r\n\r\n    if(contextMenuOpen === false && contextMenu.display===true) { //add this to every other component that has context menus\r\n        setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n      }\r\n\r\n    const contextMenuDisplay = (contextMenu, selects) => {\r\n        if(contextMenu.display === false) return null;\r\n        // console.log(\"Displaying Context Menu\");\r\n        // console.log(contextMenu);\r\n        // console.log(contextMenu.target.firstChild.data);\r\n        // console.log(contextMenu.target);\r\n        // console.log(contextMenu.target.dataset.selectindex);\r\n        const clickEditSelectName = (selectToEdit) => {\r\n        //   setEditConditionMenu({\"show\": true, \"conditionToEdit\":contextMenu.target.firstChild.data});\r\n          setEditingField(parseInt(selectToEdit));\r\n          openContextMenu(false);\r\n        };\r\n        const clickEditSelectDescription = (selectToEdit) => {\r\n        //   setEditConditionMenu({\"show\": true, \"conditionToEdit\":contextMenu.target.firstChild.data});\r\n          // console.log(\"clickEditSelectDescription\");\r\n          // console.log(selectToEdit);\r\n          setEditingDescription(parseInt(selectToEdit));\r\n          openContextMenu(false);\r\n        };\r\n        const clickRemoveSelect = (selectToRemove) => {\r\n          editSelect(selectToRemove,null);\r\n          openContextMenu(false);\r\n        };\r\n        return(\r\n          <div>\r\n            <Overlay target={contextMenu.target} show={contextMenu.display} placement=\"left-start\">\r\n              <div>\r\n                <Table bordered variant=\"dark\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td onClick={() => clickEditSelectName(contextMenu.target.dataset.selectindex)}>\r\n                        <div>Edit Name</div>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td onClick={() => clickEditSelectDescription(contextMenu.target.dataset.selectindex)}>\r\n                        <div>Edit Description</div>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td onClick={() => clickRemoveSelect(selects[contextMenu.target.dataset.selectindex])}>\r\n                        Delete Field\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </Overlay>\r\n          </div>\r\n        )\r\n      }\r\n    \r\n    \r\n    const listModelColumns = (models,selects, highlightColumn,openContextMenu) => {\r\n        \r\n        const handleClick = (e) => {\r\n            // console.log(\"handleClick\");\r\n            // console.log(e);\r\n              if (e.type === 'click') {\r\n                setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                openContextMenu(false);\r\n              } else if (e.type === 'contextmenu') {\r\n                e.preventDefault();\r\n                if(contextMenu.display===false) { //if contextMenu is not displayed\r\n                  setContextMenu({\"x\":e.pageX,\"y\":e.pageY,\"display\":true,\"clickTargetType\":\"Condition\",\"target\": e.target});\r\n                  openContextMenu(true);\r\n                } else {\r\n                  setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                  openContextMenu(false);\r\n                }\r\n              }\r\n          };\r\n\r\n          const updateColumnAlias = (e) => {\r\n            //   console.log(\"updateColumnAlias\");\r\n            //   console.log(e);\r\n              e.preventDefault();\r\n              setEditingField(-1);\r\n              editSelect(selects[editingField],{...selects[editingField], \"alias\": e.target.value});\r\n          };\r\n          const updateColumnDescription = (e) => {\r\n              // console.log(\"updateColumnDescription\");\r\n              // console.log(e);\r\n              e.preventDefault();\r\n              setEditingDescription(-1);\r\n              editSelect(selects[editingDescription],{...selects[editingDescription], \"description\": e.target.value});\r\n          };\r\n\r\n          const showField = (selects, selectsIndex) => {\r\n            //   console.log(\"showField\");\r\n            //   console.log(selectsIndex);\r\n            //   console.log(editingField);\r\n            if(editingField === selectsIndex) {\r\n                return(\r\n                    <>\r\n                        <Form onSubmit={(e) => e.preventDefault()}>\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    defaultValue={(selects[selectsIndex].alias !== null && selects[selectsIndex].alias !== undefined)?selects[selectsIndex].alias:selects[selectsIndex].column}\r\n                                    onBlur={(e) => updateColumnAlias(e)}\r\n                                    placeholder=\"Add name for output field\"\r\n                                    autoFocus\r\n                                />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </>\r\n                );\r\n            } else {\r\n                return(\r\n                    <>\r\n                        <div className=\"w-100 text-dark text-right\" data-selectindex = {selectsIndex}>\r\n                          {(selects[selectsIndex].alias !== null && selects[selectsIndex].alias !== undefined)?selects[selectsIndex].alias:selects[selectsIndex].column}\r\n                        </div>\r\n                    </>\r\n                );\r\n            }\r\n          };\r\n        const showDescription = (selects, selectsIndex) => {\r\n          // console.log(selects);\r\n          // console.log(selectsIndex);\r\n          // console.log(editingDescription);\r\n          if(editingDescription === selectsIndex) { //if decription is being edited\r\n            return(\r\n                <>\r\n                    <Form onSubmit={(e) => e.preventDefault()}>\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                defaultValue={(selects[selectsIndex].description !== null && selects[selectsIndex].description !== undefined)?selects[selectsIndex].description:null}\r\n                                onBlur={(e) => updateColumnDescription(e)}\r\n                                placeholder=\"Add description for output field\"\r\n                                autoFocus\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </>\r\n            );\r\n        } else if(selects[selectsIndex].description !== null && selects[selectsIndex].description !== undefined) { // if description is defined\r\n            return(\r\n                <>\r\n                    <div className=\"w-100 text-dark text-right font-italic\" data-selectindex = {selectsIndex}>\r\n                      {selects[selectsIndex].description}\r\n                    </div>\r\n                </>\r\n            );\r\n        } else return null;\r\n      };\r\n        \r\n\r\n        const highlightColumns = (col) => {\r\n            // console.log(\"highlightColumns\");\r\n            // console.log(col);\r\n            var tempColumnsToHighlight = [];\r\n            if(col !== undefined & col !== null) {\r\n                for(var columnIndex=0;columnIndex<col.inputColumns.length;columnIndex++) {\r\n                    tempColumnsToHighlight.push(col.inputColumns[columnIndex]);\r\n                } \r\n            }\r\n            highlightColumn(tempColumnsToHighlight);\r\n        };\r\n        var tempListModelColumns = [];\r\n        for(let selectsIndex=0;selectsIndex<selects.length;selectsIndex++) {\r\n            // console.log(\"selectsMap\");\r\n            // console.log(selects[selectsIndex]);\r\n            tempListModelColumns.push(\r\n                <tr\r\n                    key={selectsIndex}\r\n                    onMouseEnter={() => highlightColumns(selects[selectsIndex])}\r\n                    onMouseLeave={() => highlightColumns()}\r\n                    onClick={(e) => handleClick(e)}\r\n                    onContextMenu={(e) => handleClick(e)}\r\n                >\r\n                    <td\r\n                    data-selectindex = {selectsIndex}\r\n                    >\r\n                        {showField(selects, selectsIndex)}\r\n                        {showDescription(selects, selectsIndex)}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        };\r\n        return tempListModelColumns;\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <h2 className=\"text-center\">\r\n                Output\r\n            </h2>\r\n            <div className=\"w-100 bg-secondary text-white text-center\">{outputModel.name}</div>\r\n            <div className=\"w-100 bg-light text-dark text-center font-italic mb-3\">\r\n                {outputModel.description?outputModel.description:\"New Model\"}\r\n            </div>\r\n            <table className=\"table table-striped table-hover w-100\">\r\n                <tbody>\r\n                    {listModelColumns(models,selects, highlightColumn,openContextMenu)}\r\n                </tbody>\r\n            </table>\r\n            {contextMenuDisplay(contextMenu, selects)}\r\n        </div>\r\n    )\r\n}","export async function getModelJson(modelJsonFilename, user) {\r\n    const response = await fetch('/api/model_old/' + modelJsonFilename, {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","import React from 'react'\r\nconst conditionConcat = (conditions) => {\r\n    // console.log(\"SQLPanel Conditions\");\r\n    // console.log(conditions);\r\n    if (conditions.length === 0) return null;\r\n    var tempConditionConcat = conditions[0].fullName;\r\n    for(var conditionIndex=1;conditionIndex<conditions.length;conditionIndex++) {\r\n        tempConditionConcat += \"\\n  AND \" + conditions[conditionIndex].fullName;\r\n    }\r\n    return tempConditionConcat;\r\n}\r\nconst selectStatement = (state) => {\r\n    var tempSelectStatement = \"SELECT\\n\";\r\n    const columnDefinition = (select) => {\r\n        if('definition' in select) { // if SQL definition for column exists, use that\r\n            return select.definition;\r\n        } else { // otherwise use the column in inputColumns\r\n            return select.inputColumns[0].model + \".\" + select.inputColumns[0].column;\r\n        }\r\n    }\r\n\r\n    const selectLine = (select) => {\r\n        return columnDefinition(select) + \" AS \" + select.alias;\r\n    }\r\n\r\n    if (state.selects.length !== 0) {\r\n        tempSelectStatement += \"  \" + selectLine(state.selects[0]) + \"\\n\"\r\n        for(var selectIndex=1;selectIndex<state.selects.length;selectIndex++) {\r\n            tempSelectStatement += \"  , \" \r\n                + selectLine(state.selects[selectIndex]) + \"\\n\";\r\n        }\r\n    } else {\r\n        tempSelectStatement += \"  *\\n\"\r\n    }\r\n    return tempSelectStatement;\r\n}\r\n\r\nconst fromStatement = (state) => {\r\n    var tempFromStatement = \"\";\r\n\r\n    const fromSyntax = (model) => {\r\n        return \"{{ ref(\\\"\" + model.name + \"\\\") }} AS \" + model.name;\r\n    }\r\n\r\n    if (state.models.length !== 0) {\r\n        tempFromStatement += \"FROM \" + fromSyntax(state.models.response.models[0]) + \"\\n\"\r\n        for(var joinIndex=1;joinIndex<state.models.response.models.length;joinIndex++) {\r\n            tempFromStatement += \"LEFT JOIN \" \r\n                + fromSyntax(state.models.response.models[joinIndex])\r\n                + \"\\n  ON \" + conditionConcat(state.models.response.models[joinIndex].joinConditions) + \"\\n\";\r\n        }\r\n    } else {\r\n        tempFromStatement += \"FROM \" + state.outputModel\r\n    }\r\n    return tempFromStatement;\r\n}\r\nconst whereStatement = (state) => {\r\n    var tempWhereStatement = \"\";\r\n    if (state.models.length !== 0) {\r\n        tempWhereStatement += \"WHERE \" + state.conditions[0] + \"\\n\"\r\n        // console.log(\"Loading conditions\");\r\n        // console.log(state.conditions.length);\r\n        for(var conditionIndex=1;conditionIndex<state.conditions.length;conditionIndex++) {\r\n            tempWhereStatement += \"  AND \" + state.conditions[conditionIndex] + \"\\n\";\r\n        }\r\n    } else {\r\n        tempWhereStatement += \"FROM \" + state.outputModel\r\n    }\r\n    return tempWhereStatement;\r\n}\r\nexport const SQLPanel = ({state}) => {\r\n    // const fromItem = (joinModel) => {\r\n    //     return(\r\n    //         {join.}\r\n    //     )\r\n    // }\r\n    return(\r\n    <div>\r\n        Generated SQL:\r\n        <div className=\"sqlContent\">\r\n            {selectStatement(state)}\r\n            {fromStatement(state)}\r\n            {whereStatement(state)}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport {Collapse, Container, Row, Col } from 'react-bootstrap';\r\nimport { XCircle } from 'react-bootstrap-icons';\r\n// import logo from './logo.svg';\r\nimport '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import JsonFilenameInput from './components/JsonFilenameInput'\r\nimport { Models } from './Models'\r\nimport { Conditions } from './Conditions'\r\nimport { Selects } from './Selects'\r\nimport { getModelJson } from '../services/getModelJson'\r\nimport { SQLPanel } from './SQLPanel';\r\n\r\nclass ModelBuilder extends Component {\r\n  \r\n  state = {\r\n    model: {},\r\n    models: [],\r\n    openSQLPanel: false,\r\n    showJoinModal: -1,\r\n    outputModel: \"\",\r\n    showColumns: true,\r\n    conditions: [],\r\n    selects: [],\r\n    highlightedColumns: []\r\n  }\r\n  \r\n  toggleJoinModal = (joinNum) => {\r\n    this.setState({showJoinModal: joinNum})\r\n  }\r\n\r\n  \r\n  openSQLPanel = () => {\r\n    this.state.openSQLPanel?this.setState({openSQLPanel: false}):this.setState({openSQLPanel: true})\r\n  }\r\n\r\n  componentDidMount() { // on load\r\n    getModelJson('all_models.json', this.props.user)\r\n      .then(response => {\r\n        this.setState({models: {response}});\r\n        this.setState({conditions: response.conditions});\r\n        var selects = [];\r\n        var outputName = \"\";\r\n        for(var modelIndex=0;modelIndex < response.models.length;modelIndex++) {\r\n          for(var columnIndex=0;columnIndex<response.models[modelIndex].columns.length;columnIndex++) {\r\n            var columnUsedToJoin = false;\r\n            for(var joinModelIndex=0;joinModelIndex<response.models.length;joinModelIndex++) {\r\n              if('joinConditions' in response.models[modelIndex] && typeof response.models[modelIndex].joinConditions !== 'undefined') {\r\n                // console.log(models.response.models[modelIndex]);\r\n                for(var joinConditionIndex=0;joinConditionIndex<response.models[modelIndex].joinConditions.length;joinConditionIndex++) {\r\n                  if(\r\n                    response.models[modelIndex].name===response.models[modelIndex].joinConditions[joinConditionIndex].conditionField1.model\r\n                    && response.models[modelIndex].columns[columnIndex]===response.models[modelIndex].joinConditions[joinConditionIndex].conditionField1.column\r\n                  ) {\r\n                    columnUsedToJoin = true;\r\n                  }\r\n                }\r\n              }\r\n                  \r\n            }\r\n            if(!columnUsedToJoin) {\r\n              selects.push({\"inputColumns\": [{\"column\": response.models[modelIndex].columns[columnIndex],\"model\": response.models[modelIndex].name}],\"alias\": response.models[modelIndex].columns[columnIndex]});\r\n            }\r\n          }\r\n          outputName += (modelIndex!==0?\"_\":\"\") + response.models[modelIndex].name\r\n        }\r\n        this.setState({selects: selects});\r\n        this.setState({outputModel: {\"name\": outputName}})\r\n      });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.models !== this.props.models) { // update Models\r\n        // check all existing joins\r\n        // add new joins\r\n    }\r\n  }\r\n\r\n  saveEditedModel = (previousModel, newModel) => {\r\n    // console.log(\"saveEditedModel\");\r\n    // console.log(previousModel);\r\n    // console.log(newModel);\r\n    this.setState(prevState => ({\r\n      models: prevState.models.response.models.filter(models => models !== previousModel) \r\n    }));\r\n    this.setState({models: {...this.state.models, \"response\": {...this.state.models.response, \"models\": [...this.state.models.response.models.filter(models => models !== previousModel), newModel]}}});\r\n  }\r\n\r\n\r\n  logState = () => {\r\n    console.log(this.state);\r\n  }\r\n\r\n\r\n  editCondition = (oldCondition, newCondition) => {\r\n      // console.log(\"editCondition\")\r\n      // console.log(oldCondition);\r\n      // console.log(newCondition);\r\n      // console.log(this.state.conditions);\r\n    \r\n    if(newCondition === null) { //Removing a select:\r\n      this.setState({conditions: [...this.state.conditions.filter(conditions => conditions !== oldCondition)]});\r\n    } else if (oldCondition === null) { //Adding a select\r\n      this.setState({conditions: [...this.state.conditions, newCondition]});\r\n    } else {\r\n      var conditionToEditIndex = -1;\r\n      for(var conditionIndex=0;conditionIndex<this.state.conditions.length;conditionIndex++) {\r\n        if(this.state.conditions[conditionIndex] === oldCondition) {\r\n          conditionToEditIndex = conditionIndex;\r\n        }\r\n      }\r\n      let conditions = [...this.state.conditions];\r\n      let condition = {...conditions[conditionToEditIndex]};\r\n      condition = newCondition;\r\n      conditions[conditionToEditIndex] = condition;\r\n      this.setState({conditions: conditions});\r\n    }\r\n  \r\n  }\r\n\r\n\r\n  editSelect = (oldSelect, newSelect) => {\r\n    // console.log(\"editSelect\")\r\n    // console.log(oldSelect);\r\n    // console.log(newSelect);\r\n    // console.log(this.state.selects);\r\n    \r\n    if(newSelect === null) { //Removing a select:\r\n      this.setState({selects: [...this.state.selects.filter(selects => selects !== oldSelect)]});\r\n    } else if (oldSelect === null) { //Adding a select\r\n      this.setState({selects: [...this.state.selects, newSelect]});\r\n    } else {\r\n      var selectToEditIndex = -1;\r\n      for(var selectIndex=0;selectIndex<this.state.selects.length;selectIndex++) {\r\n        if(this.state.selects[selectIndex] == oldSelect) {\r\n          selectToEditIndex = selectIndex;\r\n        }\r\n      }\r\n      let selects = [...this.state.selects];\r\n      let select = {...selects[selectToEditIndex]};\r\n      select = newSelect;\r\n      selects[selectToEditIndex] = select;\r\n      this.setState({selects: selects});\r\n    }\r\n  \r\n  }\r\n\r\n  editOutputModel = (newOutputModel) => {\r\n    // console.log(\"editOutputModel\")\r\n    // console.log(newOutputModel);\r\n      this.setState({outputModel: newOutputModel});  \r\n  }\r\n\r\n  // this function reorders items on dragdrop\r\n  reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n  };\r\n\r\n  highlightColumn = (columnsToHighlight) => {\r\n    // console.log(\"highlightColumn\");\r\n    // console.log(columnsToHighlight);\r\n    this.setState({highlightedColumns: columnsToHighlight});\r\n  }\r\n\r\n  modelDragEnd = (result) => {\r\n    // dropped outside the list\r\n    // console.log(\"Start of modelDragEnd\");\r\n    //   console.log(result);\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    if (result.destination.index===result.source.index) {\r\n      return;\r\n    }\r\n    // console.log(\"got past checks\");\r\n    const reorderJoinConditions = (joinConditions) => {\r\n      var newJoinCondition = JSON.parse(JSON.stringify(joinConditions));\r\n      for(var joinConditionIndex=0;joinConditionIndex<joinConditions.length;joinConditionIndex++) {\r\n        newJoinCondition[joinConditionIndex].conditionField1 = joinConditions[joinConditionIndex].conditionField2;\r\n        newJoinCondition[joinConditionIndex].conditionField2 = joinConditions[joinConditionIndex].conditionField1;\r\n        newJoinCondition[joinConditionIndex].fullName = \r\n          joinConditions[joinConditionIndex].conditionField2.model\r\n          +\".\"+joinConditions[joinConditionIndex].conditionField2.column\r\n          +\" \"+joinConditions[joinConditionIndex].conditionOperator\r\n          +\" \"+joinConditions[joinConditionIndex].conditionField1.model\r\n          +\".\"+joinConditions[joinConditionIndex].conditionField1.column\r\n      }\r\n      return(newJoinCondition);\r\n    }\r\n    var fixedModels = this.reorder(\r\n      this.state.models.response.models,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    // console.log(\"Fixed Models\");\r\n    // console.log(fixedModels);\r\n    var tempJoinConditions = fixedModels[result.source.index].joinConditions;\r\n    fixedModels[result.source.index].joinConditions = fixedModels[result.destination.index].joinConditions;\r\n    fixedModels[result.destination.index].joinConditions = tempJoinConditions;\r\n    // console.log(fixedModels[result.source.index]);\r\n    if(fixedModels[result.source.index].joinConditions) {\r\n      fixedModels[result.source.index].joinConditions = reorderJoinConditions(fixedModels[result.source.index].joinConditions);\r\n    } else {\r\n      fixedModels[result.destination.index].joinConditions = reorderJoinConditions(fixedModels[result.destination.index].joinConditions);\r\n    }\r\n    // console.log(fixedModels);\r\n    this.setState({models: {...this.state.models, \"response\": {...this.state.models.response, \"models\":  fixedModels}}});\r\n    }\r\n  \r\n\r\n  render() {\r\n    if(this.props.appState !== \"ModelBuilder\") return null;\r\n    if(this.props.logState === true) {\r\n        console.log(\"ModelBuilder State:\");\r\n        console.log(this.state);\r\n      }\r\n    if(this.props.openSQLPanel) this.state.openSQLPanel?this.setState({openSQLPanel: false}):this.setState({openSQLPanel: true})\r\n    return (\r\n        <div>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"modelList\">\r\n                  <Models \r\n                    models={this.state.models} \r\n                    modelDragEnd={this.modelDragEnd}\r\n                    showColumns={this.state.showColumns}\r\n                    saveEditedModel={this.saveEditedModel}\r\n                    toggleJoinModal = { this.toggleJoinModal }\r\n                    showJoinModal = {this.state.showJoinModal}\r\n                    highlightedColumns = {this.state.highlightedColumns}\r\n                    contextMenuOpen={this.props.contextMenuOpen}\r\n                    openContextMenu={this.props.openContextMenu}\r\n                    editSelect={this.editSelect}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"conditionList\">\r\n                  <Conditions \r\n                      models={this.state.models} \r\n                      conditions={this.state.conditions}\r\n                      editCondition={this.editCondition}\r\n                      contextMenuOpen={this.props.contextMenuOpen}\r\n                      openContextMenu={this.props.openContextMenu}\r\n                    />\r\n                </div>\r\n                </Col>\r\n                <Col>\r\n                <div className=\"outputList\">\r\n                  <Selects\r\n                    models={this.state.models}\r\n                    highlightColumn={this.highlightColumn}\r\n                    selects={this.state.selects}\r\n                    editSelect={this.editSelect}\r\n                    contextMenuOpen={this.props.contextMenuOpen}\r\n                    openContextMenu={this.props.openContextMenu}\r\n                    outputModel={this.state.outputModel}\r\n                    editOutputModel={this.editOutputModel}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Collapse in={ this.state.openSQLPanel } timeout={2000} dimension={'width'}>\r\n            <div>\r\n              <div id=\"sqlPanelSideBar\" className=\"sidePanelContent\">\r\n                <div className=\"sideBarExitButton\">\r\n                  <XCircle onClick={() => this.setState({openSQLPanel: false})}></XCircle>\r\n                </div>\r\n                <SQLPanel\r\n                  state={this.state}\r\n                >\r\n                </SQLPanel>\r\n              </div>\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n          \r\n    );\r\n  }\r\n}\r\n\r\nexport default ModelBuilder;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Overlay, Popover, Navbar, Nav } from 'react-bootstrap'; \r\nimport { useHistory } from 'react-router-dom';\r\nconst reactState = process.env.NODE_ENV;\r\nexport const NavBar = ({addModel, hostVersion, logState, openSQLPanel, openModelBuilder, openCatalog, openConfig, appState, contextMenuOpen, openContextMenu, selectModel, user, setUser, userConfig, setUserConfig}) => {\r\n    let history = useHistory();\r\n    const debugLogState = (reactState) => {\r\n        if ( reactState === 'development') {\r\n            return(\r\n                <div className=\"nav-item nav-link\" role=\"button\" onClick={() => logState()}>Show state in console </div>\r\n                );\r\n        } else return null;\r\n    }\r\n    const logoutButton = (hostVersion, userConfig) => {\r\n        if ( hostVersion === 'node') {\r\n            return(\r\n                <div className=\"nav-item nav-link mr-sm-2\" role=\"button\" onClick={() => logout()}>Logout {userConfig.firstname}</div>\r\n                );\r\n        } else return null;\r\n    }\r\n    const submitChanges = (hostVersion, createPR) => {\r\n        if ( hostVersion === 'node') {\r\n            return(\r\n                <div className=\"nav-item nav-link mr-sm-2\" role=\"button\" onClick={() => createPR()}>Submit changes</div>\r\n                );\r\n        } else return null;\r\n    }\r\n    const config = (hostVersion, createPR) => {\r\n        return(\r\n            <div className={\"nav-item nav-link bg-brand \"+(history.location.pathname.includes(\"/config\")?\"active\":null)} role=\"button\" onClick={() => history.push(\"/config\")}>Config</div>\r\n            );\r\n    }\r\n\r\n    const searchBox = useRef(null);\r\n\r\n    function debounceSearchResults(){\r\n      var timeout = 500;\r\n      let timer;\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => { history.push(\"/catalog/search/\"+searchBox.current.value); }, timeout);\r\n    }\r\n\r\n    const getSearchResults = (e) => {\r\n        // console.log(\"getSearchResults\");\r\n        if(e.target.value.trim().length===0) {\r\n            return null;\r\n        };\r\n        debounceSearchResults();\r\n        return null;\r\n    };\r\n\r\n    const toggleSearch = () => {\r\n        history.push(\"/catalog/search/\"+searchBox.current.value);\r\n    }\r\n\r\n    const reloadDBT = () => {\r\n        fetch('/api/v1/reload_dbt', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Token ' + user.token,\r\n          }\r\n        });\r\n    }\r\n\r\n    const createPR = () => {\r\n        var prTitle = prompt(\"Please describe your changes:\", \"Added descriptions to models x, y\");\r\n        // console.log(prTitle);\r\n        var prRequestBody = {\r\n            \"prTitle\": prTitle\r\n        }\r\n        fetch('/api/v1/create_pr', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Token ' + user.token,\r\n          },\r\n          body: JSON.stringify(prRequestBody)\r\n        });\r\n    }\r\n\r\n    const logout = () => {\r\n        fetch('/api/v1/users/logout', {\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Token ' + user.token,\r\n          },\r\n        });\r\n        setUser({\"user\":{}});\r\n        sessionStorage.removeItem(\"user\");\r\n        setUserConfig({});\r\n        sessionStorage.removeItem(\"userconfig\");\r\n    }\r\n    // console.log(history);\r\n    return(\r\n    <Navbar className=\"navbar-dark bg-brand position-fixed w-100 z-100\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">TĀNGATA</Navbar.Brand>\r\n        {/* <a className=\"navbar-brand bg-brand\" href=\"/\">TANGATA</a> */}\r\n        <Navbar.Toggle aria-controls=\"navbarContent\"/>\r\n        <Navbar.Collapse id=\"navbarContent\" className=\"justify-content-between\">\r\n            <div className=\"navbar-nav p-2 bg-brand\">\r\n                <div className={\"nav-item nav-link bg-brand \"+(history.location.pathname.includes(\"/catalog\")?\"active\":null)} role=\"button\" onClick={() => history.push(\"/catalog\")}>Catalog</div>\r\n                {config(hostVersion, userConfig)}\r\n            </div>\r\n            <div className=\"navbar-nav p2\">\r\n                <form className=\"form-inline\">\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" ref={searchBox} onFocus={() => toggleSearch()} onChange={(e) => getSearchResults(e)} placeholder=\"Search Models\" aria-label=\"Search Models\"/>\r\n                </form>\r\n            </div>\r\n            <div className=\"navbar-nav p-2\">\r\n                <div className={\"nav-item nav-link mr-sm-2\"+(userConfig.dbtmethod!==\"UploadMetadata\"?null:\" d-none\")} role=\"button\" onClick={() => reloadDBT()}>Refresh dbt_ catalog</div>\r\n                {submitChanges(hostVersion, createPR)}\r\n                {/* <div className=\"nav-item nav-link mr-sm-2\" role=\"button\" onClick={() => openSQLPanel()}>Open SQL Panel </div> */}\r\n                {debugLogState(reactState)}\r\n                {logoutButton(hostVersion, userConfig)}\r\n            {/* <a class=\"nav-item nav-link active\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n            <a class=\"nav-item nav-link\" href=\"#\">Features</a>\r\n            <a class=\"nav-item nav-link\" href=\"#\">Pricing</a>\r\n            <a class=\"nav-item nav-link disabled\" href=\"#\">Disabled</a> */}\r\n            </div>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n    )\r\n}\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState } from 'react';\r\nimport { Overlay, Table } from 'react-bootstrap';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  MiniMap,\r\n  isNode\r\n} from 'react-flow-renderer';\r\nimport dagre from 'dagre';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// import './layouting.css';\r\n\r\nconst dagreGraph = new dagre.graphlib.Graph();\r\ndagreGraph.setDefaultEdgeLabel(() => ({}));\r\n\r\n// In order to keep this example simple the node width and height are hardcoded.\r\n// In a real world app you would use the correct width and height values of\r\n// const nodes = useStoreState(state => state.nodes) and then node.__rf.width, node.__rf.height\r\n\r\nconst nodeWidth = 200;\r\nconst nodeHeight = 33;\r\nconst getLayoutedElements = (elements, direction = 'LR') => {\r\n  dagreGraph.setGraph({ rankdir: direction });\r\n  // console.log(\"getLayoutedElements\");\r\n  // console.log(elements);\r\n  elements.forEach((el) => {\r\n    if (isNode(el)) {\r\n      dagreGraph.setNode(el.id, { width: nodeWidth, height: nodeHeight });\r\n    } else {\r\n      dagreGraph.setEdge(el.source, el.target);\r\n    }\r\n  });\r\n\r\n  dagre.layout(dagreGraph);\r\n\r\n\r\n\r\n  return elements.map((el) => {\r\n    if (isNode(el)) {\r\n      const nodeWithPosition = dagreGraph.node(el.id);\r\n      el.targetPosition = 'left';\r\n      el.sourcePosition = 'right';\r\n\r\n      // unfortunately we need this little hack to pass a slighltiy different position\r\n      // to notify react flow about the change. More over we are shifting the dagre node position\r\n      // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\r\n      el.position = {\r\n        x: nodeWithPosition.x - nodeWidth / 2 + Math.random() / 1000,\r\n        y: nodeWithPosition.y - nodeHeight / 2,\r\n      };\r\n    }\r\n\r\n    return el;\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\nconst LayoutFlow = (props) => {\r\n  let history = useHistory();\r\n  const [contextMenu, setContextMenu] = useState({\"x\":null,\"y\":null,\"display\":false});\r\n//   const { fitView } = useZoomPanHelper();\r\n// console.log(\"LayoutFlow\");  \r\n// console.log(props.lineageArray);\r\n    const layoutedElements = getLayoutedElements(props.lineageArray.lineage);\r\n  const [elements, setElements] = useState(layoutedElements);\r\n  const onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView({padding: 0.1, includeHiddenNodes: true});\r\n  }\r\n  const onNodeRightClick = (event, node) => {\r\n    event.preventDefault();\r\n    // console.log(event);\r\n    // console.log(node.id);\r\n    setContextMenu({\"x\":event.pageX,\"y\":event.pageY,\"display\":true,\"target\": event.target, \"nodeID\": node.id});\r\n    // addToSelect(node.id);\r\n  }\r\n\r\n  const Backdrop = () => {\r\n    return(\r\n      <div style={{\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        background: \"rgba(0,0,0,0.2)\",\r\n        zIndex: 1500\r\n      }}\r\n      onClick={() => setContextMenu({\"x\":null,\"y\":null,\"display\":false})}\r\n      onContextMenu={() => setContextMenu({\"x\":null,\"y\":null,\"display\":false})}\r\n      />\r\n    )\r\n  };\r\n\r\n  const contextMenuDisplay = (contextMenu) => {\r\n    if(contextMenu.display === false) return null;\r\n    // console.log(\"Displaying Context Menu\");\r\n    // console.log(contextMenu);\r\n\r\n    // console.log(contextMenu.target.firstChild.data);\r\n    // console.log(contextMenu.target);\r\n    // console.log(JSON.parse(contextMenu.target.dataset.selectvalue));\r\n    // console.log(contextMenu.target.dataset.selectvalue.model);\r\n    return(\r\n      <div>\r\n        <Overlay target={contextMenu.target} show={contextMenu.display} placement=\"right-start\">\r\n          <div style={{zIndex:1051}}>\r\n            <Table bordered variant=\"dark\">\r\n              <tbody>\r\n                <tr>\r\n                  <td onClick={() => history.push(\"/catalog/\"+contextMenu.nodeID)}>\r\n                    Open Model in Current Tab\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td onClick={() => window.open('/catalog/'+contextMenu.nodeID)}>\r\n                    Open Model in New Tab\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Overlay>\r\n        <Backdrop show={contextMenu.display}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"layoutflow lineagebox\">\r\n      <ReactFlowProvider>\r\n        <ReactFlow\r\n          elements={elements}\r\n          connectionLineType=\"smoothstep\"\r\n          onLoad={onLoad}\r\n          onNodeContextMenu={onNodeRightClick}\r\n          minZoom=\"0.1\"\r\n        >\r\n            <MiniMap />\r\n        </ReactFlow>\r\n      </ReactFlowProvider>\r\n      {contextMenuDisplay(contextMenu)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LayoutFlow;\r\n\r\n","import {Row, Col } from 'react-bootstrap';\r\nimport {Component} from 'react';\r\n\r\nexport default class ShowSearchResults extends Component {\r\n    render() {\r\n        var searchResults = this.props.searchResults;\r\n        \r\n        if(searchResults.results.length>0) {\r\n            searchResults.results = searchResults.results.sort(function demoteResults(firstEl, secondEl) {return Math.min(0,secondEl.promoteStatus)-Math.min(0,firstEl.promoteStatus)});\r\n        }\r\n        var resultSelectFunction = this.props.resultSelectFunction;\r\n        const searchRow = (searchResult, index) => {\r\n            // console.log(\"searchRow\")\r\n            // console.log(searchResult);\r\n            const columnDetails = () => {\r\n                if(searchResult.type===\"column_name\" || searchResult.type===\"column_description\") {\r\n                    return(\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                Column: {searchResult.columnName}\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                {searchResult.columnDescription}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                } else return null;\r\n            }\r\n            const tagDetails = () => {\r\n                if(searchResult.type===\"tag_name\") {\r\n                    return(\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                Tag: {searchResult.tagName}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                } else return null;\r\n            }\r\n            // console.log(resultSelectFunction);\r\n            console.log(searchResult);\r\n\r\n            function promoteIcon() {\r\n                return(\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"green\" class=\"bi bi-patch-check\" viewBox=\"0 0 16 16\">\r\n                        <path fill-rule=\"evenodd\" d=\"M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0z\"/>\r\n                        <path d=\"m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z\"/>\r\n                    </svg>\r\n                )\r\n            }\r\n\r\n            function demoteIcon() {\r\n                return(\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"red\" class=\"bi bi-patch-exclamation\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M7.001 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.553.553 0 0 1-1.1 0L7.1 4.995z\"/>\r\n                        <path d=\"m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z\"/>\r\n                    </svg>\r\n                )\r\n            }\r\n\r\n\r\n            return (\r\n                <div className={\"row\"+(searchResult.promoteStatus===1?\" promote\":(searchResult.promoteStatus===-1?\" demote\":\"\"))} key={\"searchRow\"+index}>\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"container\" onClick={(e) => resultSelectFunction(e, index)}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col font-weight-bold\">\r\n                                    {searchResult.modelName.toLowerCase()} {searchResult.promoteStatus===1?promoteIcon():(searchResult.promoteStatus===-1?demoteIcon():\"\")}\r\n                                </div>\r\n                                <div className=\"col font-weight-light font-italic text-right\">\r\n                                    {searchResult.nodeID.toLowerCase()}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col font-italic\">\r\n                                    {searchResult.modelDescription}\r\n                                </div>\r\n                            </div>\r\n                            {columnDetails()}\r\n                            {tagDetails()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }    \r\n        var AllSearchRows = () => {\r\n        // console.log(searchResults);\r\n            if(searchResults.results.length===0) {\r\n            return(\r\n                <div className=\"container searchbox z-200\">\r\n                <Row>\r\n                    <Col>\r\n                    <h5 className=\"text-center\">No search results</h5>\r\n                    </Col>\r\n                </Row>\r\n                    \r\n                </div>\r\n            );\r\n            }\r\n            const allSearchRows = searchResults.results.map((searchResult, index) => searchRow(searchResult, index));\r\n            return(\r\n                    <div className=\"container searchbox z-200\">\r\n                    <Row>\r\n                        <Col>\r\n                        <h5 className=\"text-center\">{searchResults.results.length} search results:</h5>\r\n                        </Col>\r\n                    </Row>\r\n                        {allSearchRows}\r\n                    </div>\r\n            );\r\n            \r\n        }\r\n        return(\r\n            <div>\r\n                <AllSearchRows/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","export async function getModelSearch(searchString, user) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/model_search/' + searchString, {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","export async function getModel(modelNodeId, user) {\r\n    const response = await fetch('/api/v1/models/' + modelNodeId, {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","import  ShowSearchResults  from './ShowSearchResults';\r\nimport {Component, createRef} from 'react';\r\nimport { getModelSearch } from '../services/getModelSearch';\r\nimport { getModel } from '../services/getModel';\r\n\r\nexport default class RefSearchResults extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          refSearchResults: {},\r\n          refColumns: {},\r\n          selectedModel: {}\r\n        };\r\n        this.refSearchBox = createRef();\r\n      }\r\n    debounceRefSearchResults(e) {\r\n        var timeout = 1000;\r\n        let timer;\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => {\r\n            getModelSearch(this.refSearchBox.current.value, this.props.user)\r\n            .then(response => {\r\n            if(response.length===0 || response.error) {\r\n                // this.setState({refSearchResults: {}});\r\n                return null;\r\n            }\r\n            this.setState({refSearchResults: {\"searchResults\": response}});\r\n            });\r\n            }, timeout);\r\n    }\r\n\r\n    selectColumn = (column) => {\r\n        this.props.selectModelColumn(this.state.selectedModel.modelName, column)\r\n    }\r\n\r\n    clearColumns = () => {\r\n        this.setState({refColumns: {}});\r\n    }\r\n\r\n    CatalogColumns = () => {\r\n        const columnRows = () => {\r\n          return Object.entries(this.state.refColumns).map((value,index) => {\r\n            return(\r\n              <tr key={\"columnRow\"+value[0]} onClick={() => this.selectColumn(value[0])}>\r\n                <td className=\"catalogColumnName\">\r\n                    {value[0].toLowerCase().replaceAll(\"_\",\"_\\u200b\")}\r\n                </td>\r\n                <td className=\"catalogColumnType\">\r\n                    {value[1].type.toLowerCase()}\r\n                </td>\r\n                <td>\r\n                    <div>\r\n                        {value[1].description}\r\n                    </div>\r\n                </td>\r\n              </tr>\r\n            );\r\n          });\r\n        }\r\n        if(Object.keys(this.state.refColumns).length > 0) { //if this has columns\r\n          return(\r\n            <div className=\"row mt-md-3\">\r\n              <div className=\"col\">\r\n                Choose Column:\r\n                <table className=\"table table-sm\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>\r\n                        Name\r\n                      </th>\r\n                      <th>\r\n                        Type\r\n                      </th>\r\n                      <th>\r\n                        Description\r\n                      </th>\r\n                      <th>\r\n                        Tests\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {columnRows()}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          return(\r\n            <div className=\"row\">\r\n              <div className=\"col col-md-auto\">\r\n                This model does not appear to contain any columns.\r\n              </div>\r\n            </div>\r\n          );\r\n        };\r\n      }\r\n\r\n    render() {\r\n        if(Object.keys(this.state.refColumns).length === 0 && this.state.refSearchResults && this.state.refSearchResults.searchResults && this.state.refSearchResults.searchResults.results && this.state.refSearchResults.searchResults.results.length > 0) {\r\n            var selectSearchResult = (e,index) => {\r\n                getModel(this.state.refSearchResults.searchResults.results[index].nodeID, this.props.user)\r\n                .then(response => {\r\n                if(!response.error) {\r\n                    this.setState({refColumns: response.columns, selectedModel: this.state.refSearchResults.searchResults.results[index]})\r\n                }\r\n                });\r\n            }\r\n            return(\r\n                <div>\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" ref={this.refSearchBox} onFocus={() => this.clearColumns()} onChange={(e) => this.debounceRefSearchResults(e)} placeholder=\"Search Models\" aria-label=\"Search Models\"/>\r\n                    <ShowSearchResults\r\n                        searchResults = {this.state.refSearchResults.searchResults}\r\n                        resultSelectFunction = {selectSearchResult}\r\n                    />\r\n                </div>\r\n            \r\n            )\r\n        } else if (Object.keys(this.state.refColumns).length > 0) {\r\n            return(\r\n                <div>\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" ref={this.refSearchBox} onFocus={() => this.clearColumns()} onChange={(e) => this.debounceRefSearchResults(e)} placeholder=\"Search Models\" aria-label=\"Search Models\"/>\r\n                    <this.CatalogColumns/>\r\n                </div>\r\n            \r\n            )\r\n        } else {\r\n            return(\r\n            <div>\r\n                <input className=\"form-control mr-sm-2\" type=\"search\" ref={this.refSearchBox} onFocus={() => this.clearColumns()} onChange={(e) => this.debounceRefSearchResults(e)} placeholder=\"Search Models\" aria-label=\"Search Models\"/>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n","export async function getModelTree(user) {\r\n    const response = await fetch('/api/v1/model_tree', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","export async function getDBTree(user) {\r\n    const response = await fetch('/api/v1/db_tree', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport { HddRackFill, FolderFill, Table } from 'react-bootstrap-icons';\r\nimport {Container, Collapse, Row, Col, Tabs, Tab, Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport { Menu, Item, Separator, Submenu, MenuProvider, useContextMenu } from 'react-contexify';\r\nimport 'react-contexify/dist/ReactContexify.css';\r\nimport { Drawer, } from 'react-bootstrap-drawer';\r\nimport '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-bootstrap-drawer/lib/style.css';\r\nimport  LayoutFlow  from './Lineage';\r\nimport  RefSearchResults  from './RefSearchResults';\r\nimport  ShowSearchResults  from './ShowSearchResults';\r\nimport { getModel } from '../services/getModel';\r\nimport { getModelTree } from '../services/getModelTree';\r\nimport { getDBTree } from '../services/getDBTree';\r\nimport { getModelSearch } from '../services/getModelSearch';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport TreeMenu from 'react-simple-tree-menu';\r\nimport 'react-simple-tree-menu/dist/main.css';\r\nimport Select, { components } from 'react-select'\r\nimport chroma from 'chroma-js';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\nexport default function Catalog (props) {\r\n  let history = useHistory();\r\n  const [catalogModel, setCatalogModel] = useState({});\r\n  const [rawModelTree, setRawModelTree] = useState();\r\n  const [rawDBTree, setRawDBTree] = useState();\r\n  const [searchResults, setSearchResults] = useState();\r\n  const [newRefTest, setNewRefTest] = useState();\r\n  const [refSearchQuery, setRefSearchQuery] = useState();\r\n  const routeSearchQuery = useRouteMatch(\"/catalog/search/:searchQuery\");\r\n  const [treeTab, setTreeTab] = useState(\"databases\");\r\n  const [folderTree, setFolderTree] = useState();\r\n  const [dbTree, setDBTree] = useState();\r\n  const treeFolderRef = useRef();\r\n  const treeDBRef = useRef();\r\n  let { path, url } = useRouteMatch();\r\n  const TEST_MENU_ID = 'testMenu';\r\n  const { show } = useContextMenu();\r\n  function catalogDescription()  {\r\n    if(catalogModel.description) {\r\n      return catalogModel.description;\r\n    } else {\r\n      return null;\r\n    };\r\n  }\r\n  useEffect(() => {\r\n    getModelTree(props.user)\r\n    .then(response => {\r\n      if(!response.error) {\r\n        setRawModelTree(response);\r\n        setFolderTree(RecurseFullFolderTree(response));\r\n        \r\n        \r\n      }\r\n    })\r\n    getDBTree(props.user)\r\n    .then(response => {\r\n      if(!response.error) {\r\n        setRawDBTree(response);\r\n        setDBTree(RecurseFullDBTree(response));\r\n        \r\n      }\r\n    })\r\n  }, []);\r\n\r\n  function catalogDependsOn() {\r\n    // \r\n    // \r\n\r\n    const ancestorModels = () => {\r\n      if(!catalogModel.depends_on) return null;\r\n      // \r\n      return catalogModel.depends_on.nodes.map((value,index) => {\r\n        // \r\n        var ancestorClickEvent = (e) => {e.preventDefault(); history.push(\"/catalog/\"+value);};\r\n        return(\r\n          <div key={\"catalogDependsOnModel\"+index} title={value}>\r\n            {index===0?(<b>Models:<br/></b>):null}\r\n            <a href=\"#\" onClick={ancestorClickEvent}>{value.split(\".\").pop()}</a>\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n    const ancestorMacros = () => {\r\n      if(!catalogModel.depends_on) return null;\r\n      return catalogModel.depends_on.macros.map((value,index) => {\r\n        return(\r\n          <div key={\"catalogDependsOnMacro\"+index} title={value}>\r\n            {index===0?(<b>Macros:<br/></b>):null}\r\n            {value.split(\".\").pop()}\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n        {ancestorModels()}\r\n        {ancestorMacros()}\r\n      </>\r\n    )\r\n  }\r\n\r\n  function catalogDependencies() {\r\n    // \r\n    // \r\n\r\n    const dependentModels = () => catalogModel.referenced_by.map((value,index) => {\r\n      var dependentClickEvent = (e) => {e.preventDefault(); history.push(\"/catalog/\"+value);};\r\n      return(\r\n        <div key={\"catalogDependentModel\"+index} title={value}>\r\n          {index===0?(<b>Models:<br/></b>):null}\r\n          <a href=\"#\" onClick={dependentClickEvent}>{value.split(\".\").pop()}</a>\r\n        </div>\r\n      )\r\n    });\r\n    return (\r\n      <>\r\n        {dependentModels()}\r\n      </>\r\n    )\r\n  }\r\n\r\n  function nodeContributors() {\r\n    // \r\n    // \r\n\r\n    const nodeContributorMap = () => catalogModel.all_contributors.map((value,index) => {\r\n      return(\r\n        <div key={\"nodeContributor\"+index} title={value}>\r\n          {index===0?(<b>Contributors:<br/></b>):null}\r\n          {value}\r\n        </div>\r\n      )\r\n    });\r\n\r\n    if(catalogModel.all_contributors.length > 1) {\r\n      return (\r\n        <>\r\n          {nodeContributorMap()}\r\n        </>\r\n      )\r\n    } else {\r\n      return null;\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  function nodeHistory() {\r\n    // \r\n    // \r\n    const fileCommits = () => catalogModel.all_commits.map((value,index) => {\r\n      return(\r\n        <tr key={\"catalogFileCommit \"+index} title={value.hash}>\r\n          <td title={value.authorDate}>\r\n            {value.authorDateRel}\r\n          </td>\r\n          <td>\r\n            {value.authorName}\r\n          </td>\r\n          <td>\r\n            <a href={value.originURL !== null?value.originURL:null} target=\"_blank\">\r\n              {value.subject}\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n    return (\r\n      <>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">\r\n                Date\r\n              </th>\r\n              <th scope=\"col\">\r\n                Author\r\n              </th>\r\n              <th scope=\"col\">\r\n                Commit Message\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {fileCommits()}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    )\r\n  }\r\n\r\n  function AddRefTest() {\r\n    \r\n    const handleClose = () => {\r\n      setNewRefTest(null);\r\n      }\r\n\r\n    const selectModelColumn = (model, column) => {\r\n      var allTests = [];\r\n      var newTest = {\"type\": \"relationships\", \"severity\": \"ERROR\", \"related_model\": model, \"related_field\": column};\r\n      allTests.push({\"relationships\": {\r\n        \"to\": \"ref('\" + model + \"')\",\r\n        \"field\": column,\r\n        \"severity\": \"ERROR\"}});\r\n      setCatalogModel({\r\n        ...catalogModel,\r\n        columns: {\r\n          ...catalogModel.columns,\r\n          [newRefTest.column.name]: {\r\n            ...catalogModel.columns[newRefTest.column.name],\r\n            tests: [\r\n              ...catalogModel.columns[newRefTest.column.name].tests,\r\n              newTest\r\n            ]\r\n          },\r\n        }\r\n      });\r\n      for(var thisTest in catalogModel.columns[newRefTest.column.name].tests) { //add existing tests to allTests\r\n        if(catalogModel.columns[newRefTest.column.name].tests[thisTest].type === \"relationships\") {\r\n          allTests.push({[catalogModel.columns[newRefTest.column.name].tests[thisTest].type]: {\r\n            \"to\": \"ref('\" + catalogModel.columns[newRefTest.column.name].tests[thisTest].related_model + \"')\",\r\n            \"field\": catalogModel.columns[newRefTest.column.name].tests[thisTest].related_field},\r\n            \"severity\": catalogModel.columns[newRefTest.column.name].tests[thisTest].severity.toUpperCase()})\r\n        } else {\r\n          allTests.push({[catalogModel.columns[newRefTest.column.name].tests[thisTest].type]: {\r\n            \"severity\": catalogModel.columns[newRefTest.column.name].tests[thisTest].severity.toUpperCase()\r\n          }})\r\n        } \r\n      };\r\n      updateMetadataModel({\r\n        \"column\": newRefTest.column.name,\r\n        \"tests\": allTests,\r\n        \"target\": {\"dataset\": {\"metadatafield\": \"ColumnTest\"}}\r\n      });\r\n      handleClose();\r\n    }\r\n    \r\n\r\n    return(\r\n      <Modal show={newRefTest} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Reference Test Setup</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Model to reference:\r\n        <RefSearchResults\r\n          user = {props.user}\r\n          selectModelColumn = {selectModelColumn}\r\n        />\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  function catalogColumns() {\r\n\r\n    const columnRows = () => {\r\n      return Object.entries(catalogModel.columns).map((value,index) => {\r\n        const options = [\r\n          { value: 'not_null', label: 'Not Null', \"column\": value[1].name, \"color\": \"#FF0000\"},\r\n          { value: 'unique', label: 'Unique', \"column\": value[1].name, \"color\": \"#FF0000\"},\r\n          { value: Date.now(), label: 'Relationship', \"column\": value[1].name, \"color\": \"#FF0000\"}\r\n        ]\r\n\r\n        const colourStyles = {\r\n          control: styles => ({ ...styles, backgroundColor: 'white' }),\r\n          option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n            const color = chroma(data.color);\r\n            return {\r\n              ...styles,\r\n              backgroundColor: isDisabled\r\n                ? null\r\n                : isSelected\r\n                ? data.color\r\n                : isFocused\r\n                ? color.alpha(0.1).css()\r\n                : null,\r\n              color: isDisabled\r\n                ? '#ccc'\r\n                : isSelected\r\n                ? chroma.contrast(color, 'white') > 2\r\n                  ? 'white'\r\n                  : 'black'\r\n                : data.color,\r\n              cursor: isDisabled ? 'not-allowed' : 'default',\r\n        \r\n              ':active': {\r\n                ...styles[':active'],\r\n                backgroundColor:\r\n                  !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\r\n              },\r\n            };\r\n          },\r\n          multiValue: (styles, { data }) => {\r\n            const color = chroma(data.color);\r\n            return {\r\n              ...styles,\r\n              backgroundColor: color.alpha(0.1).css(),\r\n            };\r\n          },\r\n          multiValueLabel: (styles, { data }) => ({\r\n            ...styles,\r\n            color: data.color,\r\n          }),\r\n          multiValueRemove: (styles, { data }) => ({\r\n            ...styles,\r\n            color: data.color,\r\n            ':hover': {\r\n              backgroundColor: data.color,\r\n              color: 'white',\r\n            },\r\n          }),\r\n        };\r\n\r\n        function formatTests(tests) {\r\n          var currentTests = []\r\n          for(var thisTest in tests) {\r\n            var testSeverityColor = \"#000000\";\r\n            var testType = \"\";\r\n            var testLabel = \"\";\r\n            if(value[1].tests[thisTest].severity === \"ERROR\") {\r\n              testSeverityColor = \"#FF0000\";\r\n            } else if(value[1].tests[thisTest].severity === \"WARNING\") {\r\n              testSeverityColor = \"#0000FF\";\r\n            }\r\n            if(value[1].tests[thisTest].type === \"relationships\") {\r\n              testType = \"relationships\";\r\n              testLabel = (<span title={value[1].tests[thisTest].related_model + \".\" + value[1].tests[thisTest].related_field}>Relationship</span>);\r\n            } else if(value[1].tests[thisTest].type === \"not_null\") {\r\n              testType = \"not_null\";\r\n              testLabel = \"Not Null\";\r\n            } else if(value[1].tests[thisTest].type === \"unique\") {\r\n              testType = \"unique\";\r\n              testLabel = \"Unique\";\r\n            }\r\n            currentTests.push({\"value\": testType, \"label\": testLabel, \"color\": testSeverityColor})\r\n          }\r\n        return currentTests;\r\n        }\r\n\r\n        function testChanged(testValue, testAction) {\r\n          // \r\n          // \r\n          // \r\n          // \r\n          var allTests = [];\r\n          if(testAction.action === \"select-option\") {\r\n            var newTest = {};\r\n            if(testAction.option.value === \"unique\" || testAction.option.value === \"not_null\") {\r\n              // TODO: push test to column.tests\r\n              newTest = {\"type\": testAction.option.value, \"severity\": \"ERROR\"};\r\n              allTests.push({[testAction.option.value]: {\r\n                \"severity\": \"ERROR\"\r\n              }})\r\n              setCatalogModel({\r\n                ...catalogModel,\r\n                columns: {\r\n                  ...catalogModel.columns,\r\n                  [testAction.option.column]: {\r\n                    ...catalogModel.columns[testAction.option.column],\r\n                    tests: [\r\n                      ...catalogModel.columns[testAction.option.column].tests,\r\n                      newTest\r\n                    ]\r\n                  },\r\n                }\r\n              })\r\n            } else if(testAction.option.label === \"Relationship\") {\r\n              setNewRefTest({\"column\": value[1]});\r\n              setCatalogModel(catalogModel);\r\n            }\r\n            \r\n            for(var thisTest in catalogModel.columns[value[0]].tests) { //add existing tests to allTests\r\n              if(catalogModel.columns[value[0]].tests[thisTest].type === \"relationships\") {\r\n                allTests.push({[catalogModel.columns[value[0]].tests[thisTest].type]: {\r\n                  \"to\": \"ref('\" + catalogModel.columns[value[0]].tests[thisTest].related_model + \"')\",\r\n                  \"field\": catalogModel.columns[value[0]].tests[thisTest].related_field},\r\n                  \"severity\": catalogModel.columns[value[0]].tests[thisTest].severity.toUpperCase()})\r\n              } else {\r\n                allTests.push({[catalogModel.columns[value[0]].tests[thisTest].type]: {\r\n                  \"severity\": catalogModel.columns[value[0]].tests[thisTest].severity.toUpperCase()\r\n                }})\r\n              } \r\n            }\r\n          } else if(testAction.action === \"remove-value\") {\r\n            let removeItemIndex = catalogModel.columns[value[0]].tests.indexOf(testAction.removedValue.value);\r\n            \r\n            \r\n            if(testAction.removedValue.value === 'relationships') {\r\n              \r\n              var newTests = catalogModel.columns[value[0]].tests.filter(thisTest => thisTest.related_model+\".\"+thisTest.related_field !== testAction.removedValue.label.props.title);\r\n            } else {\r\n              \r\n              var newTests = catalogModel.columns[value[0]].tests.filter(thisTest => thisTest.type !== testAction.removedValue.value);\r\n            }\r\n            setCatalogModel({\r\n              ...catalogModel,\r\n              columns: {\r\n                ...catalogModel.columns,\r\n                [value[0]]: {\r\n                  ...catalogModel.columns[value[0]],\r\n                  tests: newTests\r\n                },\r\n              }\r\n            })\r\n            allTests = [];\r\n            for(var thisTest in newTests) { //add existing tests to allTests\r\n              if(newTests[thisTest].type === \"relationships\") {\r\n                allTests.push({[newTests[thisTest].type]: {\r\n                  \"to\": \"ref('\" + newTests[thisTest].related_model + \"')\",\r\n                  \"field\": newTests[thisTest].related_field,\r\n                  \"severity\": newTests[thisTest].severity.toUpperCase()\r\n                }})\r\n              } else {\r\n                allTests.push({[newTests[thisTest].type]: {\r\n                  \"severity\": newTests[thisTest].severity.toUpperCase()\r\n                }})\r\n              } \r\n            }\r\n          }\r\n          updateMetadataModel({\r\n            \"column\": value[0],\r\n            \"tests\": allTests,\r\n            \"target\": {\"dataset\": {\"metadatafield\": \"ColumnTest\"}}\r\n          });\r\n        };\r\n        const MultiValueContainer = props => {\r\n          function MultiValueClick(e) {\r\n            e.preventDefault();\r\n            \r\n            \r\n            \r\n            show(e, {\r\n              props: {\r\n                  \"column\": value[0].toLowerCase(),\r\n                  \"testType\": e.target.textContent,\r\n                  \"relatedField\": e.target.title\r\n              }, id: \"testTypeMenu\",\r\n            })\r\n          }\r\n          return (\r\n            <div onContextMenu={(e) => MultiValueClick(e)}>\r\n              <components.MultiValueContainer {...props}/>\r\n            </div>\r\n          );\r\n        };\r\n        const ClearIndicator = props => {\r\n          return null;\r\n        }\r\n        function changeTest({event, props, data, triggerEvent}) {\r\n          var allTests = [];\r\n          let removeItemIndex = catalogModel.columns[props.column].tests.findIndex(function(thisTest) {\r\n            if(props.testType.toLowerCase() === \"relationship\") {\r\n              \r\n              return thisTest.related_model+\".\"+thisTest.related_field === props.relatedField;\r\n            } else {\r\n              \r\n              return thisTest.type === props.testType.toLowerCase().replace(\" \",\"_\");\r\n            }\r\n          });\r\n          let newTest = Object.assign({}, catalogModel.columns[props.column].tests[removeItemIndex]);\r\n          newTest.severity = event.target.innerText.toUpperCase();\r\n          // var newTests = catalogModel.columns[props.column].tests.filter(thisTest => thisTest.type !== props.testType.toLowerCase());\r\n          if(props.testType.toLowerCase() === 'relationship') {\r\n            \r\n            var newTests = catalogModel.columns[props.column].tests.filter(thisTest => thisTest.related_model+\".\"+thisTest.related_field !== props.relatedField);\r\n          } else {\r\n            \r\n            var newTests = catalogModel.columns[props.column].tests.filter(thisTest => thisTest.type !== props.testType.toLowerCase().replace(\" \",\"_\"));\r\n          }\r\n          newTests.push(newTest)\r\n          setCatalogModel({\r\n            ...catalogModel,\r\n            columns: {\r\n              ...catalogModel.columns,\r\n              [props.column]: {\r\n                ...catalogModel.columns[props.column],\r\n                tests: newTests\r\n              },\r\n            }\r\n          })\r\n          for(var thisTest in newTests) { //add existing tests to allTests\r\n            if(newTests[thisTest].type === \"relationships\") {\r\n              allTests.push({[newTests[thisTest].type]: {\r\n                \"to\": \"ref('\" + newTests[thisTest].related_model + \"')\",\r\n                \"field\": newTests[thisTest].related_field,\r\n                \"severity\": newTests[thisTest].severity.toUpperCase()\r\n              }})\r\n            } else {\r\n              allTests.push({[newTests[thisTest].type]: {\r\n                \"severity\": newTests[thisTest].severity.toUpperCase()\r\n              }})\r\n            } \r\n          }\r\n          updateMetadataModel({\r\n            \"column\": props.column,\r\n            \"tests\": allTests,\r\n            \"target\": {\"dataset\": {\"metadatafield\": \"ColumnTest\"}}\r\n          });\r\n        }\r\n        return(\r\n          <tr key={\"columnRow\"+value[0]}>\r\n            <td className=\"catalogColumnName\">\r\n              {value[0].toLowerCase().replaceAll(\"_\",\"_\\u200b\")}\r\n            </td>\r\n            <td className=\"catalogColumnType\">\r\n              {value[1].type.toLowerCase()}\r\n            </td>\r\n            <td>\r\n              \r\n            <ContentEditable\r\n                  html={value[1].description}\r\n                  onBlur={updateMetadataModel}\r\n                  data-metadatafield=\"ColumnDescription\"\r\n                  className=\"catalogColumnDescription\"\r\n                  data-columnName={value[0].toLowerCase()}\r\n                  placeholder={\"Add a description\"}\r\n                />\r\n            </td>\r\n            <td style={{width:\"230px\"}}>\r\n              <Select \r\n                options={options}\r\n                value={formatTests(catalogModel.columns[value[0]].tests)}\r\n                isMulti\r\n                onChange={testChanged}\r\n                styles={colourStyles}\r\n                menuPortalTarget={document.body}\r\n                openMenuOnClick={false}\r\n                components={{ MultiValueContainer, ClearIndicator }}\r\n              />\r\n            </td>\r\n            <Menu id={\"testTypeMenu\"}>\r\n              <Item id=\"setError\" onClick={changeTest}>Error</Item>\r\n              <Item id=\"setWarning\" onClick={changeTest}>Warning</Item>\r\n            </Menu>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n    if(Object.keys(catalogModel.columns).length > 0) { //if this has columns\r\n      return(\r\n        <div className=\"row mt-md-3\">\r\n          <div className=\"col\">\r\n            <table className=\"table table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    Name\r\n                  </th>\r\n                  <th>\r\n                    Type\r\n                  </th>\r\n                  <th>\r\n                    Description\r\n                  </th>\r\n                  <th>\r\n                    Tests\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {columnRows()}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(\r\n        <div className=\"row\">\r\n          <div className=\"col col-md-auto\">\r\n            This model does not appear to contain any columns.\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n\r\n  function promoteIcon() {\r\n    return(\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"green\" class=\"bi bi-patch-check\" viewBox=\"0 0 16 16\">\r\n        <path fill-rule=\"evenodd\" d=\"M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0z\"/>\r\n        <path d=\"m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z\"/>\r\n      </svg>\r\n    )\r\n  }\r\n\r\n  function demoteIcon() {\r\n      return(\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"red\" class=\"bi bi-patch-exclamation\" viewBox=\"0 0 16 16\">\r\n          <path d=\"M7.001 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.553.553 0 0 1-1.1 0L7.1 4.995z\"/>\r\n          <path d=\"m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z\"/>\r\n        </svg>\r\n      )\r\n  }\r\n  function noPromotionIcon() {\r\n      return(\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"blue\" class=\"bi bi-patch-minus\" viewBox=\"0 0 16 16\">\r\n          <path fill-rule=\"evenodd\" d=\"M5.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H6a.5.5 0 0 1-.5-.5z\"/>\r\n          <path d=\"m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z\"/>\r\n        </svg>\r\n      )\r\n  }\r\n  function modelLabel(modelName, promoteStatus) {\r\n      return(\r\n        <div className={(promoteStatus===1?\" promote\":(promoteStatus===-1?\" demote\":\"\"))}>\r\n          {modelName} {promoteStatus===1?promoteIcon():(promoteStatus===-1?demoteIcon():\"\")}\r\n        </div>\r\n      )\r\n  }\r\n  \r\n  function findFolderTreeNode(arr) { //loop through folder tree to find current model\r\n    return arr.reduce((a, item) => {\r\n      if (a) return a;\r\n      if (item.key === catalogModel.nodeID) return item;\r\n      if (item.nodes) return findFolderTreeNode(item.nodes);\r\n    }, null);\r\n  }\r\n\r\n  const RecurseFullFolderTree = (data) => {\r\n    var fullResults = [RecurseFolderTree(data,\"models\",\"models\")].concat([RecurseFolderTree(data,\"sources\",\"sources\")]);\r\n    return fullResults;\r\n  }\r\n  const RecurseFolderTree = (data, lastItem, modelPath) => {\r\n    var items = [];\r\n    var loopVar;\r\n    if(lastItem) {\r\n      loopVar = data[lastItem];\r\n    } else {\r\n      loopVar = data;\r\n    }\r\n    if(Object.keys(loopVar) && Object.keys(loopVar) && Object.keys(loopVar).length > 0 && (Object.keys(loopVar).length > 2 || !loopVar.nodeID)) {\r\n      for(var item in loopVar) {\r\n        if(item !== 'nodeID' && item !== 'promote_status') {\r\n          items.push(RecurseFolderTree(loopVar, item, modelPath + \".\" + item));\r\n        }\r\n      };\r\n      items = items.sort(function(a, b) {\r\n        if (a.label > b.label) {\r\n          return 1;\r\n        }\r\n        if (a.label < b.label) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n      return(\r\n        {\"label\":lastItem, \"key\":modelPath, \"nodes\": items}\r\n      );\r\n    } else {\r\n      return(\r\n        {\"label\":modelLabel(lastItem, loopVar.promote_status), \"key\":loopVar.nodeID}\r\n      );\r\n    };\r\n  };\r\n\r\n  const RecurseFullDBTree = (data) => {\r\n    \r\n    var fullResults = PopulateDBTree(data.db_models);\r\n    return fullResults;\r\n  }\r\n  const PopulateDBTree = (data) => {\r\n    var items = [];\r\n\r\n    \r\n\r\n    for(var item in data) {\r\n      \r\n      if(items.filter(function(e) {return e.label === data[item].database}).length === 0 ||\r\n        items.filter(function(e) { return e.label === data[item].database})[0].length===0) {\r\n          items.push({\"label\": data[item].database, \"key\": data[item].database, \"nodes\": []});\r\n      }\r\n      \r\n      \r\n      var thisDB = items.filter(function(e) { return e.key === data[item].database})[0].nodes;\r\n      if(!thisDB || thisDB.length === 0 || thisDB.filter(function(e) { return e.label === data[item].schema}).length===0) {\r\n        thisDB.push({\"label\": data[item].schema, \"key\": data[item].schema, \"nodes\": []})\r\n      }\r\n      var thisSchema = thisDB.filter(function(e) { return e.key === data[item].schema})[0].nodes;\r\n      thisSchema.push({\"label\": modelLabel(data[item].name, data[item].promote_status), \"key\": data[item].nodeID})\r\n\r\n      // items[data[item].database].nodes[data[item].schema].nodes[data[item].name] = {\"label\": data[item].name, \"key\": data[item].schema}\r\n    }\r\n    function sortByLabel(a,b) {\r\n      if (a.label > b.label) {\r\n        return 1;\r\n      }\r\n      if (a.label < b.label) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n    items = items.sort((a, b) => sortByLabel(a,b));\r\n    for(var itemDB in items) {\r\n      items[itemDB].nodes = items[itemDB].nodes.sort((a, b) => sortByLabel(a,b));\r\n      for(var itemDBSchema in items[itemDB].nodes) {\r\n        items[itemDB].nodes[itemDBSchema].nodes = items[itemDB].nodes[itemDBSchema].nodes.sort((a, b) => sortByLabel(a,b));\r\n      }\r\n    }\r\n    return(items);\r\n  };\r\n\r\n  function updateMetadataModel (e) {\r\n    var metadataBody = {};\r\n    var newTags = [];\r\n    var newTagsWithPromotion = [];\r\n    switch(e.target.dataset.metadatafield) {\r\n      case \"Description\":\r\n        metadataBody = {\r\n          \"updateMethod\": \"yamlModelProperty\",\r\n          \"yaml_path\": catalogModel.yaml_path,\r\n          \"model_path\": catalogModel.model_path,\r\n          \"model\": catalogModel.name,\r\n          \"node_id\": catalogModel.nodeID,\r\n          \"property_name\": \"description\",\r\n          \"new_value\": e.target.innerText\r\n        }\r\n        setCatalogModel({\r\n          ...catalogModel,\r\n          \"description\": e.target.innerText\r\n        });\r\n      break;\r\n      case \"Promotion\":\r\n        newTags = [...catalogModel.tags];\r\n        newTagsWithPromotion = [...newTags];\r\n        if(e.newPromotionStatus===1) {\r\n          newTagsWithPromotion.push(props.serverConfig.promotion_tag)\r\n        } else if(e.newPromotionStatus===-1) {\r\n          newTagsWithPromotion.push(props.serverConfig.demotion_tag)\r\n        }\r\n        metadataBody = {\r\n          \"updateMethod\": \"yamlModelTags\",\r\n          \"yaml_path\": catalogModel.yaml_path,\r\n          \"model_path\": catalogModel.model_path,\r\n          \"model\": catalogModel.name,\r\n          \"node_id\": catalogModel.nodeID,\r\n          \"property_name\": \"tags\",\r\n          \"new_value\": newTagsWithPromotion,\r\n        }\r\n        setCatalogModel({\r\n          ...catalogModel,\r\n          \"promote_status\": e.newPromotionStatus\r\n        });\r\n        var newDBTree = [...dbTree]\r\n        var thisTreeNode = newDBTree.filter(node => node.key === catalogModel.database)[0].nodes.filter(node => node.key === catalogModel.schema)[0].nodes.filter(node => node.key === catalogModel.nodeID)[0]\r\n        thisTreeNode.label = modelLabel(catalogModel.name, e.newPromotionStatus);\r\n        setDBTree(newDBTree);\r\n        var newFolderTree = [...folderTree]\r\n\r\n        var thisFolderTreeNode = findFolderTreeNode(newFolderTree)\r\n        thisFolderTreeNode.label = modelLabel(catalogModel.name, e.newPromotionStatus);\r\n        setDBTree(newDBTree);\r\n\r\n        \r\n        // setDBTree()\r\n      break;\r\n      case \"Tags\":\r\n        if(e.target.innerText === \"None\") {\r\n          metadataBody = null;\r\n          break;\r\n        }\r\n        newTags = e.target.innerText.split(',').map(function(item) { // Split tags by commas, and remove any spaces if any\r\n          return item.trim();\r\n        });\r\n        newTagsWithPromotion = [...newTags];\r\n        if(catalogModel.promote_status===1) {\r\n          newTagsWithPromotion.push(props.serverConfig.promotion_tag)\r\n        } else if(catalogModel.promote_status===-1) {\r\n          newTagsWithPromotion.push(props.serverConfig.demotion_tag)\r\n        }\r\n        metadataBody = {\r\n          \"updateMethod\": \"yamlModelTags\",\r\n          \"yaml_path\": catalogModel.yaml_path,\r\n          \"model_path\": catalogModel.model_path,\r\n          \"model\": catalogModel.name,\r\n          \"node_id\": catalogModel.nodeID,\r\n          \"property_name\": \"tags\",\r\n          \"new_value\": newTagsWithPromotion,\r\n        }\r\n        setCatalogModel({\r\n          ...catalogModel,\r\n          \"tags\": newTags\r\n        });\r\n      break;\r\n      case \"ColumnDescription\":\r\n        metadataBody = {\r\n          \"updateMethod\": \"yamlModelColumnProperty\",\r\n          \"yaml_path\": catalogModel.yaml_path,\r\n          \"model_path\": catalogModel.model_path,\r\n          \"model\": catalogModel.name,\r\n          \"node_id\": catalogModel.nodeID,\r\n          \"column\": e.target.dataset.columnname,\r\n          \"property_name\": \"description\",\r\n          \"new_value\": e.target.innerText\r\n        }\r\n        setCatalogModel({\r\n          ...catalogModel,\r\n          columns: {\r\n            ...catalogModel.columns,\r\n            [e.target.dataset.columnname]: {\r\n              ...catalogModel.columns[e.target.dataset.columnname],\r\n              \"description\": e.target.innerText\r\n            },\r\n          }\r\n        })\r\n      break;\r\n      case \"ColumnTest\":\r\n        metadataBody = {\r\n          \"updateMethod\": \"yamlModelColumnTest\",\r\n          \"yaml_path\": catalogModel.yaml_path,\r\n          \"model_path\": catalogModel.model_path,\r\n          \"model\": catalogModel.name,\r\n          \"node_id\": catalogModel.nodeID,\r\n          \"column\": e.column,\r\n          \"new_value\": e.tests\r\n        }\r\n      // catalogModel is already updated by the tests process\r\n      break;\r\n      default:\r\n        // \r\n    }\r\n    if(metadataBody) {\r\n      // \r\n      fetch('/api/v1/update_metadata', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Token ' + props.user.token,\r\n        },\r\n        body: JSON.stringify(metadataBody)\r\n      });\r\n    }\r\n  }\r\n\r\n  function lineageModal(lineage, selectModel) {\r\n    function LineageModal(lineage) {\r\n      const [show, setShow] = useState(false);\r\n    \r\n      const handleClose = () => setShow(false);\r\n      const handleShow = () => setShow(true);\r\n      // \r\n      // \r\n    \r\n      return (\r\n        <>\r\n          <Button className=\"tealButton\" onClick={handleShow}>\r\n            Show Lineage\r\n          </Button>\r\n    \r\n          <Modal show={show} onHide={handleClose} size=\"xl\">\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>{catalogModel.name}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"lineagebox\">\r\n              <LayoutFlow className=\"lineagebox\" lineageArray={lineage}/>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n    return <LineageModal lineage={lineage}/>\r\n  }\r\n\r\n  function showCreatedBy() {\r\n    if(catalogModel.model_type===\"node\" && catalogModel.created_by) { \r\n      return(\r\n        <div className=\"row mt-md-3\">\r\n          <div className=\"col col-md-auto\">\r\n            Created: {catalogModel.created_by + (catalogModel.created_relative_date?\", \"+catalogModel.created_relative_date:null)} \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  }\r\n\r\n  function treePath(nodeID) {\r\n    let last;\r\n    let arrayPath = []\r\n    if(catalogModel.model_type === \"node\" && nodeID === catalogModel.nodeID) {\r\n      let modelPath = catalogModel.model_path.replaceAll('\\\\','/');\r\n      let obj = modelPath.substr(0,modelPath.lastIndexOf(('.'))).split('/').reduce((o, val) => {\r\n        if (typeof last == 'object') {\r\n          last = last[val] = {};\r\n          arrayPath.push(val)\r\n        } else {\r\n          last = o[val] = {};\r\n          arrayPath.push(val)\r\n        }\r\n      \r\n        return o;\r\n      }, {});\r\n    } else if(catalogModel.model_type === \"source\" && nodeID === catalogModel.nodeID) {\r\n      var removedProjectName = nodeID.split('.');\r\n      removedProjectName.splice(1,1);\r\n      removedProjectName[0] = 'sources'\r\n      let obj = removedProjectName.reduce((o, val) => {\r\n        if (typeof last == 'object') {\r\n          last = last[val] = {};\r\n          arrayPath.push(val)\r\n        } else {\r\n          last = o[val] = {};\r\n          arrayPath.push(val)\r\n        }\r\n      \r\n        return o;\r\n      }, {});\r\n    } else if(nodeID !== catalogModel.nodeID) {\r\n      var removedProjectName = nodeID.split('.');\r\n      let obj = removedProjectName.reduce((o, val) => {\r\n        if (typeof last == 'object') {\r\n          last = last[val] = {};\r\n          arrayPath.push(val)\r\n        } else {\r\n          last = o[val] = {};\r\n          arrayPath.push(val)\r\n        }\r\n      \r\n        return o;\r\n      }, {});\r\n    }\r\n    return arrayPath; \r\n  }\r\n  \r\n  function getTreeRef(nodeID) {\r\n    if(nodeID) {\r\n      var modelPath = treePath(nodeID);\r\n      var runningFullModel = false;\r\n      if(modelPath[modelPath.length-1] === catalogModel.name) {\r\n        modelPath.pop(); //remove last key, we'll add that manually\r\n        runningFullModel = true;\r\n      }\r\n      var strPath = modelPath[0] + \"/\";\r\n      var pathSoFar = modelPath[0] + \".\";\r\n      modelPath.splice(0,1); //remove first key, we'll add that manually\r\n      for(var thisModel in modelPath) {\r\n        strPath += pathSoFar + modelPath[thisModel] + \"/\";\r\n        pathSoFar += thisModel + \".\";\r\n      }\r\n      if(runningFullModel) {\r\n        strPath += nodeID;\r\n      } else {\r\n        strPath = strPath.slice(0,-1);\r\n      }\r\n      return strPath; //sources/sources.public/source.my_new_project.public.actor\r\n    } else return null;\r\n  }\r\n\r\n  function SearchPage() {\r\n    let { searchQuery } = useParams();\r\n    if(searchResults && searchResults.searchString === searchQuery) {\r\n      var selectSearchResult = (e,index) => {\r\n          history.push(\"/catalog/\"+searchResults.results[index].nodeID);\r\n      }\r\n      return(\r\n        <ShowSearchResults\r\n          searchResults = {searchResults}\r\n          resultSelectFunction = {selectSearchResult}\r\n        />\r\n      )\r\n      \r\n    } else {\r\n      getModelSearch(searchQuery, props.user)\r\n      .then(response => {\r\n        // \r\n        if(response.length===0 || response.error) {\r\n          setSearchResults([]);\r\n          return null;\r\n        }\r\n        if(response.searchString === window.location.href.split('/').pop()) {\r\n          //searchQuery and router don't update fast enough; only current url does\r\n          setSearchResults(response);\r\n        };\r\n      });\r\n      return(<div>Loading Search Results...</div>)\r\n    } \r\n  }\r\n\r\n  function CatalogPage() {\r\n    let { catalogPage } = useParams();\r\n    \r\n    \r\n    if(Object.keys(catalogModel).length === 0 || catalogModel.nodeID !== catalogPage) {\r\n      getModel(catalogPage, props.user)\r\n      .then(response => {\r\n        // \r\n        if(!response.error) {\r\n          setCatalogModel(response);\r\n          if(rawModelTree) {\r\n            setFolderTree(RecurseFullFolderTree(rawModelTree));\r\n            // treeRef.current.resetOpenNodes(treeRef.current.state.openNodes,getTreeRef(catalogModel.nodeID));\r\n          }\r\n        }\r\n      });\r\n      \r\n      getDBTree(props.user)\r\n      .then(response => {\r\n        if(!response.error) {\r\n          setRawDBTree(response);\r\n          setDBTree(RecurseFullDBTree(response));\r\n          \r\n        }\r\n      })\r\n      return(<div>No Model Found</div>);\r\n    }\r\n    function showPromotionMenu(e) {\r\n      e.preventDefault();\r\n      show(e, {\r\n        props: {\r\n        }, id: \"promotionMenu\",\r\n      })\r\n    }\r\n\r\n    function setModelPromotion({event, props, data, triggerEvent}) {\r\n      var newPromotionStatus = 0;\r\n      if(event.target.innerText === \"Promote\") {\r\n        newPromotionStatus = 1;\r\n      } else if(event.target.innerText === \"Demote\") {\r\n        newPromotionStatus = -1;\r\n      }\r\n      updateMetadataModel({\r\n        \"newPromotionStatus\": newPromotionStatus,\r\n        \"target\": {\"dataset\": {\"metadatafield\": \"Promotion\"}}\r\n      });\r\n    }\r\n    \r\n    const tags = catalogModel.tags.length>0?catalogModel.tags.join(\", \"):null\r\n    return(\r\n      <Container className=\"catalogContainer display-block\">\r\n        <div className=\"row justify-content-md-left\">\r\n          <div className=\"col col-md-auto pr-md-3\">\r\n            <h3 className=\"mb-md-0\">\r\n              {catalogModel.name.toLowerCase()} <div className=\"catalog_title_promotion\" onContextMenu={(e) => showPromotionMenu(e)}>{catalogModel.promote_status===1?promoteIcon():(catalogModel.promote_status===-1?demoteIcon():noPromotionIcon())}</div>\r\n            </h3>\r\n          </div>\r\n          <div className=\"col font-italic align-self-end pl-md-0\">\r\n            {catalogModel.materialization}\r\n          </div>\r\n          <div className=\"col align-self-end pl-md-0 text-right\">\r\n            tags: <i>\r\n              <ContentEditable\r\n                innerRef={tags}\r\n                html={tags}\r\n                onBlur={updateMetadataModel}\r\n                data-metadatafield=\"Tags\"\r\n                placeholder={\"Add comma-separated Tags\"}\r\n                style= {{display: \"inline\", minWidth: \"100px\"}}\r\n              />\r\n            </i>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-between pt-md-1\">\r\n          <div className=\"col col-md-auto\">\r\n            {catalogModel.database.toLowerCase()}.{catalogModel.schema.toLowerCase()}.{catalogModel.name.toLowerCase()}\r\n          </div>\r\n          <div className=\"col col-md-auto\">\r\n            {catalogModel.row_count?Number(catalogModel.row_count).toLocaleString()+\" rows\":null}\r\n          </div>\r\n        </div>\r\n        {showCreatedBy()}\r\n        <div className=\"row mt-md-3\">\r\n          <div className=\"col col-md-auto\">\r\n            <ContentEditable\r\n              innerRef={catalogModel.description}\r\n              html={catalogDescription()}\r\n              onBlur={updateMetadataModel}\r\n              data-metadatafield=\"Description\"\r\n              placeholder={\"Add a description\"}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-md-3\">\r\n          <div className=\"col col-md-auto\">\r\n            {lineageModal(catalogModel.lineage, props.selectModel)}\r\n          </div>\r\n        </div>\r\n        <Accordion className=\"mt-md-3\" defaultActiveKey=\"0\">\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                Columns\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <div className=\"container\">\r\n                {catalogColumns()}\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                SQL\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <div className=\"container\">\r\n                <div className=\"row mt-md-3 mb-md-3\">\r\n                  <div className=\"col col-md-auto\">\r\n                    <Tabs defaultActiveKey=\"raw\" id=\"uncontrolled-tab-example\" className=\"ml-md-1\">\r\n                      <Tab eventKey=\"raw\" title=\"raw SQL\" className=\"py-md-3 catalogSQL\">\r\n                        {catalogModel.raw_sql}\r\n                      </Tab>\r\n                      <Tab eventKey=\"processed\" title=\"processed SQL\" className=\"py-md-3 catalogSQL\">\r\n                        {catalogModel.compiled_sql}\r\n                      </Tab>\r\n                    </Tabs>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                Code Change History\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <div className=\"container\">\r\n                <div className=\"row mt-md-3 mb-md-3\">\r\n                  <div className=\"col col-md-auto\">\r\n                    {nodeContributors()}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mt-md-3 mb-md-3\">\r\n                  <div className=\"col col-md-auto\">\r\n                    {nodeHistory()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\r\n                Depends On\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"3\">\r\n              <div className=\"container\">\r\n                <div className=\"row mt-md-3 mb-md-3\">\r\n                  <div className=\"col col-md-auto\">\r\n                    {catalogDependsOn()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"4\">\r\n                Dependencies\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <div className=\"container\">\r\n                <div className=\"row mt-md-3 mb-md-3\">\r\n                  <div className=\"col col-md-auto\">\r\n                    {catalogDependencies()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n        <AddRefTest/>\r\n        <Menu id={\"promotionMenu\"}>\r\n          <Item id=\"promote_model\" onClick={setModelPromotion}>Promote</Item>\r\n          <Item id=\"remove_promotion\" onClick={setModelPromotion}>Default</Item>\r\n          <Item id=\"demote_model\" onClick={setModelPromotion}>Demote</Item>\r\n        </Menu>\r\n      </Container>\r\n    )\r\n  }\r\n  \r\n  const NavigationDrawer = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const handleToggle = () => setOpen(!open);\r\n\r\n    var treeModelClick = (e) => {\r\n      \r\n      if(e.hasNodes === false) {\r\n        history.push(\"/catalog/\"+e.key.split(\"/\").pop());\r\n      } else {\r\n        treeFolderRef.current.resetOpenNodes(treeFolderRef.current.state.openNodes,getTreeRef(catalogModel.nodeID));\r\n        treeFolderRef.current.toggleNode(e.key);\r\n        treeDBRef.current.resetOpenNodes(treeDBRef.current.state.openNodes,[catalogModel.database, catalogModel.database+\"/\"+catalogModel.schema]);\r\n        treeDBRef.current.toggleNode(e.key);\r\n      }\r\n    };\r\n\r\n    function currentOpenNodes(nodeID) {\r\n      var splitNodeID = []\r\n      var thisStep = {}\r\n      var openNodes = []\r\n      if(nodeID) {\r\n      splitNodeID = treePath(nodeID);\r\n      var stepsSoFar = splitNodeID[0];\r\n      openNodes.push(splitNodeID[0]);\r\n      splitNodeID.splice(0,1);\r\n      for(thisStep in splitNodeID) {\r\n        openNodes.push(getTreeRef(stepsSoFar+\".\"+splitNodeID[thisStep]))\r\n        stepsSoFar += \".\"+splitNodeID[thisStep]\r\n      }\r\n      return openNodes;\r\n    } else return null;\r\n    }\r\n    return (\r\n      <Drawer { ...props }>\r\n        <Drawer.Toggle onClick={ handleToggle } />\r\n  \r\n        <Collapse in={ open }>\r\n          <Drawer.Overflow>\r\n              <Drawer.Nav>\r\n                <Tabs activeKey={treeTab} id=\"treemenu\" onSelect={(k) => setTreeTab(k)} className=\"treeTabs nav nav-tabs nav-justified\">\r\n                  <Tab eventKey=\"folders\" title=\"Project View\">\r\n                    <TreeMenu\r\n                      data={folderTree}\r\n                      initialActiveKey={getTreeRef(catalogModel.nodeID)}\r\n                      initialOpenNodes={currentOpenNodes(catalogModel.nodeID)}\r\n                      onClickItem={treeModelClick}\r\n                      ref={treeFolderRef}\r\n                      hasSearch={false}\r\n                    >\r\n                    </TreeMenu>\r\n                  </Tab>\r\n                  <Tab eventKey=\"databases\" title=\"Database View\">\r\n                    <TreeMenu\r\n                      data={dbTree}\r\n                      initialActiveKey={catalogModel.database+\"/\"+catalogModel.schema+\"/\"+catalogModel.nodeID}\r\n                      initialOpenNodes={[catalogModel.database, catalogModel.database+\"/\"+catalogModel.schema]}\r\n                      onClickItem={treeModelClick}\r\n                      ref={treeDBRef}\r\n                      hasSearch={false}\r\n                    >\r\n                    </TreeMenu>\r\n                  </Tab>\r\n                </Tabs>\r\n              </Drawer.Nav>\r\n          </Drawer.Overflow>\r\n        </Collapse>\r\n      </Drawer>\r\n    );\r\n  };\r\n  \r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"flex-xl-nowrap\">\r\n          <Col as={ NavigationDrawer } xs={ 12 } md={ 4 } lg={ 3 } />\r\n          <Col>\r\n            <Switch>\r\n              <Route exact path = {path}>\r\n                \r\n              </Route>\r\n              <Route path={`${path}/search/:searchQuery`}>\r\n                <SearchPage/>\r\n              </Route>\r\n              <Route path={`${path}/search/`}>\r\n                <SearchPage/>\r\n              </Route>\r\n              <Route path={`${path}/:catalogPage`}>\r\n                <CatalogPage/>\r\n              </Route>\r\n            </Switch>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n}\r\n","export async function getSSH(user) {\r\n    const response = await fetch('/api/v1/get_ssh', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response;\r\n}","export async function getGenerateSSH(user) {\r\n    const response = await fetch('/api/v1/generate_ssh', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response;\r\n}","export async function getOpenGit(user) {\r\n    const response = await fetch('/api/v1/open_git_connection', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response;\r\n}","export async function getCheckDBTConnection(user) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/check_dbt_connection', {\r\n        method: 'GET', \r\n        headers: {\r\n                Authorization: \"Token \" + user.token\r\n            }\r\n    })\r\n    return await response;\r\n}","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport {Collapse, Container, Row, Col } from 'react-bootstrap';\r\nimport { io } from \"socket.io-client\";\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import JsonFilenameInput from './components/JsonFilenameInput'\r\nimport Login from './components/Login';\r\nimport Config from './components/Config';\r\nimport ModelBuilder from './components/ModelBuilder';\r\nimport { NavBar } from './components/NavBar';\r\nimport Catalog from './components/Catalog';\r\nimport { getSSH } from \"./services/getSSH\";\r\nimport { getUserConfig } from \"./services/getUserConfig\";\r\nimport { getServerConfig } from \"./services/getServerConfig\";\r\nimport { getGenerateSSH } from \"./services/getGenerateSSH\";\r\nimport { getOpenGit } from \"./services/getOpenGit\";\r\nimport { getCheckDBTConnection } from \"./services/getCheckDBTConnection\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.modelBuilder = React.createRef();\r\n    var hostVersion = '';\r\n    var tempUser = {};\r\n    if(window.location.port === '8080') { // python version\r\n      // console.log('python')\r\n      hostVersion = 'python'\r\n      tempUser = {\"token\":\"\"}\r\n      console.log(\"Getting Server Config\")\r\n      getServerConfig(tempUser)\r\n        .then(response => {\r\n          console.log(\"Received Server Config\")\r\n          this.setState({\"serverConfig\": response})\r\n        });\r\n    } else {\r\n      // console.log('node')\r\n      hostVersion = 'node'\r\n      if(sessionStorage.getItem(\"user\")) {\r\n        getUserConfig(JSON.parse(sessionStorage.getItem(\"user\")).user)\r\n        .then(response => {\r\n          this.setState({\"userConfig\": response.user})\r\n        });\r\n        tempUser = JSON.parse(sessionStorage.getItem(\"user\")).user;\r\n        \r\n      }\r\n    }\r\n    document.title = 'Tāngata';\r\n    this.state = {\r\n      appState: \"Catalog\",\r\n      \"hostVersion\": hostVersion,\r\n      modelBuilder: {\r\n        \"models\": [{\"name\": \"humans\"},{\"name\":\"abductions\"}],\r\n        \"logState\": false,\r\n        \"openSQLPanel\": false,\r\n        \"addModel\": {}\r\n      },\r\n      contextMenuOpen: false,\r\n      catalogModel: {},\r\n      sshKey: \"\",\r\n      user: tempUser,\r\n      userConfig: {},\r\n      serverConfig: {},\r\n      userMessages: []\r\n    };\r\n  }\r\n  \r\n  \r\n\r\n  handleAllClicks = (e) => {\r\n    // console.log(\"handleAllClicks\");\r\n    if(this.state.contextMenuOpen===true) {\r\n      this.setState({contextMenuOpen: false});\r\n    }\r\n  };\r\n\r\n  // addModelToModelBuilder = (nodeId) => {\r\n\r\n  //   this.setState({modelBuilder: {...this.state.modelBuilder, \"addModel\": \r\n  // }\r\n\r\n  // selectModel = (nodeId) => {\r\n  //   // console.log(\"selectModel\");\r\n  //   // console.log(nodeId);\r\n  //   getModel(nodeId, this.state.user)\r\n  //     .then(response => {\r\n  //       // console.log(response)\r\n  //       if(!response.error) {\r\n  //         if(this.state.appState === \"Catalog\") {\r\n  //           this.setState({\"catalogModel\":response})\r\n  //         }\r\n  //       }\r\n        \r\n  //     });\r\n  // }\r\n\r\n  openContextMenu = (openState) => {\r\n    // console.log(\"openContextMenu\");\r\n    if(openState===true) {\r\n      this.setState({contextMenuOpen: true});\r\n    } else {\r\n      this.setState({contextMenuOpen: false});\r\n    }\r\n  }\r\n\r\n  logState = () => {\r\n    this.setState({\"logState\": true})\r\n  }\r\n  openSQLPanel = () => {\r\n    this.setState({\"openSQLPanel\": true})\r\n  }\r\n\r\n  addModel = () => {\r\n    // console.log(\"Not yet implemented\"); //TODO: add input model from catalog\r\n  }\r\n\r\n  openModelBuilder = () => {\r\n    this.setState({\"appState\": \"ModelBuilder\"})\r\n  }\r\n\r\n  openCatalog = () => {\r\n    this.setState({\"appState\": \"Catalog\"})\r\n  }\r\n\r\n  openConfig = () => {\r\n    this.setState({\"appState\": \"Config\"})\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(this.state.logState === true) {\r\n      console.log(\"App State:\");\r\n      console.log(this.state);\r\n      this.setState({\"logState\": false})\r\n    }\r\n    if(this.state.openSQLPanel === true) this.setState({\"openSQLPanel\": false});\r\n  }\r\n  // componentDidMount() {\r\n  //   if(window.location.port === '8080') { // python version\r\n  //     console.log('python')\r\n  //     this.setState({\"hostVersion\": \"python\"})\r\n  //   } else {\r\n  //     console.log('node')\r\n  //     this.setState({\"hostVersion\": \"node\"})\r\n  //   }\r\n  //   if(Object.keys(this.state.user).length === 0) {\r\n  //     if(sessionStorage.getItem(\"user\")) {\r\n  //       getUserConfig(JSON.parse(sessionStorage.getItem(\"user\")).user)\r\n  //       .then(response => {\r\n  //         this.setUserConfig(response.user);\r\n  //       });\r\n  //       this.setUser(JSON.parse(sessionStorage.getItem(\"user\")))\r\n  //     }\r\n      \r\n  //   }\r\n  //   document.title = 'Tāngata';\r\n  // }\r\n\r\n  setUser = (newUser) => {\r\n    // console.log(\"setUser\");\r\n    this.setState({\"user\": newUser.user})\r\n  }\r\n  setUserConfig = (newUserConfig) => {\r\n    this.setState({\"userConfig\": newUserConfig})\r\n  }\r\n  setServerConfig = (newServerConfig) => {\r\n    this.setState({\"serverConfig\": newServerConfig})\r\n  }\r\n\r\n  setSSHKey = () => {\r\n    getSSH(this.state.user)\r\n    .then(response=> response.text())\r\n    .then(responseText => {\r\n      // console.log(responseText);\r\n      this.setState({\"sshKey\": responseText});\r\n    });\r\n  }\r\n\r\n  generateSSHKey = () => {\r\n    getGenerateSSH(this.state.user)\r\n    .then(response=> response.text())\r\n    .then(responseText => {\r\n      this.setState({\"sshKey\": responseText});\r\n    });\r\n  }\r\n\r\n  openGitConnection = () => {\r\n    getOpenGit(this.state.user)\r\n    .then(response=> response.text())\r\n    .then(responseText => {\r\n      return responseText;\r\n    });\r\n  }\r\n  checkDBTConnection = () => {\r\n    getCheckDBTConnection(this.state.user)\r\n    .then(response=> {\r\n      // console.log(response);\r\n      if(response.ok === true) {\r\n        // console.log(\"Success\");\r\n        toast.success(\"DBT_ Connection Successful.\");\r\n      } else {\r\n        response.text()\r\n        .then(responseText=> {\r\n          // console.log(response);\r\n          // console.log(responseText);\r\n          toast.error(\"DBT_ Connection Failed: \" + responseText, {\r\n            autoClose: 10000,\r\n            });\r\n          // toast(response);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  toastSender = (message, toastType) => {\r\n    if(toastType === \"error\") {\r\n      toast.error(message);\r\n    } else if (toastType === \"success\") {\r\n      toast.success(message);\r\n    } else {\r\n      toast(message);\r\n    }\r\n  }\r\n  \r\n  clearUserMessages = () => {\r\n    this.setState({\"userMessages\": []})\r\n  } \r\n\r\n  LoginRoute = ({ children, ...rest }) => {\r\n    // console.log(this.state.hostVersion);\r\n    // console.log(Object.keys(this.state.user).length)\r\n    // console.log(rest);\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          (this.state.hostVersion === 'python' || Object.keys(this.state.user).length > 0) ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\"\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n  \r\n  render() {\r\n    // console.log(window.location)\r\n    // console.log(window.location.port)\r\n    var socket = null\r\n    socket = io({\r\n      auth: (cb) => {\r\n        cb({\r\n          token: this.state.user\r\n        });\r\n      }\r\n    });\r\n    socket.on(\"connect\", () => {\r\n      // either with send()\r\n      socket.send(\"Hello!\");\r\n    });\r\n    socket.on(\"toast\", (data) => {\r\n      // console.log(\"Toast received\");\r\n      this.toastSender(data.message, data.type);\r\n    });\r\n\r\n    return (\r\n      <Router>\r\n        <div id=\"main\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/catalog\"/>\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <Login\r\n                setUser={this.setUser}\r\n                setUserConfig={this.setUserConfig}\r\n                setServerConfig={this.setServerConfig}\r\n                user={this.state.user}\r\n                appState={this.state.appState}\r\n              />\r\n            </Route>\r\n            <this.LoginRoute path={[\"/catalog\",\"/search\"]}>\r\n              <NavBar\r\n                addModel={this.addModel}\r\n                hostVersion={this.state.hostVersion}\r\n                logState={this.logState}\r\n                openSQLPanel={this.openSQLPanel}\r\n                openModelBuilder={this.openModelBuilder}\r\n                openCatalog={this.openCatalog}\r\n                openConfig={this.openConfig}\r\n                appState={this.state.appState}\r\n                openContextMenu={this.openContextMenu}\r\n                contextMenuOpen={this.state.contextMenuOpen}\r\n                selectModel={this.selectModel}\r\n                user={this.state.user}\r\n                setUser={this.setUser}\r\n                userConfig={this.state.userConfig}\r\n                setUserConfig={this.setUserConfig}\r\n              />\r\n              <div className=\"body\">\r\n                <Catalog\r\n                  appState={this.state.appState}\r\n                  catalogModel={this.state.catalogModel}\r\n                  selectModel={this.selectModel}\r\n                  user={this.state.user}\r\n                  serverConfig={this.state.serverConfig}\r\n                  hostVersion={this.state.hostVersion}\r\n                />\r\n              </div>\r\n            </this.LoginRoute>\r\n            <this.LoginRoute path=\"/config\">\r\n              <NavBar\r\n                addModel={this.addModel}\r\n                logState={this.logState}\r\n                openSQLPanel={this.openSQLPanel}\r\n                openModelBuilder={this.openModelBuilder}\r\n                openCatalog={this.openCatalog}\r\n                openConfig={this.openConfig}\r\n                appState={this.state.appState}\r\n                openContextMenu={this.openContextMenu}\r\n                contextMenuOpen={this.state.contextMenuOpen}\r\n                selectModel={this.selectModel}\r\n                user={this.state.user}\r\n                setUser={this.setUser}\r\n                userConfig={this.state.userConfig}\r\n                setUserConfig={this.setUserConfig}\r\n              />\r\n              <div className=\"body\">\r\n                <Config\r\n                  appState={this.state.appState}\r\n                  user={this.state.user}\r\n                  hostVersion={this.state.hostVersion}\r\n                  userConfig={this.state.userConfig}\r\n                  setUserConfig={this.setUserConfig}\r\n                  serverConfig={this.state.serverConfig}\r\n                  setServerConfig={this.setServerConfig}\r\n                  sshKey={this.state.sshKey}\r\n                  setSSHKey={this.setSSHKey}\r\n                  generateSSHKey={this.generateSSHKey}\r\n                  openGitConnection={this.openGitConnection}\r\n                  checkDBTConnection={this.checkDBTConnection}\r\n                  toastSender={this.toastSender}\r\n                />\r\n              </div>\r\n            </this.LoginRoute>\r\n          </Switch>\r\n          <ToastContainer\r\n            position=\"bottom-center\"\r\n            autoClose={8000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}