{"version":3,"sources":["services/postLoginUser.js","services/postRegisterUser.js","services/refreshMetadata.js","services/getUserConfig.js","components/Login.js","services/postUserConfig.js","services/postFileUpload.js","services/getDBTCloudAccounts.js","services/getDBTCloudJobs.js","components/Config.js","components/EditJoinPanel.js","components/Models.js","components/AutoComplete.js","components/Conditions.js","components/Selects.js","services/getModelJson.js","components/SQLPanel.js","components/ModelBuilder.js","services/getModelSearch.js","components/NavBar.js","components/Lineage.js","services/getModel.js","services/getModelTree.js","components/Catalog.js","services/getSSH.js","services/getGenerateSSH.js","services/getOpenGit.js","services/getCheckDBTConnection.js","App.js","reportWebVitals.js","index.js"],"names":["loginBody","a","fetch","method","headers","body","JSON","stringify","response","json","registerBody","refreshMetadata","user","Authorization","token","getUserConfig","Login","props","useState","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","history","useHistory","hostVersion","Object","keys","length","push","class","className","Tabs","defaultActiveKey","id","Tab","eventKey","title","Form","onSubmit","event","preventDefault","postLoginUser","then","setUser","sessionStorage","setItem","setUserConfig","Group","size","controlId","Label","Control","autoFocus","type","value","onChange","e","target","Button","block","disabled","postRegisterUser","postUserConfig","newConfig","configToSend","_id","postFileUpload","uploadFormData","uploadType","account","Config","copySuccess","setCopySuccess","dbtAccounts","setdbtAccounts","dbtDocsJobs","setdbtDocsJobs","sshKeyRef","useRef","dbtCloudKey","dbtAccountRef","dbtJobRef","updateConfigValue","newValue","updatedField","userConfig","uploadFile","uploadedFiles","uploadData","FormData","append","ok","toastSender","text","responseText","loadDBTAccounts","getDBTCloudAccounts","returnedDBTCloudAccounts","selectAccount","getDBTCloudJobs","current","returnedDBTCloudJobs","firstname","lastname","variant","onClick","stopPropagation","setSSHKey","prompt","generateSSHKey","as","rows","sshKey","ref","document","queryCommandSupported","select","execCommand","focus","Text","muted","href","gitrepo","openGitConnection","Check","custom","inline","label","checked","dbtmethod","File","required","name","files","feedbackTooltip","checkDBTConnection","placeholder","newKey","keyFile","Blob","updateDBTCloudKey","map","index","job","updateDBTCloudConfig","EditJoinPanel","model","modelIndex","saveEditedModel","models","toggleJoinModal","showJoinModal","newModel","setModelState","useForm","register","handleSubmit","handleClose","joinConditionRow","condition","showRemove","fullName","joinConditions","filter","conditions","removeCondition","listJoinConditions","listModelColumns","controlName","listModel","columns","tempListModelColumns","column","columnOption","parse","Modal","show","onHide","Header","closeButton","Title","Body","Container","data","newCondition","condition1Field","conditionOperator","condition2Field","concat","Footer","Models","modelDragEnd","showColumns","highlightedColumns","openContextMenu","contextMenuOpen","editSelect","contextMenu","setContextMenu","display","modelDraw","handleClick","columnRows","columnRowsOutput","pageX","pageY","highlightThisColumn","highlightedColumnIndex","onContextMenu","data-model","data-column","columnRow","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","description","modelsDraw","onDragEnd","droppableId","droppableProps","Overlay","placement","Table","bordered","selectToAdd","parentNode","dataset","contextMenuDisplay","AutocompleteTextField","isTrigger","bind","getMatch","handleChange","handleKeyDown","handleResize","handleSelection","updateCaretPosition","updateHelper","resetHelper","renderAutocompleteList","state","helperVisible","left","matchLength","matchStart","options","fullOptions","selection","top","recentValue","defaultValue","enableSpaceRemovers","refInput","createRef","window","addEventListener","this","prevProps","caret","removeEventListener","str","providedOptions","trigger","matchAny","regex","re","RegExp","triggerLength","triggerMatch","match","i","substring","triggerIdx","newFullOptions","j","matchedSlug","slug","idx","toLowerCase","indexOf","matchIdx","setState","substr","spaceRemovers","spacer","old","getInputSelection","end","Math","max","slice","onKeyDown","passThroughEnter","keyCode","onSelect","part1","part2","setCaretPosition","input","caretPos","getCaretCoordinates","rect","getBoundingClientRect","offsetTop","min","offsetLeft","width","minChars","onRequestOptions","requestOnlyIfNoOptions","maxOptions","offsetX","offsetY","optionNumber","helperOptions","val","highlightStart","onMouseEnter","style","Component","onBlur","rest","stateValue","propagated","assign","constructor","propTypes","forEach","k","React","defaultProps","Conditions","editCondition","editConditionMenu","setEditConditionMenu","conditionRow","md","conditionList","conditionIndex","striped","showConditions","firstChild","conditionToRemove","handleModalClose","menuOpen","conditionCriteria","tempModelColumns","columnIndex","modelColumns","modelFullColumns","conditionToEdit","editConditionMenuDisplay","Selects","selects","highlightColumn","outputModel","editOutputModel","editingField","setEditingField","editingDescription","setEditingDescription","updateColumnAlias","updateColumnDescription","showField","selectsIndex","alias","undefined","data-selectindex","showDescription","highlightColumns","col","tempColumnsToHighlight","inputColumns","onMouseLeave","selectToEdit","selectindex","parseInt","selectToRemove","modelJsonFilename","conditionConcat","tempConditionConcat","selectStatement","tempSelectStatement","selectLine","definition","columnDefinition","selectIndex","fromStatement","tempFromStatement","fromSyntax","joinIndex","whereStatement","tempWhereStatement","SQLPanel","searchString","NavBar","addModel","logState","openSQLPanel","openModelBuilder","openCatalog","openConfig","appState","selectModel","searchDropdown","setSearchDropdown","searchResults","setSearchResults","searchBox","reactState","searchRow","searchResult","nodeID","selectSearchResult","modelName","modelDescription","columnName","columnDescription","tagName","getSearchResults","trim","getModelSearch","error","allSearchRows","results","logout","removeItem","Navbar","expand","Brand","Toggle","aria-controls","Collapse","location","pathname","includes","role","preventSearchClicks","onFocus","aria-label","createPR","submitChanges","prRequestBody","process","logoutButton","dagreGraph","dagre","graphlib","Graph","setDefaultEdgeLabel","nodeWidth","LayoutFlow","layoutedElements","elements","direction","setGraph","rankdir","el","isNode","setNode","height","setEdge","source","layout","nodeWithPosition","node","targetPosition","sourcePosition","position","x","random","y","nodeHeight","getLayoutedElements","lineageArray","lineage","Backdrop","background","zIndex","connectionLineType","onLoad","reactFlowInstance","fitView","padding","includeHiddenNodes","onNodeContextMenu","minZoom","open","modelNodeId","Catalog","catalogModel","setCatalogModel","rawModelTree","setRawModelTree","modelTree","setModelTree","treeRef","useRouteMatch","path","url","useEffect","getModelTree","RecurseFullTree","RecurseTree2","lastItem","modelPath","loopVar","items","item","console","log","unshift","updateMetadataModel","metadataBody","metadatafield","yaml_path","model_path","innerText","split","columnname","tests","lineageModal","LineageModal","setShow","showCreatedBy","model_type","created_by","created_relative_date","getTreeRef","concatPath","splitNodeID","thisStep","CatalogPage","catalogPage","useParams","getModel","tags","join","materialization","html","data-metadatafield","minWidth","database","schema","row_count","Number","toLocaleString","Accordion","Card","entries","colourStyles","control","styles","backgroundColor","option","isDisabled","isFocused","isSelected","color","chroma","alpha","css","contrast","cursor","multiValue","multiValueLabel","multiValueRemove","replaceAll","data-columnName","currentTests","thisTest","testSeverityColor","testType","testLabel","severity","related_model","related_field","formatTests","isMulti","testValue","testAction","allTests","action","newTest","removeItemIndex","removedValue","newTests","menuPortalTarget","raw_sql","compiled_sql","all_contributors","scope","all_commits","hash","authorDate","authorDateRel","authorName","originURL","subject","depends_on","nodes","pop","macros","referenced_by","fluid","Row","Col","setOpen","in","Overflow","Nav","initialActiveKey","initialOpenNodes","openNodes","currentOpenNodes","onClickItem","hasNodes","key","resetOpenNodes","toggleNode","hasSearch","xs","lg","exact","App","handleAllClicks","openState","newUser","newUserConfig","getSSH","getGenerateSSH","getOpenGit","getCheckDBTConnection","toast","success","autoClose","message","toastType","clearUserMessages","LoginRoute","children","render","to","modelBuilder","tempUser","port","getItem","userMessages","socket","io","auth","cb","on","send","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fbb1c5ef.chunk.js","sourcesContent":["export async function postLoginUser(loginBody) {\r\n    // console.log(loginBody);\r\n    const response = await fetch('/api/v1/users/login', {\r\n        method: 'POST', \r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(loginBody)\r\n    });\r\n    return await response.json();\r\n}","export async function postRegisterUser(registerBody) {\r\n    // console.log(registerBody);\r\n    const response = await fetch('/api/v1/users', {\r\n        method: 'POST', \r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(registerBody)\r\n    });\r\n    return await response.json();\r\n}","export async function refreshMetadata(user) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/refresh_metadata', {\r\n        method: 'POST', \r\n        headers: {\r\n                Authorization: \"Token \" + user.token\r\n            }\r\n    });\r\n    return await response;\r\n}","export async function getUserConfig(user) {\r\n    const response = await fetch('/api/v1/get_user_config/', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Tabs, Tab, TabContainer} from \"react-bootstrap\";\r\nimport { postLoginUser } from \"../services/postLoginUser\";\r\nimport { postRegisterUser } from \"../services/postRegisterUser\";\r\nimport { refreshMetadata } from \"../services/refreshMetadata\";\r\nimport { getUserConfig } from \"../services/getUserConfig\";\r\nimport { useHistory } from 'react-router-dom';\r\n// import \"./Login.css\";\r\n\r\nexport default function Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  let history = useHistory();\r\n  if(props.hostVersion === 'python' || Object.keys(props.user).length > 0) {\r\n    // console.log(props.user);\r\n    history.push(\"/\");\r\n  }\r\n\r\n  function validateLoginForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n  function validateRegisterForm() {\r\n    return email.length > 0 && password.length > 0 && firstName.length > 0;\r\n  }\r\n\r\n  function handleLogin(event) {\r\n    event.preventDefault(); //stop the click catcher\r\n    var loginBody = {\"user\": {\"email\": email, \"password\": password}};\r\n    postLoginUser(loginBody)\r\n      .then(response => {\r\n        props.setUser(response);\r\n        sessionStorage.setItem(\"user\", JSON.stringify(response));\r\n        refreshMetadata(response.user);\r\n        getUserConfig(response.user)\r\n          .then(response => {\r\n            props.setUserConfig(response.user);\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  function handleRegister(event) {\r\n    event.preventDefault(); //stop the click catcher\r\n    var registerBody = {\"user\": {\"email\": email, \"password\": password, \"config\": {\"firstname\": firstName, \"lastname\": lastName}}};\r\n    postRegisterUser(registerBody)\r\n      .then(response => {\r\n        props.setUser(response);\r\n        sessionStorage.setItem(\"user\", JSON.stringify(response));\r\n        refreshMetadata(response.user);\r\n        getUserConfig(response.user)\r\n          .then(response => {\r\n            props.setUserConfig(response.user);\r\n          }\r\n        );\r\n      }\r\n    );\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n    <nav class=\"navbar-dark bg-brand position-fixed w-100 z-100 navbar navbar-expand-xl navbar-light\"><div class=\"navbar-brand\">TĀNGATA</div></nav>\r\n    <div className=\"Login\">\r\n      <Tabs defaultActiveKey=\"login\" id=\"loginOrRegister\">\r\n        <Tab eventKey=\"login\" title=\"Login\">\r\n          <Form onSubmit={handleLogin}>\r\n            <Form.Group size=\"lg\" controlId=\"loginEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"loginPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateLoginForm()}>\r\n              Login\r\n            </Button>\r\n          </Form>\r\n        </Tab>\r\n        <Tab eventKey=\"register\" title=\"Sign Up\">\r\n          <Form onSubmit={handleRegister}>\r\n            <Form.Group size=\"lg\" controlId=\"registerEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"registerPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"firstname\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"lastname\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateRegisterForm()}>\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Tab>\r\n      </Tabs>\r\n      <div className=\"container md-3 text-center col-md-5 mt-3\">\r\n        <blockquote>\r\n          <p>“Hutia te rito o te harakeke<br/>\r\n          Kei whea to kōmako e kō?<br/>\r\n          Ki mai ki ahau<br/>\r\n          He aha te mea nui o te Ao?<br/>\r\n          Maku e kī atu,<br/>\r\n          <b>he tāngata, he tāngata, he tāngata</b>...\"</p>\r\n        </blockquote>\r\n        <p>\r\n          If the heart of the harakeke <em>(flax plant)</em> was removed,<br/>\r\n          where would the bellbird sing?<br/>\r\n          If I was asked what was the most important thing in the world<br/>\r\n          I would be compelled to reply,<br/>\r\n          it is people, it is people, it is people.<br/>\r\n          <em>Ngaroto</em>\r\n        </p>\r\n        <p>\r\n          In te ao Māori (the Māori world view), Tāngata (<em>TAHNG-uh-tuh</em>) describes something much larger than an addressed group of people: it describes <em>whakapapa</em>, the surrounding network of ancestors and descendants we are connected to.<br/>\r\n          With this work we intend to follow these principles to put our people first: not just the data &amp; analytics engineers, but those around our workplaces that know the deep details of how our businesses actually run.<br/>\r\n          These people are the lifeblood of what we do - and to keep moving forward, we need their context far more than ever.\r\n        </p>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}","export async function postUserConfig(user, newConfig) {\r\n    // console.log(newConfig);\r\n    var configToSend = {...newConfig};\r\n    delete configToSend._id;\r\n    delete configToSend.email;\r\n    delete configToSend.token;\r\n    const response = await fetch('/api/v1/set_user_config', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: \"Token \" + user.token},\r\n        body: JSON.stringify(configToSend)\r\n    });\r\n    return await response;\r\n}","export async function postFileUpload(uploadFormData, uploadType, user) {\r\n    const response = await fetch('/api/v1/file_upload', {\r\n        method: 'POST', \r\n        headers: {\r\n            'Authorization': \"Token \" + user.token,\r\n            'UploadType': uploadType\r\n        },\r\n        body: uploadFormData\r\n    });\r\n    return await response;\r\n}","export async function getDBTCloudAccounts(user) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/get_dbt_cloud_accounts', {\r\n        method: 'GET', \r\n        headers: {\r\n                Authorization: \"Token \" + user.token\r\n            }\r\n    })\r\n    return await response;\r\n}","export async function getDBTCloudJobs(user, account) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/get_dbt_cloud_jobs/' + account, {\r\n        method: 'GET', \r\n        headers: {\r\n                Authorization: \"Token \" + user.token\r\n            }\r\n    })\r\n    return await response;\r\n}","import {Button, Form, Tabs, Tab, TabContainer } from 'react-bootstrap';\r\nimport React, { useRef, useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { postUserConfig } from \"../services/postUserConfig\";\r\nimport { postFileUpload } from \"../services/postFileUpload\";\r\nimport { refreshMetadata } from \"../services/refreshMetadata\";\r\nimport { getDBTCloudAccounts } from \"../services/getDBTCloudAccounts\";\r\nimport { getDBTCloudJobs } from \"../services/getDBTCloudJobs\";\r\nexport default function Config(props) {\r\n  const [copySuccess, setCopySuccess] = useState('');\r\n  const [dbtMethod, setdbtMethod] = useState('LiveDB');\r\n  const [dbtAccounts, setdbtAccounts] = useState({});\r\n  const [dbtDocsJobs, setdbtDocsJobs] = useState({});\r\n  const sshKeyRef = useRef(null);\r\n  const dbtCloudKey = useRef(null);\r\n  const dbtAccountRef = useRef(null);\r\n  const dbtJobRef = useRef(null);\r\n  \r\n  function copyToClipboard(e) {\r\n    sshKeyRef.current.select();\r\n    document.execCommand('copy');\r\n    // This is just personal preference.\r\n    // I prefer to not show the whole text area selected.\r\n    e.target.focus();\r\n    setCopySuccess('Copied!');\r\n  };\r\n\r\n\r\n  // console.log(props.userConfig);\r\n  \r\n  function updateConfigValue(newValue, updatedField) {\r\n    var newConfig = {...props.userConfig};\r\n    newConfig[updatedField] = newValue;\r\n    props.setUserConfig(newConfig);\r\n    postUserConfig(props.user, newConfig);\r\n  }\r\n\r\n  function uploadFile(uploadedFiles, uploadType) {\r\n    // console.log(uploadedFiles[0]);\r\n    if(uploadedFiles.length>0) {\r\n      const uploadData = new FormData();\r\n      uploadData.append('file', uploadedFiles[0]);\r\n      postFileUpload(uploadData, uploadType, props.user)\r\n      .then(response=> {\r\n        // console.log(response);\r\n        if(response.ok === true) {\r\n          // console.log(\"Success\");\r\n          props.toastSender(\"\" + uploadType + \" Upload Successful.\",\"success\");\r\n        } else {\r\n          response.text()\r\n          .then(responseText=> {\r\n            // console.log(response);\r\n            // console.log(responseText);\r\n            props.toastSender(\"\" + uploadType + \" Upload Failed: \\n\" + responseText,\"error\");\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function updateDBTCloudKey(newKey) {\r\n    if(newKey.length>0) {\r\n      const uploadData = new FormData();\r\n      var keyFile = new Blob([newKey], {type: 'text/plain'});\r\n        uploadData.append('file', keyFile);\r\n        postFileUpload(uploadData, 'dbt_ Cloud Key', props.user)\r\n        .then(response=> {\r\n          // console.log(response);\r\n          if(response.ok === true) {\r\n            // console.log(\"Success\");\r\n            props.toastSender(\"dbt_ Cloud Key Upload Successful.\",\"success\");\r\n          } else {\r\n            response.text()\r\n            .then(responseText=> {\r\n              // console.log(response);\r\n              // console.log(responseText);\r\n              props.toastSender(\"dbt_ Cloud Key Upload Failed: \\n\" + responseText,\"error\");\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  function updateDBTCloudConfig() { //doing it manually rather than updateConfigValue because it's two at once - saving one without the other breaks existing config\r\n    var newConfig = {...props.userConfig};\r\n    newConfig[\"dbt_cloud_account\"] = dbtAccountRef.current.value;\r\n    newConfig[\"dbt_cloud_job\"] = dbtJobRef.current.value;\r\n    postUserConfig(props.user, newConfig);\r\n    props.setUserConfig(newConfig);\r\n  }\r\n\r\n  function loadDBTAccounts() {\r\n    getDBTCloudAccounts(props.user)\r\n    .then(response=> response.json())\r\n    .then(returnedDBTCloudAccounts => {\r\n      // console.log(returnedDBTCloudAccounts);\r\n      setdbtAccounts(returnedDBTCloudAccounts);\r\n      selectAccount();\r\n    })\r\n  }\r\n\r\n  function selectAccount() {\r\n    // console.log(\"Account Selected\")\r\n    // console.log(dbtAccountRef.current.value);\r\n    getDBTCloudJobs(props.user, dbtAccountRef.current.value)\r\n    .then(response=> response.json())\r\n    .then(returnedDBTCloudJobs => {\r\n      // console.log(returnedDBTCloudJobs);\r\n      setdbtDocsJobs(returnedDBTCloudJobs);\r\n    });\r\n  }\r\n\r\n  function listDBTDocsJobs() {\r\n    // console.log(dbtDocsJobs);\r\n    return dbtDocsJobs.map((job, index) => {return(<option key={\"dbt job \"+index} value={job.id}>{job.id}: {job.name}</option>)})\r\n  }\r\n  function dbtDocsJobsSelect() {\r\n    if(dbtDocsJobs.length > 0) {\r\n      return(\r\n        <>\r\n          <Form.Group size=\"lg\" controlId=\"dbt_cloud_jobs\">\r\n            <Form.Label>dbt_ Cloud Jobs</Form.Label>\r\n            <Form.Control\r\n              autoFocus\r\n              as=\"select\"\r\n              custom\r\n              ref={dbtJobRef}\r\n            >\r\n              {listDBTDocsJobs()}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"m-1\"\r\n            onClick={(e) => {e.stopPropagation(); updateDBTCloudConfig();}}\r\n          >\r\n            Save\r\n          </Button>\r\n        </>\r\n      );\r\n    } else return null;\r\n  }\r\n\r\n  function listDBTAccounts() {\r\n    return dbtAccounts.map((account, index) => {return(<option key={\"dbt account \"+index} value={account.id}>{account.id}: {account.name}</option>)})\r\n  }\r\n  function dbtAccountsSelect() {\r\n    if(dbtAccounts.length > 0) {\r\n      return(\r\n        <Form.Group size=\"lg\" controlId=\"dbt_cloud_accounts\">\r\n          <Form.Label>dbt_ Cloud Accounts</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            as=\"select\"\r\n            custom\r\n            ref={dbtAccountRef}\r\n            onChange={e => selectAccount()}\r\n          >\r\n            {listDBTAccounts()}\r\n          </Form.Control>\r\n        </Form.Group>);\r\n    } else return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <h1>Config</h1>\r\n      <Tabs defaultActiveKey=\"userdetails\" id=\"config\">\r\n        <Tab eventKey=\"userdetails\" title=\"User Details\" className=\"border-right border-left border-bottom p-3\">\r\n          <Form>\r\n            {/* <Form.Group size=\"lg\" controlId=\"loginEmail\"> //let's not change email addresses for now.\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={props.user.email}\r\n                onChange={(e) => updateConfigValue(e.target.value, \"email\")}\r\n              />\r\n            </Form.Group> */}\r\n            <Form.Group size=\"lg\" controlId=\"firstname\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={props.userConfig.firstname}\r\n                onChange={(e) => updateConfigValue(e.target.value, \"firstname\")}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"lastname\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={props.userConfig.lastname}\r\n                onChange={(e) => updateConfigValue(e.target.value, \"lastname\")}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Tab>\r\n        <Tab eventKey=\"gitConfig\" title=\"Git Config\" className=\"border-right border-left border-bottom p-3\">\r\n          <Form>\r\n            <Form.Group size=\"lg\" controlId=\"gitSSHKey\">\r\n              <Form.Label>SSH Key</Form.Label>\r\n              <br/>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={(e) => {e.stopPropagation(); props.setSSHKey()}}\r\n                className=\"m-1\"\r\n              >\r\n                Get current SSH public key\r\n              </Button>\r\n              <Button\r\n                variant=\"warning\"\r\n                className=\"m-1\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  let checkIntent = prompt(\"This will delete any current SSH keys. Please type 'New Key' to continue\");\r\n                  if(checkIntent === \"New Key\") {\r\n                    props.generateSSHKey()\r\n                  }\r\n                }}\r\n              >\r\n                Create new SSH Key\r\n              </Button>\r\n              <Form.Control\r\n                autoFocus\r\n                as=\"textarea\"\r\n                rows={2}\r\n                value={props.sshKey}\r\n                ref={sshKeyRef}\r\n                // onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              {\r\n              /* Logical shortcut for only displaying the \r\n                  button if the copy command exists */\r\n              document.queryCommandSupported('copy') &&\r\n                <div>\r\n                  <Button variant=\"primary\" onClick={copyToClipboard} className=\"m-1\">Copy</Button> \r\n                  {copySuccess}\r\n                </div>\r\n              }\r\n              <Form.Text id=\"gitSSHHelpBlock\" muted>\r\n                Where to add your key:<br/>\r\n                <a href=\"https://github.com/settings/ssh/new\">GitHub SSH Keys - Add New</a><br/>\r\n                <a href=\"https://gitlab.com/profile/keys\">GitLab SSH Keys - Add an SSH key</a><br/>\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"gitrepo\">\r\n              <Form.Label>Git SSH URL</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={props.userConfig.gitrepo || ''}\r\n                onChange={(e) => updateConfigValue(e.target.value, \"gitrepo\")}\r\n              />\r\n              <Form.Text id=\"gitSSHHelpBlock\" muted>\r\n                Examples:<br/>\r\n                git@github.com:yourname/yourproject.git<br/>\r\n                git@gitlab.com:yourname/yourproject.git\r\n              </Form.Text>\r\n            </Form.Group>\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"m-1\"\r\n                onClick={(e) => {e.stopPropagation(); props.openGitConnection()}}\r\n              >\r\n                Clone Git Repository\r\n              </Button>\r\n          </Form>\r\n        </Tab>\r\n        <Tab eventKey=\"dbtConfig\" title=\"DBT Config\" className=\"border-right border-left border-bottom p-3\">\r\n          <Form>\r\n            <Form.Group size=\"lg\" controlId=\"dbtConfigMethod\">\r\n              <Form.Label>dbt_ Config Method</Form.Label>\r\n              <div key={'custom-inline-radio'} className=\"mb-3\">\r\n                <Form.Check\r\n                  custom\r\n                  inline\r\n                  label=\"Live Database Connection\"\r\n                  type='radio'\r\n                  id={'LiveDB'}\r\n                  checked={props.userConfig.dbtmethod===\"LiveDB\"}\r\n                  onClick={(e) => {e.stopPropagation(); updateConfigValue(\"LiveDB\", \"dbtmethod\")}}\r\n                />\r\n                <Form.Check\r\n                  custom\r\n                  inline\r\n                  label=\"Upload Compiled Metadata\"\r\n                  type='radio'\r\n                  id={'UploadMetadata'}\r\n                  checked={props.userConfig.dbtmethod===\"UploadMetadata\"}\r\n                  onClick={(e) => {e.stopPropagation(); updateConfigValue(\"UploadMetadata\", \"dbtmethod\")}}\r\n                />\r\n                <Form.Check\r\n                  custom\r\n                  inline\r\n                  label=\"dbt_ Cloud API\"\r\n                  type='radio'\r\n                  id={'Cloud'}\r\n                  checked={props.userConfig.dbtmethod===\"Cloud\"}\r\n                  onClick={(e) => {e.stopPropagation(); updateConfigValue(\"Cloud\", \"dbtmethod\")}}\r\n                />\r\n              </div>\r\n            </Form.Group>\r\n            <hr/>\r\n            <div className={props.userConfig.dbtmethod===\"LiveDB\"?null:\"d-none\"}>\r\n              <Form.Group size=\"lg\" controlId=\"uploadProfilesYML\">\r\n                <Form.Label>Upload Profiles.YML</Form.Label>\r\n                <Form.File\r\n                  className=\"position-relative\"\r\n                  required\r\n                  name=\"profilesYMLUpload\"\r\n                  onChange={(e) => uploadFile(e.target.files, \"ProfilesYML\") }\r\n                  // isInvalid={!!errors.file}\r\n                  // feedback={errors.file}\r\n                  id=\"profilesYMLUpload\"\r\n                  feedbackTooltip\r\n                />\r\n                <Form.Text id=\"profilesYMLHelpBlock\" muted>\r\n                  To connect to your database, DBT requires a profiles.yml file. See <a href=\"https://docs.getdbt.com/dbt-cli/configure-your-profile\">the dbt_ docs</a> for setup details.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"m-1\"\r\n                onClick={(e) => {e.stopPropagation(); props.checkDBTConnection()}}\r\n              >\r\n                Check DBT Connection\r\n              </Button>\r\n            </div>\r\n            <div className={props.userConfig.dbtmethod===\"UploadMetadata\"?null:\"d-none\"}>\r\n              <p><i>To run without connecting to your database, the catalog requires metadata from dbt_.<br/>\r\n              Run <code>dbt docs generate</code> in your dbt_ project, and upload the Manifest and Catalog from /target.</i></p>\r\n              <p><i>To automate this upload, download <code>tangata_refresh.py</code> from the Tangata git repository, and run it in the root of your project.</i></p> \r\n              <Form.Group size=\"lg\" controlId=\"uploadManifestJSON\">\r\n                <Form.Label>Upload manifest.json</Form.Label>\r\n                <Form.File\r\n                  className=\"position-relative\"\r\n                  required\r\n                  name=\"manifestJSONUpload\"\r\n                  onChange={(e) => uploadFile(e.target.files, \"ManifestJSON\") }\r\n                  // isInvalid={!!errors.file}\r\n                  // feedback={errors.file}\r\n                  id=\"manifestJSONUpload\"\r\n                  feedbackTooltip\r\n                />\r\n              </Form.Group>\r\n              <Form.Group size=\"lg\" controlId=\"uploadCatalogJSON\">\r\n                <Form.Label>Upload catalog.json</Form.Label>\r\n                <Form.File\r\n                  className=\"position-relative\"\r\n                  required\r\n                  name=\"catalogJSONUpload\"\r\n                  onChange={(e) => uploadFile(e.target.files, \"CatalogJSON\") }\r\n                  // isInvalid={!!errors.file}\r\n                  // feedback={errors.file}\r\n                  id=\"catalogJSONUpload\"\r\n                  feedbackTooltip\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"m-1\"\r\n                onClick={(e) => {e.stopPropagation(); refreshMetadata(props.user);}}\r\n              >\r\n                Load Metadata\r\n              </Button>\r\n            </div>\r\n            <div className={props.userConfig.dbtmethod===\"Cloud\"?null:\"d-none\"}>\r\n              <Form.Group size=\"lg\" controlId=\"firstname\">\r\n                <Form.Label>dbt_ Cloud API Key</Form.Label>\r\n                <Form.Control\r\n                  autoFocus\r\n                  type=\"text\"\r\n                  placeholder=\"Change dbt_ Cloud Key\"\r\n                  ref={dbtCloudKey}\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"m-1\"\r\n                onClick={(e) => {e.stopPropagation(); updateDBTCloudKey(dbtCloudKey.current.value); loadDBTAccounts();}}\r\n              >Load dbt_ Cloud Accounts</Button>\r\n              {dbtAccountsSelect()}\r\n              {dbtDocsJobsSelect()}\r\n            </div>\r\n          </Form>\r\n        </Tab>\r\n        {/* <Tab eventKey=\"password\" title=\"Change Password\" className=\"border-right border-left border-bottom p-3\">\r\n        <Form>\r\n            <Form.Group size=\"lg\" controlId=\"loginPassword\">\r\n              <Form.Label>Current Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                // onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"newPassword\">\r\n              <Form.Label>New Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                // onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"repeatNewPassword\">\r\n              <Form.Label>Repeat New Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                // onChange={(e) => setPassword(e.target.value)}\r\n              />`\r\n            </Form.Group>\r\n          </Form>\r\n        </Tab> */}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport {Modal, Button, Form, Container} from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport function EditJoinPanel( {model, modelIndex, saveEditedModel, models, toggleJoinModal, showJoinModal}) {\r\n  const [newModel, setModelState] = useState(model);\r\n  const { register, handleSubmit } = useForm();\r\n  if(modelIndex===0) return null;\r\n  // console.log(\"Start of join panel debug\");\r\n  // console.log(showJoinModal);\r\n  // console.log(models);\r\n  // console.log(modelIndex);\r\n  // console.log(model);\r\n  // console.log(newModel);\r\n\r\n    const handleClose = () => toggleJoinModal(-1);\r\n    const handleShow = () => {\r\n      setModelState(JSON.parse(JSON.stringify(model)));\r\n      toggleJoinModal(modelIndex);\r\n    }\r\n\r\n    const handleSaveAndClose = () => {\r\n      // TODO: Create join output columns\r\n      saveEditedModel(model, newModel);\r\n      handleClose();\r\n    }\r\n\r\n    // new join condition submit\r\n    const onSubmit = (data) => {\r\n      var newCondition = (\r\n        {\r\n          \"conditionField1\": {\r\n            \"model\": model.name,\r\n            \"column\": data.condition1Field\r\n          },\r\n          \"conditionOperator\": data.conditionOperator,\r\n          \"conditionField2\": {\r\n            \"model\": models.response.models[modelIndex-1].name,\r\n            \"column\": data.condition2Field\r\n          },\r\n          \"fullName\": model.name+\".\"+data.condition1Field+\" \"+data.conditionOperator+\" \"+models.response.models[modelIndex-1].name+\".\"+data.condition2Field\r\n        }\r\n        );\r\n\r\n      // saveEditedJoin(join, newJoin);\r\n      setModelState({...newModel, \"joinConditions\": newModel.joinConditions.concat(newCondition)})\r\n    }\r\n\r\n    const removeCondition = (condition) => {\r\n      setModelState({...newModel, \"joinConditions\": newModel.joinConditions.filter(conditions => conditions !== condition)});\r\n    }\r\n\r\n\r\n    const joinConditionRow = (condition, index, showRemove) => { // row per join condition\r\n      if(showRemove===false) {\r\n        return (\r\n          <tr className=\"row\" key={\"joinCondition_\" + index}>\r\n            <td className=\"col w-100\">\r\n              {condition.fullName}\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n      return(\r\n        <tr key={\"joinCondition_\" + index}>\r\n          <td className=\"p-2\">\r\n            {condition.fullName}\r\n          </td>\r\n          <td className=\"w-md-auto p-2\">\r\n            <Button variant=\"secondary\" onClick={() => removeCondition(condition)}>\r\n              Remove\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    const listJoinConditions = (showRemove) => newModel.joinConditions.map((condition, index) => {\r\n      return joinConditionRow(condition, index, showRemove);\r\n    }\r\n    );\r\n\r\n\r\n\r\n    const listModelColumns = (models,model,register,controlName) => {\r\n      const columnOption = (column,index) => {\r\n        return(\r\n          <option key={index}>{column}</option>\r\n        )\r\n      }\r\n\r\n      var listModel = {};\r\n      for(var modelIndex=0;modelIndex<models.response.models.length;modelIndex++) {\r\n        // console.log(models.response.models[modelIndex].name);\r\n        if(models.response.models[modelIndex].name===model) {\r\n          // console.log(\"matched\");\r\n          listModel = models.response.models[modelIndex];\r\n        }\r\n      }\r\n      // console.log(listModel);\r\n      if(listModel===null) return null;\r\n      if(listModel.columns.length===0) return null;\r\n      const tempListModelColumns = listModel.columns.map((column, index) => columnOption(column,index))\r\n      // console.log(tempListModelColumns);\r\n      return (\r\n        \r\n        <Form.Control as=\"select\" name={controlName} ref={register}>\r\n          {tempListModelColumns}\r\n        </Form.Control>\r\n      );\r\n    }\r\n    // console.log(\"before render editjoinpanel debug:\");\r\n    // console.log(models);\r\n    // console.log(modelIndex);\r\n    return (\r\n      <div>\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n          Edit Join\r\n        </Button>\r\n        <table className=\"table\">\r\n          <tbody>\r\n            {listJoinConditions(false)}\r\n          </tbody>\r\n        </table>\r\n        <Modal show={(showJoinModal === modelIndex)} onHide={handleClose} size=\"lg\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Join </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          <Container>\r\n            <h5>Join Conditions</h5>\r\n            <table className=\"table-striped table-bordered w-100\">\r\n              <tbody>\r\n              {listJoinConditions(true)}\r\n              </tbody>\r\n            </table>\r\n          </Container>\r\n          <Container className=\"mt-3\">\r\n            <h5>Add new Join Condition</h5>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              \r\n              <div className=\"row text-center \">\r\n                <div className=\"col\">\r\n                  <Form.Group>\r\n                    <Form.Label>{model.name}</Form.Label>\r\n                      {listModelColumns(models,model.name,register,\"condition1Field\")}\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col-md-auto\">\r\n                  <Form.Group>\r\n                    <Form.Label>Operator type</Form.Label>\r\n                    <Form.Control name=\"conditionOperator\" as=\"select\"  ref={register} >\r\n                      <option>=</option>\r\n                      <option>&gt;=</option>\r\n                      <option>&lt;=</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col\">\r\n                  \r\n                <Form.Group>\r\n                    <Form.Label>{models.response.models[modelIndex-1].name}</Form.Label>\r\n                      {listModelColumns(models,models.response.models[modelIndex-1].name,register,\"condition2Field\")}\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col-md-auto\">\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"joinConditionAddButton\">\r\n                    Add\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleSaveAndClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n","import React, {useState} from 'react';\r\n// import Draggable from 'react-draggable';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { EditJoinPanel } from './EditJoinPanel'\r\nimport { Container, Overlay, Table } from 'react-bootstrap';\r\n\r\n\r\nexport function Models ({models, modelDragEnd, showColumns, saveEditedModel, toggleJoinModal, showJoinModal, highlightedColumns, openContextMenu, contextMenuOpen, editSelect}) {\r\n    const [contextMenu, setContextMenu] = useState({\"x\":null,\"y\":null,\"display\":false});\r\n    // console.log(\"Models\");\r\n    // console.log(contextMenuOpen);\r\n    // console.log(contextMenuOpen);\r\n    // console.log(models);\r\n    // console.log(highlightedColumns);\r\n    if (models.length === 0) return null\r\n      \r\n    if(contextMenuOpen === false && contextMenu.display===true) { //add this to every other component that has context menus\r\n        setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n      }\r\n\r\n      const contextMenuDisplay = (contextMenu, models) => {\r\n        if(contextMenu.display === false) return null;\r\n        // console.log(\"Displaying Context Menu\");\r\n        // console.log(contextMenu);\r\n    \r\n        // console.log(contextMenu.target.firstChild.data);\r\n        // console.log(contextMenu.target);\r\n        // console.log(JSON.parse(contextMenu.target.dataset.selectvalue));\r\n        // console.log(contextMenu.target.dataset.selectvalue.model);\r\n        const addToSelect = (selectToAdd) => {\r\n          editSelect(null,selectToAdd);\r\n          openContextMenu(false);\r\n        };\r\n        return(\r\n          <div>\r\n            <Overlay target={contextMenu.target} show={contextMenu.display} placement=\"right-start\">\r\n              <div>\r\n                <Table bordered variant=\"dark\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td onClick={() => addToSelect({\"inputColumns\": [{\"model\": contextMenu.target.parentNode.dataset.model, \"column\": contextMenu.target.parentNode.dataset.column}], \"alias\": contextMenu.target.parentNode.dataset.column})}>\r\n                        Add to Output\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </Overlay>\r\n          </div>\r\n        )\r\n      }\r\n\r\n\r\n    const modelDraw = (model,index,showColumns, showJoinModal, toggleJoinModal, highlightedColumns, handleClick) => {\r\n        const columnRows = (columns,showColumns) => {\r\n            const columnRow = (column,index) => {\r\n                const handleClick = (e) => {\r\n                    // console.log(e);\r\n                    if (e.type === 'click') {\r\n                    setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                    openContextMenu(false);\r\n                    } else if (e.type === 'contextmenu') {\r\n                    e.preventDefault();\r\n                    if(contextMenu.display===false) { //if contextMenu is not displayed\r\n                        setContextMenu({\"x\":e.pageX,\"y\":e.pageY,\"display\":true,\"clickTargetType\":\"Condition\",\"target\": e.target});\r\n                        openContextMenu(true);\r\n                    } else {\r\n                        setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                        openContextMenu(false);\r\n                    }\r\n                    }\r\n                }\r\n                // console.log(\"modelDraw\");\r\n                // console.log(model);\r\n                // console.log(column);\r\n                var highlightThisColumn = false;\r\n                for(var highlightedColumnIndex=0;highlightedColumnIndex<highlightedColumns.length;highlightedColumnIndex++) {\r\n                    if(model.name===highlightedColumns[highlightedColumnIndex].model && column===highlightedColumns[highlightedColumnIndex].column) {\r\n                        highlightThisColumn = true;\r\n                    }\r\n                }\r\n                return(\r\n                    <tr\r\n                        key = {index}\r\n                        className={index%2 === 0?'odd':'even'}\r\n                        onClick={(e) => handleClick(e)}\r\n                        onContextMenu={(e) => handleClick(e)}\r\n                        data-model = {model.name}\r\n                        data-column = {column}\r\n                    >\r\n                        <td\r\n                            className={\"col-md-auto \"+(highlightThisColumn?\"highlightColumn\":null)}\r\n                        >\r\n                            {index + 1}\r\n                        </td>\r\n                        <td\r\n                            className={\"col \"+(highlightThisColumn?\"highlightColumn\":null)}\r\n                        >\r\n                            {column}\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            }\r\n            \r\n            const columnRowsOutput = columns.map((column,index) => columnRow(column,index));\r\n            return(<tbody>{columnRowsOutput}</tbody>);\r\n        }\r\n        return(\r\n        <Draggable key={\"model_\"+model.name} draggableId={model.name} index={index}>\r\n        {(provided, snapshot) => (\r\n            <div\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            className=\"col removeFocusOutline\"\r\n            >\r\n            <div className=\"w-100 bg-secondary text-white text-center font-weight-bold\">\r\n                {model.name}\r\n            </div>\r\n            <div className=\"w-100 bg-light text-dark text-center font-italic mb-3\">\r\n                {model.description}\r\n            </div>\r\n            <div className=\"w-100 bg-light text-dark text-center\">\r\n                <EditJoinPanel\r\n                    model = { model }\r\n                    saveEditedModel = { saveEditedModel }\r\n                    models = { models }\r\n                    showJoinModal = { showJoinModal }\r\n                    toggleJoinModal = { toggleJoinModal }\r\n                    modelIndex = { index }\r\n                />\r\n            </div>\r\n            <table className=\"table table-bordered table-striped table-hover w-100\">\r\n                    {showColumns===true ? columnRows(model.columns) : null}\r\n            </table>\r\n            </div>\r\n        )}\r\n        </Draggable>)\r\n    }\r\n    const modelsDraw = (models,showColumns, showJoinModal, toggleJoinModal) => \r\n        models.response.models.map((model,index) => {\r\n            return modelDraw(model,index,showColumns, showJoinModal, toggleJoinModal, highlightedColumns)\r\n        }\r\n        );\r\n    \r\n    \r\n\r\n    const ModelTable = () => {\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                \r\n\r\n                <DragDropContext onDragEnd={modelDragEnd}> \r\n                {/* TODO: only allow reordering models if they are all models\r\n                TODO: only allow two models in a join */}\r\n                    <Droppable droppableId=\"droppable\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        >\r\n                        {modelsDraw(models,showColumns, showJoinModal, toggleJoinModal, highlightedColumns)}\r\n                        {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"text-center\">\r\n            <h2>Models</h2>\r\n            {ModelTable()}\r\n            {contextMenuDisplay(contextMenu, models)}\r\n        </div>\r\n    )\r\n}\r\n","// MIT License\r\n\r\n// Copyright (c) 2016 Yury Dymov\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\n\r\n\r\nimport React, { createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport getCaretCoordinates from 'textarea-caret';\r\nimport getInputSelection, { setCaretPosition } from 'get-input-selection';\r\n\r\nconst KEY_UP = 38;\r\nconst KEY_DOWN = 40;\r\nconst KEY_RETURN = 13;\r\nconst KEY_ENTER = 14;\r\nconst KEY_ESCAPE = 27;\r\nconst KEY_TAB = 9;\r\n\r\nconst OPTION_LIST_Y_OFFSET = 10;\r\nconst OPTION_LIST_MIN_WIDTH = 100;\r\n\r\nconst propTypes = {\r\n  Component: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.elementType,\r\n  ]),\r\n  defaultValue: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  maxOptions: PropTypes.number,\r\n  onBlur: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  onKeyDown: PropTypes.func,\r\n  onRequestOptions: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  options: PropTypes.arrayOf(PropTypes.object),\r\n  regex: PropTypes.string,\r\n  matchAny: PropTypes.bool,\r\n  minChars: PropTypes.number,\r\n  requestOnlyIfNoOptions: PropTypes.bool,\r\n  spaceRemovers: PropTypes.arrayOf(PropTypes.string),\r\n  spacer: PropTypes.string,\r\n  trigger: PropTypes.string,\r\n  value: PropTypes.string,\r\n  offsetX: PropTypes.number,\r\n  offsetY: PropTypes.number,\r\n  passThroughEnter: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  Component: 'textarea',\r\n  defaultValue: '',\r\n  disabled: false,\r\n  maxOptions: 6,\r\n  onBlur: () => {},\r\n  onChange: () => {},\r\n  onKeyDown: () => {},\r\n  onRequestOptions: () => {},\r\n  onSelect: () => {},\r\n  options: [],\r\n  fullOptions: [],\r\n  regex: '^[A-Za-z0-9\\\\-_]+$',\r\n  matchAny: false,\r\n  minChars: 0,\r\n  requestOnlyIfNoOptions: true,\r\n  spaceRemovers: [',', '.', '!', '?'],\r\n  spacer: ' ',\r\n  trigger: '@',\r\n  offsetX: 0,\r\n  offsetY: 0,\r\n  value: null,\r\n  passThroughEnter: false,\r\n};\r\n\r\nclass AutocompleteTextField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.isTrigger = this.isTrigger.bind(this);\r\n    this.getMatch = this.getMatch.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleResize = this.handleResize.bind(this);\r\n    this.handleSelection = this.handleSelection.bind(this);\r\n    this.updateCaretPosition = this.updateCaretPosition.bind(this);\r\n    this.updateHelper = this.updateHelper.bind(this);\r\n    this.resetHelper = this.resetHelper.bind(this);\r\n    this.renderAutocompleteList = this.renderAutocompleteList.bind(this);\r\n\r\n    this.state = {\r\n      helperVisible: false,\r\n      left: 0,\r\n      matchLength: 0,\r\n      matchStart: 0,\r\n      options: [],\r\n      fullOptions: [],\r\n      selection: 0,\r\n      top: 0,\r\n      value: null,\r\n    };\r\n\r\n    this.recentValue = props.defaultValue;\r\n    this.enableSpaceRemovers = false;\r\n    this.refInput = createRef();\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.handleResize);\r\n    // console.log(\"Autocomplete\");\r\n    // console.log(this.recentValue);\r\n    // console.log(this.state.fullOptions);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { options } = this.props;\r\n    const { fullOptions } = this.props;\r\n    const { caret } = this.state;\r\n\r\n    if (options.length !== prevProps.options.length) {\r\n      this.updateHelper(this.recentValue, caret, options, fullOptions);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  getMatch(str, caret, providedOptions, fullOptions) {\r\n    const { trigger, matchAny, regex } = this.props;\r\n    const re = new RegExp(regex);\r\n    const triggerLength = trigger.length;\r\n    const triggerMatch = trigger.match(re);\r\n\r\n    for (let i = caret - 1; i >= 0; --i) {\r\n      const substr = str.substring(i, caret);\r\n      const match = substr.match(re);\r\n      let matchStart = -1;\r\n\r\n      if (triggerLength > 0) {\r\n        const triggerIdx = triggerMatch ? i : i - triggerLength + 1;\r\n\r\n        if (triggerIdx < 0) { // out of input\r\n          return null;\r\n        }\r\n\r\n        if (this.isTrigger(str, triggerIdx)) {\r\n          matchStart = triggerIdx + triggerLength;\r\n        }\r\n\r\n        if (!match && matchStart < 0) {\r\n          return null;\r\n        }\r\n      } else {\r\n        if (match && i > 0) { // find first non-matching character or begin of input\r\n          continue;\r\n        }\r\n        matchStart = i === 0 && match ? 0 : i + 1;\r\n\r\n        if (caret - matchStart === 0) { // matched slug is empty\r\n          return null;\r\n        }\r\n      }\r\n\r\n      if (matchStart >= 0) {\r\n        const matchedSlug = str.substring(matchStart, caret);\r\n        \r\n        const options = providedOptions.filter((slug) => {\r\n          const idx = slug.toLowerCase().indexOf(matchedSlug.toLowerCase());\r\n          return idx !== -1 && (matchAny || idx === 0);\r\n        });\r\n        var newFullOptions = [];\r\n        for(var j=0;j<providedOptions.length;j++) {\r\n            const matchIdx = providedOptions[j].toLowerCase().indexOf(matchedSlug.toLowerCase());\r\n            if(matchIdx !== -1 && (matchAny || matchIdx === 0))\r\n            // console.log(j);\r\n            newFullOptions.push(this.props.fullOptions[j]);\r\n        }\r\n        this.setState({\"fullOptions\": newFullOptions});\r\n        const matchLength = matchedSlug.length;\r\n        // console.log(\"returning slug:\")\r\n        // console.log(options);\r\n        // console.log(newFullOptions);\r\n        // console.log(this.props.fullOptions);\r\n\r\n        return { matchStart, matchLength, options };\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  isTrigger(str, i) {\r\n    const { trigger } = this.props;\r\n\r\n    if (!trigger || !trigger.length) {\r\n      return true;\r\n    }\r\n\r\n    if (str.substr(i, trigger.length) === trigger) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  handleChange(e) {\r\n    const {\r\n      onChange,\r\n      options,\r\n      fullOptions,\r\n      spaceRemovers,\r\n      spacer,\r\n      value,\r\n    } = this.props;\r\n\r\n    const old = this.recentValue;\r\n    const str = e.target.value;\r\n    const caret = getInputSelection(e.target).end;\r\n\r\n    if (!str.length) {\r\n      this.setState({ helperVisible: false });\r\n    }\r\n\r\n    this.recentValue = str;\r\n\r\n    this.setState({ caret, value: e.target.value });\r\n\r\n    if (!str.length || !caret) {\r\n      return onChange(e.target.value);\r\n    }\r\n\r\n    // '@wonderjenny ,|' -> '@wonderjenny, |'\r\n    if (this.enableSpaceRemovers && spaceRemovers.length && str.length > 2 && spacer.length) {\r\n      for (let i = 0; i < Math.max(old.length, str.length); ++i) {\r\n        if (old[i] !== str[i]) {\r\n          if (\r\n            i >= 2\r\n            && str[i - 1] === spacer\r\n            && spaceRemovers.indexOf(str[i - 2]) === -1\r\n            && spaceRemovers.indexOf(str[i]) !== -1\r\n            && this.getMatch(str.substring(0, i - 2), caret - 3, options, fullOptions)\r\n          ) {\r\n            const newValue = (`${str.slice(0, i - 1)}${str.slice(i, i + 1)}${str.slice(i - 1, i)}${str.slice(i + 1)}`);\r\n\r\n            this.updateCaretPosition(i + 1);\r\n            this.refInput.current.value = newValue;\r\n\r\n            if (!value) {\r\n              this.setState({ value: newValue });\r\n            }\r\n\r\n            return onChange(newValue);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.enableSpaceRemovers = false;\r\n    }\r\n\r\n    this.updateHelper(str, caret, options, fullOptions);\r\n\r\n    if (!value) {\r\n      this.setState({ value: e.target.value });\r\n    }\r\n\r\n    return onChange(e.target.value);\r\n  }\r\n\r\n  handleKeyDown(event) {\r\n    const { helperVisible, options, selection } = this.state;\r\n    const { onKeyDown, passThroughEnter } = this.props;\r\n\r\n    if (helperVisible) {\r\n      switch (event.keyCode) {\r\n        case KEY_ESCAPE:\r\n          event.preventDefault();\r\n          this.resetHelper();\r\n          break;\r\n        case KEY_UP:\r\n          event.preventDefault();\r\n          this.setState({ selection: ((options.length + selection) - 1) % options.length });\r\n          break;\r\n        case KEY_DOWN:\r\n          event.preventDefault();\r\n          this.setState({ selection: (selection + 1) % options.length });\r\n          break;\r\n        case KEY_ENTER:\r\n        case KEY_RETURN:\r\n          if (!passThroughEnter) { event.preventDefault(); }\r\n          this.handleSelection(selection);\r\n          break;\r\n        case KEY_TAB:\r\n          this.handleSelection(selection);\r\n          break;\r\n        default:\r\n          onKeyDown(event);\r\n          break;\r\n      }\r\n    } else {\r\n      onKeyDown(event);\r\n    }\r\n  }\r\n\r\n  handleResize() {\r\n    this.setState({ helperVisible: false });\r\n  }\r\n\r\n  handleSelection(idx) {\r\n    const { matchStart, matchLength, fullOptions } = this.state;\r\n    const { spacer, onSelect } = this.props;\r\n    // console.log(\"handleSelection\");\r\n    // console.log(idx);\r\n    // console.log(fullOptions);\r\n    const slug = fullOptions[idx];\r\n    const value = this.recentValue;\r\n    const part1 = value.substring(0, matchStart);\r\n    const part2 = value.substring(matchStart + matchLength);\r\n\r\n    const event = { target: this.refInput.current };\r\n\r\n    event.target.value = `${part1}${slug}${spacer}${part2}`;\r\n    this.handleChange(event);\r\n    onSelect(event.target.value);\r\n\r\n    this.resetHelper();\r\n\r\n    this.updateCaretPosition(part1.length + slug.length + 1);\r\n\r\n    this.enableSpaceRemovers = true;\r\n  }\r\n\r\n  updateCaretPosition(caret) {\r\n    this.setState({ caret }, () => setCaretPosition(this.refInput.current, caret));\r\n  }\r\n\r\n  updateHelper(str, caret, options, fullOptions) {\r\n    const input = this.refInput.current;\r\n\r\n    const slug = this.getMatch(str, caret, options, fullOptions);\r\n    // console.log(\"updateHelper\");\r\n    // console.log(slug);\r\n    if (slug) {\r\n      const caretPos = getCaretCoordinates(input, caret);\r\n      const rect = input.getBoundingClientRect();\r\n\r\n      const top = caretPos.top + input.offsetTop;\r\n      const left = Math.min(\r\n        caretPos.left + input.offsetLeft - OPTION_LIST_Y_OFFSET,\r\n        input.offsetLeft + rect.width - OPTION_LIST_MIN_WIDTH,\r\n      );\r\n\r\n      const { minChars, onRequestOptions, requestOnlyIfNoOptions } = this.props;\r\n\r\n      if (\r\n        slug.matchLength >= minChars\r\n        && (\r\n          slug.options.length > 1\r\n          || (\r\n            slug.options.length === 1\r\n            && slug.options[0].length !== slug.matchLength\r\n          )\r\n        )\r\n      ) {\r\n        this.setState({\r\n          helperVisible: true,\r\n          top,\r\n          left,\r\n          ...slug,\r\n        });\r\n      } else {\r\n        if (!requestOnlyIfNoOptions || !slug.options.length) {\r\n          onRequestOptions(str.substr(slug.matchStart, slug.matchLength));\r\n        }\r\n\r\n        this.resetHelper();\r\n      }\r\n    } else {\r\n      this.resetHelper();\r\n    }\r\n  }\r\n\r\n  resetHelper() {\r\n    this.setState({ helperVisible: false, selection: 0 });\r\n  }\r\n\r\n  renderAutocompleteList() {\r\n    const {\r\n      helperVisible,\r\n      left,\r\n      matchStart,\r\n      matchLength,\r\n      options,\r\n      fullOptions,\r\n      selection,\r\n      top,\r\n      value,\r\n    } = this.state;\r\n\r\n    if (!helperVisible) {\r\n      return null;\r\n    }\r\n\r\n    const { maxOptions, offsetX, offsetY } = this.props;\r\n\r\n    if (options.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    if (selection >= options.length) {\r\n      this.setState({ selection: 0 });\r\n\r\n      return null;\r\n    }\r\n\r\n    const optionNumber = maxOptions === 0 ? options.length : maxOptions;\r\n\r\n    const helperOptions = options.slice(0, optionNumber).map((val, idx) => {\r\n      const highlightStart = val.toLowerCase().indexOf(value.substr(matchStart, matchLength).toLowerCase());\r\n\r\n      return (\r\n        <li\r\n          className={idx === selection ? 'active' : null}\r\n          key={val}\r\n          onClick={() => { this.handleSelection(idx); }}\r\n          onMouseEnter={() => { this.setState({ selection: idx }); }}\r\n        >\r\n          {val.slice(0, highlightStart)}\r\n          <strong>{val.substr(highlightStart, matchLength)}</strong>\r\n          {val.slice(highlightStart + matchLength)}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <ul className=\"react-autocomplete-input\" style={{ left: left + offsetX, top: top + offsetY }}>\r\n        {helperOptions}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      Component,\r\n      defaultValue,\r\n      disabled,\r\n      onBlur,\r\n      value,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    const { value: stateValue } = this.state;\r\n\r\n    const propagated = Object.assign({}, rest);\r\n    Object.keys(this.constructor.propTypes).forEach((k) => { delete propagated[k]; });\r\n\r\n    let val = '';\r\n\r\n    if (typeof value !== 'undefined' && value !== null) {\r\n      val = value;\r\n    } else if (stateValue) {\r\n      val = stateValue;\r\n    } else if (defaultValue) {\r\n      val = defaultValue;\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        <Component\r\n          disabled={disabled}\r\n          onBlur={onBlur}\r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          ref={this.refInput}\r\n          value={val}\r\n          {...propagated}\r\n        />\r\n        {this.renderAutocompleteList()}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nAutocompleteTextField.propTypes = propTypes;\r\nAutocompleteTextField.defaultProps = defaultProps;\r\n\r\nexport default AutocompleteTextField;","import React, {useState} from 'react';\r\nimport {Container, Modal, Row, Col, Overlay, Table, Button, Form } from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\n// import Draggable from 'react-draggable';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { EditJoinPanel } from './EditJoinPanel'\r\nimport AutocompleteTextField from './AutoComplete';\r\n\r\n\r\nexport const Conditions = ({models, conditions, editCondition, openContextMenu, contextMenuOpen}) => {\r\n    const [contextMenu, setContextMenu] = useState({\"x\":null,\"y\":null,\"display\":false});\r\n    const [editConditionMenu, setEditConditionMenu] = useState({\"show\": false, \"conditionToEdit\":null});\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    \r\n    if(contextMenuOpen === false && contextMenu.display===true) { //add this to every other component that has context menus\r\n      setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n    }\r\n\r\n    // console.log(\"Conditions debug:\");\r\n    // console.log(models);\r\n    // console.log(conditions);\r\n    // console.log(contextMenu);\r\n    // console.log(editConditionMenu);\r\n    if (models.length === 0) return null\r\n\r\n    const showConditions = (conditions,editCondition,openContextMenu) => {\r\n        // console.log(conditions);\r\n        if (conditions.length === 0) return null;\r\n        const handleClick = (e) => {\r\n          // console.log(e);\r\n            if (e.type === 'click') {\r\n              setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n              openContextMenu(false);\r\n            } else if (e.type === 'contextmenu') {\r\n              e.preventDefault();\r\n              if(contextMenu.display===false) { //if contextMenu is not displayed\r\n                setContextMenu({\"x\":e.pageX,\"y\":e.pageY,\"display\":true,\"clickTargetType\":\"Condition\",\"target\": e.target});\r\n                openContextMenu(true);\r\n              } else {\r\n                setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                openContextMenu(false);\r\n              }\r\n            }\r\n        }\r\n        const conditionRow = (condition, index, handleClick) => {\r\n            // console.log(\"conditionRow\");\r\n            // console.log(condition);\r\n            // console.log(index);\r\n            // console.log(index%2 === 0?'odd':'even');\r\n            return ( \r\n                <tr key={index} className={\"componentRow \"} onClick={handleClick} onContextMenu={handleClick}>\r\n                  <td md=\"auto\" className=\"fullSize\">\r\n                    <div className=\"componentContent\">{condition}</div>\r\n                  </td>\r\n                </tr>\r\n            );\r\n        }\r\n        var conditionList = []\r\n        for(var conditionIndex=0;conditionIndex<conditions.length;conditionIndex++) {\r\n            conditionList.push(conditionRow(conditions[conditionIndex],conditionIndex,handleClick));\r\n        }\r\n        return (\r\n          <div>\r\n            <div className=\"w-100 bg-secondary text-white text-center\">Add / Remove Conditions to filter results</div>\r\n            <Table striped bordered>\r\n              <tbody>\r\n              {conditionList}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        );\r\n    }\r\n\r\n\r\n    const handleModalClose = () => setEditConditionMenu({\"show\": false, \"conditionToEdit\":null});\r\n\r\n    \r\n\r\n      \r\n    const editConditionMenuDisplay = (editConditionMenu, handleModalClose, editCondition) => {\r\n      // console.log(\"Displaying Edit Condition Modal\");\r\n      // console.log(editConditionMenu);\r\n      if(editConditionMenu.menuOpen === false) return null;\r\n      const conditionCriteria = React.createRef();\r\n      const handleModalSaveAndClose = () => {\r\n        editCondition(editConditionMenu.conditionToEdit,conditionCriteria.current.recentValue);\r\n        handleModalClose();\r\n      }\r\n      \r\n      const modelColumns = () => {\r\n        var tempModelColumns = [];\r\n        for(var modelIndex=0;modelIndex<models.response.models.length;modelIndex++) {\r\n          for(var columnIndex=0;columnIndex<models.response.models[modelIndex].columns.length;columnIndex++) {\r\n            tempModelColumns.push(models.response.models[modelIndex].columns[columnIndex]);\r\n            tempModelColumns.push(models.response.models[modelIndex].name+\".\"+models.response.models[modelIndex].columns[columnIndex]);\r\n          }\r\n        }\r\n        // console.log(\"tempModelColumns\");\r\n        // console.log(tempModelColumns);\r\n        return tempModelColumns;\r\n      }\r\n\r\n      const modelFullColumns = () => {\r\n        var tempModelColumns = [];\r\n        for(var modelIndex=0;modelIndex<models.response.models.length;modelIndex++) {\r\n          for(var columnIndex=0;columnIndex<models.response.models[modelIndex].columns.length;columnIndex++) {\r\n            tempModelColumns.push(models.response.models[modelIndex].name+\".\"+models.response.models[modelIndex].columns[columnIndex]);\r\n            tempModelColumns.push(models.response.models[modelIndex].name+\".\"+models.response.models[modelIndex].columns[columnIndex]);\r\n          }\r\n        }\r\n        // console.log(\"tempModelColumns\");\r\n        // console.log(tempModelColumns);\r\n        return tempModelColumns;\r\n      }\r\n\r\n      return(\r\n        <div>\r\n          <Modal show={(editConditionMenu.show)} onHide={handleModalClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Join </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            Join Conditions:\r\n            <Form>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <Form.Group>\r\n                    <Form.Label>Condition Criteria</Form.Label>\r\n                      <AutocompleteTextField className=\"form-control\" rows={3} ref={conditionCriteria} options={modelColumns()} fullOptions={modelFullColumns()} trigger=\"\" defaultValue={editConditionMenu.conditionToEdit}/>\r\n                  </Form.Group>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleModalSaveAndClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        </div>\r\n      )\r\n      };\r\n\r\n\r\n    const contextMenuDisplay = (contextMenu) => {\r\n      if(contextMenu.display === false) return null;\r\n      // console.log(\"Displaying Context Menu\");\r\n      // console.log(contextMenu);\r\n      // console.log(contextMenu.target.firstChild.data);\r\n      const clickEditCondition = (conditionToEdit) => {\r\n        setEditConditionMenu({\"show\": true, \"conditionToEdit\":contextMenu.target.firstChild.data});\r\n        openContextMenu(false);\r\n      };\r\n      const clickRemoveCondition = (conditionToRemove) => {\r\n        editCondition(conditionToRemove, null);\r\n        openContextMenu(false);\r\n      };\r\n      return(\r\n        <div>\r\n          <Overlay target={contextMenu.target} show={contextMenu.display} placement=\"right-start\">\r\n            <div>\r\n              <Table bordered variant=\"dark\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td onClick={() => clickEditCondition(contextMenu.target.firstChild.data)}>\r\n                      <div>Edit Condition</div>\r\n                      \r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td onClick={() => clickRemoveCondition(contextMenu.target.firstChild.data)}>\r\n                      Delete Condition\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </Overlay>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n          <h2 className=\"text-center\">Conditions</h2>\r\n          <div>\r\n            {showConditions(conditions,editCondition,openContextMenu)}\r\n            {contextMenuDisplay(contextMenu)}\r\n            {editConditionMenuDisplay(editConditionMenu, handleModalClose, editCondition)}\r\n          </div>\r\n          <div className=\"pt-2 text-center\">\r\n            <Button variant=\"primary\" onClick={() => setEditConditionMenu({\"show\": true, \"conditionToEdit\":null})}>\r\n                Add Condition\r\n            </Button>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport { Container, Overlay, Table, Form } from 'react-bootstrap';\r\n\r\n\r\n\r\nexport function Selects( {models, openContextMenu, contextMenuOpen, selects, editSelect, highlightColumn, outputModel, editOutputModel}) {\r\n    const [contextMenu, setContextMenu] = useState({\"x\":null,\"y\":null,\"display\":false});\r\n    const [editingField, setEditingField] = useState(-1);\r\n    const [editingDescription, setEditingDescription] = useState(-1);\r\n    // console.log(\"Selects:\")\r\n    // console.log(models);\r\n    // console.log(selects);\r\n    // console.log(contextMenu);\r\n    // console.log(clicked);\r\n    // console.log(editingField);\r\n    if (models.length === 0) return null\r\n\r\n    if(contextMenuOpen === false && contextMenu.display===true) { //add this to every other component that has context menus\r\n        setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n      }\r\n\r\n    const contextMenuDisplay = (contextMenu, selects) => {\r\n        if(contextMenu.display === false) return null;\r\n        // console.log(\"Displaying Context Menu\");\r\n        // console.log(contextMenu);\r\n        // console.log(contextMenu.target.firstChild.data);\r\n        // console.log(contextMenu.target);\r\n        // console.log(contextMenu.target.dataset.selectindex);\r\n        const clickEditSelectName = (selectToEdit) => {\r\n        //   setEditConditionMenu({\"show\": true, \"conditionToEdit\":contextMenu.target.firstChild.data});\r\n          setEditingField(parseInt(selectToEdit));\r\n          openContextMenu(false);\r\n        };\r\n        const clickEditSelectDescription = (selectToEdit) => {\r\n        //   setEditConditionMenu({\"show\": true, \"conditionToEdit\":contextMenu.target.firstChild.data});\r\n          // console.log(\"clickEditSelectDescription\");\r\n          // console.log(selectToEdit);\r\n          setEditingDescription(parseInt(selectToEdit));\r\n          openContextMenu(false);\r\n        };\r\n        const clickRemoveSelect = (selectToRemove) => {\r\n          editSelect(selectToRemove,null);\r\n          openContextMenu(false);\r\n        };\r\n        return(\r\n          <div>\r\n            <Overlay target={contextMenu.target} show={contextMenu.display} placement=\"left-start\">\r\n              <div>\r\n                <Table bordered variant=\"dark\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td onClick={() => clickEditSelectName(contextMenu.target.dataset.selectindex)}>\r\n                        <div>Edit Name</div>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td onClick={() => clickEditSelectDescription(contextMenu.target.dataset.selectindex)}>\r\n                        <div>Edit Description</div>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td onClick={() => clickRemoveSelect(selects[contextMenu.target.dataset.selectindex])}>\r\n                        Delete Field\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </Overlay>\r\n          </div>\r\n        )\r\n      }\r\n    \r\n    \r\n    const listModelColumns = (models,selects, highlightColumn,openContextMenu) => {\r\n        \r\n        const handleClick = (e) => {\r\n            // console.log(\"handleClick\");\r\n            // console.log(e);\r\n              if (e.type === 'click') {\r\n                setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                openContextMenu(false);\r\n              } else if (e.type === 'contextmenu') {\r\n                e.preventDefault();\r\n                if(contextMenu.display===false) { //if contextMenu is not displayed\r\n                  setContextMenu({\"x\":e.pageX,\"y\":e.pageY,\"display\":true,\"clickTargetType\":\"Condition\",\"target\": e.target});\r\n                  openContextMenu(true);\r\n                } else {\r\n                  setContextMenu({\"x\":null,\"y\":null,\"display\":false});\r\n                  openContextMenu(false);\r\n                }\r\n              }\r\n          };\r\n\r\n          const updateColumnAlias = (e) => {\r\n            //   console.log(\"updateColumnAlias\");\r\n            //   console.log(e);\r\n              e.preventDefault();\r\n              setEditingField(-1);\r\n              editSelect(selects[editingField],{...selects[editingField], \"alias\": e.target.value});\r\n          };\r\n          const updateColumnDescription = (e) => {\r\n              // console.log(\"updateColumnDescription\");\r\n              // console.log(e);\r\n              e.preventDefault();\r\n              setEditingDescription(-1);\r\n              editSelect(selects[editingDescription],{...selects[editingDescription], \"description\": e.target.value});\r\n          };\r\n\r\n          const showField = (selects, selectsIndex) => {\r\n            //   console.log(\"showField\");\r\n            //   console.log(selectsIndex);\r\n            //   console.log(editingField);\r\n            if(editingField === selectsIndex) {\r\n                return(\r\n                    <>\r\n                        <Form onSubmit={(e) => e.preventDefault()}>\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    defaultValue={(selects[selectsIndex].alias !== null && selects[selectsIndex].alias !== undefined)?selects[selectsIndex].alias:selects[selectsIndex].column}\r\n                                    onBlur={(e) => updateColumnAlias(e)}\r\n                                    placeholder=\"Add name for output field\"\r\n                                    autoFocus\r\n                                />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </>\r\n                );\r\n            } else {\r\n                return(\r\n                    <>\r\n                        <div className=\"w-100 text-dark text-right\" data-selectindex = {selectsIndex}>\r\n                          {(selects[selectsIndex].alias !== null && selects[selectsIndex].alias !== undefined)?selects[selectsIndex].alias:selects[selectsIndex].column}\r\n                        </div>\r\n                    </>\r\n                );\r\n            }\r\n          };\r\n        const showDescription = (selects, selectsIndex) => {\r\n          // console.log(selects);\r\n          // console.log(selectsIndex);\r\n          // console.log(editingDescription);\r\n          if(editingDescription === selectsIndex) { //if decription is being edited\r\n            return(\r\n                <>\r\n                    <Form onSubmit={(e) => e.preventDefault()}>\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                defaultValue={(selects[selectsIndex].description !== null && selects[selectsIndex].description !== undefined)?selects[selectsIndex].description:null}\r\n                                onBlur={(e) => updateColumnDescription(e)}\r\n                                placeholder=\"Add description for output field\"\r\n                                autoFocus\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </>\r\n            );\r\n        } else if(selects[selectsIndex].description !== null && selects[selectsIndex].description !== undefined) { // if description is defined\r\n            return(\r\n                <>\r\n                    <div className=\"w-100 text-dark text-right font-italic\" data-selectindex = {selectsIndex}>\r\n                      {selects[selectsIndex].description}\r\n                    </div>\r\n                </>\r\n            );\r\n        } else return null;\r\n      };\r\n        \r\n\r\n        const highlightColumns = (col) => {\r\n            // console.log(\"highlightColumns\");\r\n            // console.log(col);\r\n            var tempColumnsToHighlight = [];\r\n            if(col !== undefined & col !== null) {\r\n                for(var columnIndex=0;columnIndex<col.inputColumns.length;columnIndex++) {\r\n                    tempColumnsToHighlight.push(col.inputColumns[columnIndex]);\r\n                } \r\n            }\r\n            highlightColumn(tempColumnsToHighlight);\r\n        };\r\n        var tempListModelColumns = [];\r\n        for(let selectsIndex=0;selectsIndex<selects.length;selectsIndex++) {\r\n            // console.log(\"selectsMap\");\r\n            // console.log(selects[selectsIndex]);\r\n            tempListModelColumns.push(\r\n                <tr\r\n                    key={selectsIndex}\r\n                    onMouseEnter={() => highlightColumns(selects[selectsIndex])}\r\n                    onMouseLeave={() => highlightColumns()}\r\n                    onClick={(e) => handleClick(e)}\r\n                    onContextMenu={(e) => handleClick(e)}\r\n                >\r\n                    <td\r\n                    data-selectindex = {selectsIndex}\r\n                    >\r\n                        {showField(selects, selectsIndex)}\r\n                        {showDescription(selects, selectsIndex)}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        };\r\n        return tempListModelColumns;\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <h2 className=\"text-center\">\r\n                Output\r\n            </h2>\r\n            <div className=\"w-100 bg-secondary text-white text-center\">{outputModel.name}</div>\r\n            <div className=\"w-100 bg-light text-dark text-center font-italic mb-3\">\r\n                {outputModel.description?outputModel.description:\"New Model\"}\r\n            </div>\r\n            <table className=\"table table-striped table-hover w-100\">\r\n                <tbody>\r\n                    {listModelColumns(models,selects, highlightColumn,openContextMenu)}\r\n                </tbody>\r\n            </table>\r\n            {contextMenuDisplay(contextMenu, selects)}\r\n        </div>\r\n    )\r\n}","export async function getModelJson(modelJsonFilename, user) {\r\n    const response = await fetch('/api/model_old/' + modelJsonFilename, {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","import React from 'react'\r\nconst conditionConcat = (conditions) => {\r\n    // console.log(\"SQLPanel Conditions\");\r\n    // console.log(conditions);\r\n    if (conditions.length === 0) return null;\r\n    var tempConditionConcat = conditions[0].fullName;\r\n    for(var conditionIndex=1;conditionIndex<conditions.length;conditionIndex++) {\r\n        tempConditionConcat += \"\\n  AND \" + conditions[conditionIndex].fullName;\r\n    }\r\n    return tempConditionConcat;\r\n}\r\nconst selectStatement = (state) => {\r\n    var tempSelectStatement = \"SELECT\\n\";\r\n    const columnDefinition = (select) => {\r\n        if('definition' in select) { // if SQL definition for column exists, use that\r\n            return select.definition;\r\n        } else { // otherwise use the column in inputColumns\r\n            return select.inputColumns[0].model + \".\" + select.inputColumns[0].column;\r\n        }\r\n    }\r\n\r\n    const selectLine = (select) => {\r\n        return columnDefinition(select) + \" AS \" + select.alias;\r\n    }\r\n\r\n    if (state.selects.length !== 0) {\r\n        tempSelectStatement += \"  \" + selectLine(state.selects[0]) + \"\\n\"\r\n        for(var selectIndex=1;selectIndex<state.selects.length;selectIndex++) {\r\n            tempSelectStatement += \"  , \" \r\n                + selectLine(state.selects[selectIndex]) + \"\\n\";\r\n        }\r\n    } else {\r\n        tempSelectStatement += \"  *\\n\"\r\n    }\r\n    return tempSelectStatement;\r\n}\r\n\r\nconst fromStatement = (state) => {\r\n    var tempFromStatement = \"\";\r\n\r\n    const fromSyntax = (model) => {\r\n        return \"{{ ref(\\\"\" + model.name + \"\\\") }} AS \" + model.name;\r\n    }\r\n\r\n    if (state.models.length !== 0) {\r\n        tempFromStatement += \"FROM \" + fromSyntax(state.models.response.models[0]) + \"\\n\"\r\n        for(var joinIndex=1;joinIndex<state.models.response.models.length;joinIndex++) {\r\n            tempFromStatement += \"LEFT JOIN \" \r\n                + fromSyntax(state.models.response.models[joinIndex])\r\n                + \"\\n  ON \" + conditionConcat(state.models.response.models[joinIndex].joinConditions) + \"\\n\";\r\n        }\r\n    } else {\r\n        tempFromStatement += \"FROM \" + state.outputModel\r\n    }\r\n    return tempFromStatement;\r\n}\r\nconst whereStatement = (state) => {\r\n    var tempWhereStatement = \"\";\r\n    if (state.models.length !== 0) {\r\n        tempWhereStatement += \"WHERE \" + state.conditions[0] + \"\\n\"\r\n        // console.log(\"Loading conditions\");\r\n        // console.log(state.conditions.length);\r\n        for(var conditionIndex=1;conditionIndex<state.conditions.length;conditionIndex++) {\r\n            tempWhereStatement += \"  AND \" + state.conditions[conditionIndex] + \"\\n\";\r\n        }\r\n    } else {\r\n        tempWhereStatement += \"FROM \" + state.outputModel\r\n    }\r\n    return tempWhereStatement;\r\n}\r\nexport const SQLPanel = ({state}) => {\r\n    // const fromItem = (joinModel) => {\r\n    //     return(\r\n    //         {join.}\r\n    //     )\r\n    // }\r\n    return(\r\n    <div>\r\n        Generated SQL:\r\n        <div className=\"sqlContent\">\r\n            {selectStatement(state)}\r\n            {fromStatement(state)}\r\n            {whereStatement(state)}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport {Collapse, Container, Row, Col } from 'react-bootstrap';\r\nimport { XCircle } from 'react-bootstrap-icons';\r\n// import logo from './logo.svg';\r\nimport '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import JsonFilenameInput from './components/JsonFilenameInput'\r\nimport { Models } from './Models'\r\nimport { Conditions } from './Conditions'\r\nimport { Selects } from './Selects'\r\nimport { getModelJson } from '../services/getModelJson'\r\nimport { SQLPanel } from './SQLPanel';\r\n\r\nclass ModelBuilder extends Component {\r\n  \r\n  state = {\r\n    model: {},\r\n    models: [],\r\n    openSQLPanel: false,\r\n    showJoinModal: -1,\r\n    outputModel: \"\",\r\n    showColumns: true,\r\n    conditions: [],\r\n    selects: [],\r\n    highlightedColumns: []\r\n  }\r\n  \r\n  toggleJoinModal = (joinNum) => {\r\n    this.setState({showJoinModal: joinNum})\r\n  }\r\n\r\n  \r\n  openSQLPanel = () => {\r\n    this.state.openSQLPanel?this.setState({openSQLPanel: false}):this.setState({openSQLPanel: true})\r\n  }\r\n\r\n  componentDidMount() { // on load\r\n    getModelJson('all_models.json', this.props.user)\r\n      .then(response => {\r\n        this.setState({models: {response}});\r\n        this.setState({conditions: response.conditions});\r\n        var selects = [];\r\n        var outputName = \"\";\r\n        for(var modelIndex=0;modelIndex < response.models.length;modelIndex++) {\r\n          for(var columnIndex=0;columnIndex<response.models[modelIndex].columns.length;columnIndex++) {\r\n            var columnUsedToJoin = false;\r\n            for(var joinModelIndex=0;joinModelIndex<response.models.length;joinModelIndex++) {\r\n              if('joinConditions' in response.models[modelIndex] && typeof response.models[modelIndex].joinConditions !== 'undefined') {\r\n                // console.log(models.response.models[modelIndex]);\r\n                for(var joinConditionIndex=0;joinConditionIndex<response.models[modelIndex].joinConditions.length;joinConditionIndex++) {\r\n                  if(\r\n                    response.models[modelIndex].name===response.models[modelIndex].joinConditions[joinConditionIndex].conditionField1.model\r\n                    && response.models[modelIndex].columns[columnIndex]===response.models[modelIndex].joinConditions[joinConditionIndex].conditionField1.column\r\n                  ) {\r\n                    columnUsedToJoin = true;\r\n                  }\r\n                }\r\n              }\r\n                  \r\n            }\r\n            if(!columnUsedToJoin) {\r\n              selects.push({\"inputColumns\": [{\"column\": response.models[modelIndex].columns[columnIndex],\"model\": response.models[modelIndex].name}],\"alias\": response.models[modelIndex].columns[columnIndex]});\r\n            }\r\n          }\r\n          outputName += (modelIndex!==0?\"_\":\"\") + response.models[modelIndex].name\r\n        }\r\n        this.setState({selects: selects});\r\n        this.setState({outputModel: {\"name\": outputName}})\r\n      });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.models !== this.props.models) { // update Models\r\n        // check all existing joins\r\n        // add new joins\r\n    }\r\n  }\r\n\r\n  saveEditedModel = (previousModel, newModel) => {\r\n    // console.log(\"saveEditedModel\");\r\n    // console.log(previousModel);\r\n    // console.log(newModel);\r\n    this.setState(prevState => ({\r\n      models: prevState.models.response.models.filter(models => models !== previousModel) \r\n    }));\r\n    this.setState({models: {...this.state.models, \"response\": {...this.state.models.response, \"models\": [...this.state.models.response.models.filter(models => models !== previousModel), newModel]}}});\r\n  }\r\n\r\n\r\n  logState = () => {\r\n    console.log(this.state);\r\n  }\r\n\r\n\r\n  editCondition = (oldCondition, newCondition) => {\r\n      // console.log(\"editCondition\")\r\n      // console.log(oldCondition);\r\n      // console.log(newCondition);\r\n      // console.log(this.state.conditions);\r\n    \r\n    if(newCondition === null) { //Removing a select:\r\n      this.setState({conditions: [...this.state.conditions.filter(conditions => conditions !== oldCondition)]});\r\n    } else if (oldCondition === null) { //Adding a select\r\n      this.setState({conditions: [...this.state.conditions, newCondition]});\r\n    } else {\r\n      var conditionToEditIndex = -1;\r\n      for(var conditionIndex=0;conditionIndex<this.state.conditions.length;conditionIndex++) {\r\n        if(this.state.conditions[conditionIndex] === oldCondition) {\r\n          conditionToEditIndex = conditionIndex;\r\n        }\r\n      }\r\n      let conditions = [...this.state.conditions];\r\n      let condition = {...conditions[conditionToEditIndex]};\r\n      condition = newCondition;\r\n      conditions[conditionToEditIndex] = condition;\r\n      this.setState({conditions: conditions});\r\n    }\r\n  \r\n  }\r\n\r\n\r\n  editSelect = (oldSelect, newSelect) => {\r\n    // console.log(\"editSelect\")\r\n    // console.log(oldSelect);\r\n    // console.log(newSelect);\r\n    // console.log(this.state.selects);\r\n    \r\n    if(newSelect === null) { //Removing a select:\r\n      this.setState({selects: [...this.state.selects.filter(selects => selects !== oldSelect)]});\r\n    } else if (oldSelect === null) { //Adding a select\r\n      this.setState({selects: [...this.state.selects, newSelect]});\r\n    } else {\r\n      var selectToEditIndex = -1;\r\n      for(var selectIndex=0;selectIndex<this.state.selects.length;selectIndex++) {\r\n        if(this.state.selects[selectIndex] == oldSelect) {\r\n          selectToEditIndex = selectIndex;\r\n        }\r\n      }\r\n      let selects = [...this.state.selects];\r\n      let select = {...selects[selectToEditIndex]};\r\n      select = newSelect;\r\n      selects[selectToEditIndex] = select;\r\n      this.setState({selects: selects});\r\n    }\r\n  \r\n  }\r\n\r\n  editOutputModel = (newOutputModel) => {\r\n    // console.log(\"editOutputModel\")\r\n    // console.log(newOutputModel);\r\n      this.setState({outputModel: newOutputModel});  \r\n  }\r\n\r\n  // this function reorders items on dragdrop\r\n  reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n  };\r\n\r\n  highlightColumn = (columnsToHighlight) => {\r\n    // console.log(\"highlightColumn\");\r\n    // console.log(columnsToHighlight);\r\n    this.setState({highlightedColumns: columnsToHighlight});\r\n  }\r\n\r\n  modelDragEnd = (result) => {\r\n    // dropped outside the list\r\n    // console.log(\"Start of modelDragEnd\");\r\n    //   console.log(result);\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    if (result.destination.index===result.source.index) {\r\n      return;\r\n    }\r\n    // console.log(\"got past checks\");\r\n    const reorderJoinConditions = (joinConditions) => {\r\n      var newJoinCondition = JSON.parse(JSON.stringify(joinConditions));\r\n      for(var joinConditionIndex=0;joinConditionIndex<joinConditions.length;joinConditionIndex++) {\r\n        newJoinCondition[joinConditionIndex].conditionField1 = joinConditions[joinConditionIndex].conditionField2;\r\n        newJoinCondition[joinConditionIndex].conditionField2 = joinConditions[joinConditionIndex].conditionField1;\r\n        newJoinCondition[joinConditionIndex].fullName = \r\n          joinConditions[joinConditionIndex].conditionField2.model\r\n          +\".\"+joinConditions[joinConditionIndex].conditionField2.column\r\n          +\" \"+joinConditions[joinConditionIndex].conditionOperator\r\n          +\" \"+joinConditions[joinConditionIndex].conditionField1.model\r\n          +\".\"+joinConditions[joinConditionIndex].conditionField1.column\r\n      }\r\n      return(newJoinCondition);\r\n    }\r\n    var fixedModels = this.reorder(\r\n      this.state.models.response.models,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    // console.log(\"Fixed Models\");\r\n    // console.log(fixedModels);\r\n    var tempJoinConditions = fixedModels[result.source.index].joinConditions;\r\n    fixedModels[result.source.index].joinConditions = fixedModels[result.destination.index].joinConditions;\r\n    fixedModels[result.destination.index].joinConditions = tempJoinConditions;\r\n    // console.log(fixedModels[result.source.index]);\r\n    if(fixedModels[result.source.index].joinConditions) {\r\n      fixedModels[result.source.index].joinConditions = reorderJoinConditions(fixedModels[result.source.index].joinConditions);\r\n    } else {\r\n      fixedModels[result.destination.index].joinConditions = reorderJoinConditions(fixedModels[result.destination.index].joinConditions);\r\n    }\r\n    // console.log(fixedModels);\r\n    this.setState({models: {...this.state.models, \"response\": {...this.state.models.response, \"models\":  fixedModels}}});\r\n    }\r\n  \r\n\r\n  render() {\r\n    if(this.props.appState !== \"ModelBuilder\") return null;\r\n    if(this.props.logState === true) {\r\n        console.log(\"ModelBuilder State:\");\r\n        console.log(this.state);\r\n      }\r\n    if(this.props.openSQLPanel) this.state.openSQLPanel?this.setState({openSQLPanel: false}):this.setState({openSQLPanel: true})\r\n    return (\r\n        <div>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"modelList\">\r\n                  <Models \r\n                    models={this.state.models} \r\n                    modelDragEnd={this.modelDragEnd}\r\n                    showColumns={this.state.showColumns}\r\n                    saveEditedModel={this.saveEditedModel}\r\n                    toggleJoinModal = { this.toggleJoinModal }\r\n                    showJoinModal = {this.state.showJoinModal}\r\n                    highlightedColumns = {this.state.highlightedColumns}\r\n                    contextMenuOpen={this.props.contextMenuOpen}\r\n                    openContextMenu={this.props.openContextMenu}\r\n                    editSelect={this.editSelect}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"conditionList\">\r\n                  <Conditions \r\n                      models={this.state.models} \r\n                      conditions={this.state.conditions}\r\n                      editCondition={this.editCondition}\r\n                      contextMenuOpen={this.props.contextMenuOpen}\r\n                      openContextMenu={this.props.openContextMenu}\r\n                    />\r\n                </div>\r\n                </Col>\r\n                <Col>\r\n                <div className=\"outputList\">\r\n                  <Selects\r\n                    models={this.state.models}\r\n                    highlightColumn={this.highlightColumn}\r\n                    selects={this.state.selects}\r\n                    editSelect={this.editSelect}\r\n                    contextMenuOpen={this.props.contextMenuOpen}\r\n                    openContextMenu={this.props.openContextMenu}\r\n                    outputModel={this.state.outputModel}\r\n                    editOutputModel={this.editOutputModel}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Collapse in={ this.state.openSQLPanel } timeout={2000} dimension={'width'}>\r\n            <div>\r\n              <div id=\"sqlPanelSideBar\" className=\"sidePanelContent\">\r\n                <div className=\"sideBarExitButton\">\r\n                  <XCircle onClick={() => this.setState({openSQLPanel: false})}></XCircle>\r\n                </div>\r\n                <SQLPanel\r\n                  state={this.state}\r\n                >\r\n                </SQLPanel>\r\n              </div>\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n          \r\n    );\r\n  }\r\n}\r\n\r\nexport default ModelBuilder;\r\n","export async function getModelSearch(searchString, user) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/model_search/' + searchString, {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","import React, { useRef, useState } from 'react';\r\nimport { Overlay, Popover, Navbar, Nav } from 'react-bootstrap'; \r\nimport { getModelSearch } from '../services/getModelSearch';\r\nimport { useHistory } from 'react-router-dom';\r\nconst reactState = process.env.NODE_ENV;\r\nexport const NavBar = ({addModel, hostVersion, logState, openSQLPanel, openModelBuilder, openCatalog, openConfig, appState, contextMenuOpen, openContextMenu, selectModel, user, setUser, userConfig, setUserConfig}) => {\r\n    const [searchDropdown, setSearchDropdown] = useState(false);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    let history = useHistory();\r\n    const debugLogState = (reactState) => {\r\n        if ( reactState === 'development') {\r\n            return(\r\n                <div className=\"nav-item nav-link\" role=\"button\" onClick={() => logState()}>Show state in console </div>\r\n                );\r\n        } else return null;\r\n    }\r\n    const logoutButton = (hostVersion, userConfig) => {\r\n        if ( hostVersion === 'node') {\r\n            return(\r\n                <div className=\"nav-item nav-link mr-sm-2\" role=\"button\" onClick={() => logout()}>Logout {userConfig.firstname}</div>\r\n                );\r\n        } else return null;\r\n    }\r\n    const submitChanges = (hostVersion, createPR) => {\r\n        if ( hostVersion === 'node') {\r\n            return(\r\n                <div className=\"nav-item nav-link mr-sm-2\" role=\"button\" onClick={() => createPR()}>Submit changes</div>\r\n                );\r\n        } else return null;\r\n    }\r\n\r\n    const searchBox = useRef(null);\r\n\r\n    if(contextMenuOpen === false && searchDropdown===true) { //add this to every other component that has context menus\r\n        setSearchDropdown(false);\r\n      }\r\n\r\n\r\n    const selectSearchResult = (e,index) => {\r\n        // console.log(\"clickResult\");\r\n        // console.log(index);\r\n        openContextMenu(false);\r\n        setSearchDropdown(false);\r\n        e.stopPropagation();\r\n        // selectModel(searchResults[index].nodeID);\r\n        // openCatalog();\r\n        history.push(\"/catalog/\"+searchResults[index].nodeID);\r\n    }\r\n\r\n    const toggleSearchDropdown = (newValue) => {\r\n        \r\n        setSearchDropdown(newValue);\r\n        openContextMenu(newValue);\r\n    }\r\n\r\n    const preventSearchClicks = (e) => {\r\n        if(e.target.value.length>0) {\r\n            e.stopPropagation();\r\n            openContextMenu(true);\r\n        }\r\n    }\r\n\r\n    const searchRow = (searchResult, index) => {\r\n        // console.log(\"searchRow\")\r\n        // console.log(searchResult);\r\n        const columnDetails = () => {\r\n            if(searchResult.type===\"column_name\" || searchResult.type===\"column_description\") {\r\n                return(\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            Column: {searchResult.columnName}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {searchResult.columnDescription}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else return null;\r\n        }\r\n        const tagDetails = () => {\r\n            if(searchResult.type===\"tag_name\") {\r\n                return(\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            Tag: {searchResult.tagName}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else return null;\r\n        }\r\n        \r\n        return (\r\n            <div className=\"row\" key={\"searchRow\"+index}>\r\n                <div className=\"col-sm\">\r\n                    <div className=\"container\" onClick={(e) => selectSearchResult(e, index)}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col font-weight-bold\">\r\n                                {searchResult.modelName.toLowerCase()}\r\n                            </div>\r\n                            <div className=\"col font-weight-light font-italic text-right\">\r\n                                {searchResult.nodeID.toLowerCase()}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col font-italic\">\r\n                                {searchResult.modelDescription}\r\n                            </div>\r\n                        </div>\r\n                        {columnDetails()}\r\n                        {tagDetails()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }    \r\n    \r\n    const getSearchResults = (e) => {\r\n        // console.log(\"getSearchResults\");\r\n        if(e.target.value.trim().length===0) {\r\n            setSearchResults([]);\r\n            return null;\r\n        };\r\n        openContextMenu(true);\r\n        setSearchDropdown(true);\r\n        getModelSearch(searchBox.current.value, user)\r\n            .then(response => {\r\n                // console.log(response);\r\n                if(response.length===0 || response.error) {\r\n                    setSearchResults([]);\r\n                    return null;\r\n                }\r\n                if(response.searchString === searchBox.current.value) {\r\n                    const allSearchRows = response.results.slice(0,15);\r\n                    setSearchResults(allSearchRows);\r\n                }\r\n                // console.log(\"getSearchResults\");\r\n                // console.log(allSearchRows);\r\n            });\r\n        \r\n    }\r\n\r\n    const allSearchRows = () => {\r\n        if(searchResults.length===0 || !searchDropdown) return null;\r\n        \r\n        const allSearchRows = searchResults.map((searchResult, index) => searchRow(searchResult, index));\r\n        const actionText = appState===\"Catalog\"?\"open in Catalog\":\"add to Model Builder\"\r\n        return(\r\n            <Overlay target={searchBox} show={searchDropdown} placement=\"bottom\">\r\n                <div className=\"container searchbox z-200\">\r\n                    {allSearchRows}\r\n                </div>\r\n            </Overlay>\r\n        );\r\n        \r\n    }\r\n\r\n    const reloadDBT = () => {\r\n        fetch('/api/v1/reload_dbt', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Token ' + user.token,\r\n          }\r\n        });\r\n    }\r\n\r\n    const createPR = () => {\r\n        var prTitle = prompt(\"Please describe your changes:\", \"Added descriptions to models x, y\");\r\n        // console.log(prTitle);\r\n        var prRequestBody = {\r\n            \"prTitle\": prTitle\r\n        }\r\n        fetch('/api/v1/create_pr', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Token ' + user.token,\r\n          },\r\n          body: JSON.stringify(prRequestBody)\r\n        });\r\n    }\r\n\r\n    const logout = () => {\r\n        fetch('/api/v1/users/logout', {\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Token ' + user.token,\r\n          },\r\n        });\r\n        setUser({\"user\":{}});\r\n        sessionStorage.removeItem(\"user\");\r\n        setUserConfig({});\r\n        sessionStorage.removeItem(\"userconfig\");\r\n    }\r\n    // console.log(history);\r\n    return(\r\n    <Navbar className=\"navbar-dark bg-brand position-fixed w-100 z-100\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">TĀNGATA</Navbar.Brand>\r\n        {/* <a className=\"navbar-brand bg-brand\" href=\"/\">TANGATA</a> */}\r\n        <Navbar.Toggle aria-controls=\"navbarContent\"/>\r\n        <Navbar.Collapse id=\"navbarContent\" className=\"justify-content-between\">\r\n            <div className=\"navbar-nav p-2 bg-brand\">\r\n                <div className={\"nav-item nav-link bg-brand \"+(history.location.pathname.includes(\"/catalog\")?\"active\":null)} role=\"button\" onClick={() => history.push(\"/catalog\")}>Catalog</div>\r\n                <div className={\"nav-item nav-link bg-brand \"+(history.location.pathname.includes(\"/config\")?\"active\":null)} role=\"button\" onClick={() => history.push(\"/config\")}>Config</div>\r\n            </div>\r\n            <div className=\"navbar-nav p2\">\r\n                <form className=\"form-inline\">\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" ref={searchBox} onClick={(e) => preventSearchClicks(e)} onChange={(e) => getSearchResults(e)} onFocus={() => toggleSearchDropdown(true)} placeholder=\"Search Models\" aria-label=\"Search Models\"/>\r\n                </form>\r\n                {allSearchRows()}\r\n            </div>\r\n            <div className=\"navbar-nav p-2\">\r\n                <div className={\"nav-item nav-link mr-sm-2\"+(userConfig.dbtmethod!==\"UploadMetadata\"?null:\" d-none\")} role=\"button\" onClick={() => reloadDBT()}>Refresh dbt_ catalog</div>\r\n                {submitChanges(hostVersion, createPR)}\r\n                {/* <div className=\"nav-item nav-link mr-sm-2\" role=\"button\" onClick={() => openSQLPanel()}>Open SQL Panel </div> */}\r\n                {debugLogState(reactState)}\r\n                {logoutButton(hostVersion, userConfig)}\r\n            {/* <a class=\"nav-item nav-link active\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n            <a class=\"nav-item nav-link\" href=\"#\">Features</a>\r\n            <a class=\"nav-item nav-link\" href=\"#\">Pricing</a>\r\n            <a class=\"nav-item nav-link disabled\" href=\"#\">Disabled</a> */}\r\n            </div>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n    )\r\n}\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState } from 'react';\r\nimport { Overlay, Table } from 'react-bootstrap';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  MiniMap,\r\n  isNode\r\n} from 'react-flow-renderer';\r\nimport dagre from 'dagre';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// import './layouting.css';\r\n\r\nconst dagreGraph = new dagre.graphlib.Graph();\r\ndagreGraph.setDefaultEdgeLabel(() => ({}));\r\n\r\n// In order to keep this example simple the node width and height are hardcoded.\r\n// In a real world app you would use the correct width and height values of\r\n// const nodes = useStoreState(state => state.nodes) and then node.__rf.width, node.__rf.height\r\n\r\nconst nodeWidth = 200;\r\nconst nodeHeight = 33;\r\nconst getLayoutedElements = (elements, direction = 'LR') => {\r\n  dagreGraph.setGraph({ rankdir: direction });\r\n  // console.log(\"getLayoutedElements\");\r\n  // console.log(elements);\r\n  elements.forEach((el) => {\r\n    if (isNode(el)) {\r\n      dagreGraph.setNode(el.id, { width: nodeWidth, height: nodeHeight });\r\n    } else {\r\n      dagreGraph.setEdge(el.source, el.target);\r\n    }\r\n  });\r\n\r\n  dagre.layout(dagreGraph);\r\n\r\n\r\n\r\n  return elements.map((el) => {\r\n    if (isNode(el)) {\r\n      const nodeWithPosition = dagreGraph.node(el.id);\r\n      el.targetPosition = 'left';\r\n      el.sourcePosition = 'right';\r\n\r\n      // unfortunately we need this little hack to pass a slighltiy different position\r\n      // to notify react flow about the change. More over we are shifting the dagre node position\r\n      // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\r\n      el.position = {\r\n        x: nodeWithPosition.x - nodeWidth / 2 + Math.random() / 1000,\r\n        y: nodeWithPosition.y - nodeHeight / 2,\r\n      };\r\n    }\r\n\r\n    return el;\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\nconst LayoutFlow = (props) => {\r\n  let history = useHistory();\r\n  const [contextMenu, setContextMenu] = useState({\"x\":null,\"y\":null,\"display\":false});\r\n//   const { fitView } = useZoomPanHelper();\r\n// console.log(\"LayoutFlow\");  \r\n// console.log(props.lineageArray);\r\n    const layoutedElements = getLayoutedElements(props.lineageArray.lineage);\r\n  const [elements, setElements] = useState(layoutedElements);\r\n  const onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView({padding: 0.1, includeHiddenNodes: true});\r\n  }\r\n  const onNodeRightClick = (event, node) => {\r\n    event.preventDefault();\r\n    // console.log(event);\r\n    // console.log(node.id);\r\n    setContextMenu({\"x\":event.pageX,\"y\":event.pageY,\"display\":true,\"target\": event.target, \"nodeID\": node.id});\r\n    // addToSelect(node.id);\r\n  }\r\n\r\n  const Backdrop = () => {\r\n    return(\r\n      <div style={{\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        background: \"rgba(0,0,0,0.2)\",\r\n        zIndex: 1500\r\n      }}\r\n      onClick={() => setContextMenu({\"x\":null,\"y\":null,\"display\":false})}\r\n      onContextMenu={() => setContextMenu({\"x\":null,\"y\":null,\"display\":false})}\r\n      />\r\n    )\r\n  };\r\n\r\n  const contextMenuDisplay = (contextMenu) => {\r\n    if(contextMenu.display === false) return null;\r\n    // console.log(\"Displaying Context Menu\");\r\n    // console.log(contextMenu);\r\n\r\n    // console.log(contextMenu.target.firstChild.data);\r\n    // console.log(contextMenu.target);\r\n    // console.log(JSON.parse(contextMenu.target.dataset.selectvalue));\r\n    // console.log(contextMenu.target.dataset.selectvalue.model);\r\n    return(\r\n      <div>\r\n        <Overlay target={contextMenu.target} show={contextMenu.display} placement=\"right-start\">\r\n          <div style={{zIndex:1051}}>\r\n            <Table bordered variant=\"dark\">\r\n              <tbody>\r\n                <tr>\r\n                  <td onClick={() => history.push(\"/catalog/\"+contextMenu.nodeID)}>\r\n                    Open Model in Current Tab\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td onClick={() => window.open('/catalog/'+contextMenu.nodeID)}>\r\n                    Open Model in New Tab\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Overlay>\r\n        <Backdrop show={contextMenu.display}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"layoutflow lineagebox\">\r\n      <ReactFlowProvider>\r\n        <ReactFlow\r\n          elements={elements}\r\n          connectionLineType=\"smoothstep\"\r\n          onLoad={onLoad}\r\n          onNodeContextMenu={onNodeRightClick}\r\n          minZoom=\"0.1\"\r\n        >\r\n            <MiniMap />\r\n        </ReactFlow>\r\n      </ReactFlowProvider>\r\n      {contextMenuDisplay(contextMenu)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LayoutFlow;\r\n\r\n","export async function getModel(modelNodeId, user) {\r\n    const response = await fetch('/api/v1/models/' + modelNodeId, {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","export async function getModelTree(user) {\r\n    const response = await fetch('/api/v1/model_tree', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response.json();\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport {Container, Collapse, Row, Col, Tabs, Tab, Accordion, Card, Button, Modal } from 'react-bootstrap';\r\nimport { Drawer, } from 'react-bootstrap-drawer';\r\nimport '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-bootstrap-drawer/lib/style.css';\r\nimport  LayoutFlow  from './Lineage';\r\nimport { getModel } from '../services/getModel';\r\nimport { getModelTree } from '../services/getModelTree';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport TreeMenu from 'react-simple-tree-menu';\r\nimport 'react-simple-tree-menu/dist/main.css';\r\nimport Select from 'react-select'\r\nimport chroma from 'chroma-js';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\nexport default function Catalog (props) {\r\n  let history = useHistory();\r\n  const [catalogModel, setCatalogModel] = useState({});\r\n  const [rawModelTree, setRawModelTree] = useState();\r\n  const [modelTree, setModelTree] = useState();\r\n  const treeRef = useRef();\r\n  let { path, url } = useRouteMatch();\r\n  function catalogDescription()  {\r\n    if(catalogModel.description) {\r\n      return catalogModel.description;\r\n    } else {\r\n      return null;\r\n    };\r\n  }\r\n  useEffect(() => {\r\n    getModelTree(props.user)\r\n      .then(response => {\r\n        if(!response.error) {\r\n          setRawModelTree(response);\r\n          setModelTree(RecurseFullTree(response));\r\n        }\r\n      })\r\n  }, []);\r\n\r\n  function catalogDependsOn() {\r\n    // console.log(\"catalogModel.depends_on\");\r\n    // console.log(catalogModel.depends_on);\r\n\r\n    const ancestorModels = () => {\r\n      if(!catalogModel.depends_on) return null;\r\n      // console.log(\"found ancestors\");\r\n      return catalogModel.depends_on.nodes.map((value,index) => {\r\n        // console.log(value);\r\n        var ancestorClickEvent = (e) => {e.preventDefault(); history.push(\"/catalog/\"+value);};\r\n        return(\r\n          <div key={\"catalogDependsOnModel\"+index} title={value}>\r\n            {index===0?(<b>Models:<br/></b>):null}\r\n            <a href=\"#\" onClick={ancestorClickEvent}>{value.split(\".\").pop()}</a>\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n    const ancestorMacros = () => {\r\n      if(!catalogModel.depends_on) return null;\r\n      return catalogModel.depends_on.macros.map((value,index) => {\r\n        return(\r\n          <div key={\"catalogDependsOnMacro\"+index} title={value}>\r\n            {index===0?(<b>Macros:<br/></b>):null}\r\n            {value.split(\".\").pop()}\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n        {ancestorModels()}\r\n        {ancestorMacros()}\r\n      </>\r\n    )\r\n  }\r\n\r\n  function catalogDependencies() {\r\n    // console.log(\"catalogModel.referenced_by\");\r\n    // console.log(catalogModel.referenced_by);\r\n\r\n    const dependentModels = () => catalogModel.referenced_by.map((value,index) => {\r\n      var dependentClickEvent = (e) => {e.preventDefault(); history.push(\"/catalog/\"+value);};\r\n      return(\r\n        <div key={\"catalogDependentModel\"+index} title={value}>\r\n          {index===0?(<b>Models:<br/></b>):null}\r\n          <a href=\"#\" onClick={dependentClickEvent}>{value.split(\".\").pop()}</a>\r\n        </div>\r\n      )\r\n    });\r\n    return (\r\n      <>\r\n        {dependentModels()}\r\n      </>\r\n    )\r\n  }\r\n\r\n  function nodeContributors() {\r\n    // console.log(\"catalogModel.referenced_by\");\r\n    // console.log(catalogModel.referenced_by);\r\n\r\n    const nodeContributorMap = () => catalogModel.all_contributors.map((value,index) => {\r\n      return(\r\n        <div key={\"nodeContributor\"+index} title={value}>\r\n          {index===0?(<b>Contributors:<br/></b>):null}\r\n          {value}\r\n        </div>\r\n      )\r\n    });\r\n\r\n    if(catalogModel.all_contributors.length > 1) {\r\n      return (\r\n        <>\r\n          {nodeContributorMap()}\r\n        </>\r\n      )\r\n    } else {\r\n      return null;\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  function nodeHistory() {\r\n    // console.log(\"catalogModel.referenced_by\");\r\n    // console.log(catalogModel.referenced_by);\r\n    const fileCommits = () => catalogModel.all_commits.map((value,index) => {\r\n      return(\r\n        <tr key={\"catalogFileCommit \"+index} title={value.hash}>\r\n          <td title={value.authorDate}>\r\n            {value.authorDateRel}\r\n          </td>\r\n          <td>\r\n            {value.authorName}\r\n          </td>\r\n          <td>\r\n            <a href={value.originURL !== null?value.originURL:null} target=\"_blank\">\r\n              {value.subject}\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n    return (\r\n      <>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">\r\n                Date\r\n              </th>\r\n              <th scope=\"col\">\r\n                Author\r\n              </th>\r\n              <th scope=\"col\">\r\n                Commit Message\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {fileCommits()}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    )\r\n  }\r\n\r\n  function catalogColumns() {\r\n\r\n    const columnRows = () => {\r\n      return Object.entries(catalogModel.columns).map((value,index) => {\r\n        const options = [\r\n          { value: 'not_null', label: 'Not Null', \"column\": value[1].name, \"color\": \"#FF0000\"},\r\n          { value: 'unique', label: 'Unique', \"column\": value[1].name, \"color\": \"#FF0000\"},\r\n          // { value: 'relationships', label: 'Relationship', \"column\": value[1].name}\r\n        ]\r\n\r\n        const colourStyles = {\r\n          control: styles => ({ ...styles, backgroundColor: 'white' }),\r\n          option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n            const color = chroma(data.color);\r\n            return {\r\n              ...styles,\r\n              backgroundColor: isDisabled\r\n                ? null\r\n                : isSelected\r\n                ? data.color\r\n                : isFocused\r\n                ? color.alpha(0.1).css()\r\n                : null,\r\n              color: isDisabled\r\n                ? '#ccc'\r\n                : isSelected\r\n                ? chroma.contrast(color, 'white') > 2\r\n                  ? 'white'\r\n                  : 'black'\r\n                : data.color,\r\n              cursor: isDisabled ? 'not-allowed' : 'default',\r\n        \r\n              ':active': {\r\n                ...styles[':active'],\r\n                backgroundColor:\r\n                  !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\r\n              },\r\n            };\r\n          },\r\n          multiValue: (styles, { data }) => {\r\n            const color = chroma(data.color);\r\n            return {\r\n              ...styles,\r\n              backgroundColor: color.alpha(0.1).css(),\r\n            };\r\n          },\r\n          multiValueLabel: (styles, { data }) => ({\r\n            ...styles,\r\n            color: data.color,\r\n          }),\r\n          multiValueRemove: (styles, { data }) => ({\r\n            ...styles,\r\n            color: data.color,\r\n            ':hover': {\r\n              backgroundColor: data.color,\r\n              color: 'white',\r\n            },\r\n          }),\r\n        };\r\n\r\n        function formatTests(tests) {\r\n          var currentTests = []\r\n          for(var thisTest in tests) {\r\n            var testSeverityColor = \"#000000\";\r\n            var testType = \"\";\r\n            var testLabel = \"\";\r\n            if(value[1].tests[thisTest].severity === \"ERROR\") {\r\n              testSeverityColor = \"#FF0000\";\r\n            } else if(value[1].tests[thisTest].severity === \"WARNING\") {\r\n              testSeverityColor = \"#FFFF00\";\r\n            }\r\n            if(value[1].tests[thisTest].type === \"relationships\") {\r\n              testType = \"relationships\";\r\n              testLabel = (<span title={value[1].tests[thisTest].related_model + \".\" + value[1].tests[thisTest].related_field}>Relationship</span>);\r\n            } else if(value[1].tests[thisTest].type === \"not_null\") {\r\n              testType = \"not_null\";\r\n              testLabel = \"Not Null\";\r\n            } else if(value[1].tests[thisTest].type === \"unique\") {\r\n              testType = \"unique\";\r\n              testLabel = \"Unique\";\r\n            }\r\n            currentTests.push({\"value\": testType, \"label\": testLabel, \"color\": testSeverityColor})\r\n          }\r\n        return currentTests;\r\n        }\r\n\r\n        function testChanged(testValue, testAction) {\r\n          // console.log(testValue);\r\n          // console.log(testAction);\r\n          // console.log(value);\r\n          // console.log(catalogModel);\r\n          var allTests = []\r\n          if(testAction.action === \"select-option\") {\r\n            var newTest = {};\r\n            if(testAction.option.value === \"unique\" || testAction.option.value === \"not_null\") {\r\n              // TODO: push test to column.tests\r\n              newTest = {\"type\": testAction.option.value, \"severity\": \"ERROR\"};\r\n              allTests.push(testAction.option.value)\r\n            } else if(testAction.option.value === \"relationships\") {\r\n              // TODO: push test to column.tests\r\n              \r\n              // allTests.push({[testAction.option.value]: {\r\n              //   \"to\": \"ref('\" + newTest.related_model + \"')\",\r\n              //   \"field\": newTest.related_field\r\n              // }});\r\n            }\r\n            setCatalogModel({\r\n              ...catalogModel,\r\n              columns: {\r\n                ...catalogModel.columns,\r\n                [testAction.option.column]: {\r\n                  ...catalogModel.columns[testAction.option.column],\r\n                  tests: [\r\n                    ...catalogModel.columns[testAction.option.column].tests,\r\n                    newTest\r\n                  ]\r\n                },\r\n              }\r\n            })\r\n            for(var thisTest in catalogModel.columns[value[0]].tests) { //add existing tests to allTests\r\n              if(catalogModel.columns[value[0]].tests[thisTest].type === \"relationships\") {\r\n                allTests.push({[catalogModel.columns[value[0]].tests[thisTest].type]: {\r\n                  \"to\": \"ref('\" + catalogModel.columns[value[0]].tests[thisTest].related_model + \"')\",\r\n                  \"field\": catalogModel.columns[value[0]].tests[thisTest].related_field}})\r\n              } else {\r\n                allTests.push(catalogModel.columns[value[0]].tests[thisTest].type)\r\n              } \r\n            }\r\n          } else if(testAction.action === \"remove-value\") {\r\n            let removeItemIndex = catalogModel.columns[value[0]].tests.indexOf(testAction.removedValue.value);\r\n            var newTests = [\r\n              ...catalogModel.columns[value[0]].tests.slice(0,removeItemIndex), ...catalogModel.columns[value[0]].tests.slice(0,removeItemIndex+1)\r\n            ];\r\n            setCatalogModel({\r\n              ...catalogModel,\r\n              columns: {\r\n                ...catalogModel.columns,\r\n                [value[0]]: {\r\n                  ...catalogModel.columns[value[0]],\r\n                  tests: newTests\r\n                },\r\n              }\r\n            })\r\n            for(var thisTest in newTests) { //add existing tests to allTests\r\n              if(newTests[thisTest].type === \"relationships\") {\r\n                allTests.push({[newTests[thisTest].type]: {\r\n                  \"to\": \"ref('\" + newTests[thisTest].related_model + \"')\",\r\n                  \"field\": newTests[thisTest].related_field}})\r\n              } else {\r\n                allTests.push(newTests[thisTest].type)\r\n              } \r\n            }\r\n          }\r\n          updateMetadataModel({\r\n            \"column\": value[0],\r\n            \"tests\": allTests,\r\n            \"target\": {\"dataset\": {\"metadatafield\": \"ColumnTest\"}}\r\n          });\r\n        };\r\n        return(\r\n          <tr key={\"columnRow\"+value[0]}>\r\n            <td className=\"catalogColumnName\">\r\n              {value[0].toLowerCase().replaceAll(\"_\",\"_\\u200b\")}\r\n            </td>\r\n            <td className=\"catalogColumnType\">\r\n              {value[1].type.toLowerCase()}\r\n            </td>\r\n            <td>\r\n              \r\n            <ContentEditable\r\n                  html={value[1].description}\r\n                  onBlur={updateMetadataModel}\r\n                  data-metadatafield=\"ColumnDescription\"\r\n                  className=\"catalogColumnDescription\"\r\n                  data-columnName={value[0].toLowerCase()}\r\n                  placeholder={\"Add a description\"}\r\n                />\r\n            </td>\r\n            <td style={{width:\"230px\"}}>\r\n              <Select \r\n                options={options}\r\n                value={formatTests(catalogModel.columns[value[0]].tests)}\r\n                isMulti\r\n                onChange={testChanged}\r\n                styles={colourStyles}\r\n                menuPortalTarget={document.body}\r\n              />\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n    if(Object.keys(catalogModel.columns).length > 0) { //if this has columns\r\n      return(\r\n        <div className=\"row mt-md-3\">\r\n          <div className=\"col\">\r\n            <table className=\"table table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    Name\r\n                  </th>\r\n                  <th>\r\n                    Type\r\n                  </th>\r\n                  <th>\r\n                    Description\r\n                  </th>\r\n                  <th>\r\n                    Tests\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {columnRows()}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(\r\n        <div className=\"row\">\r\n          <div className=\"col col-md-auto\">\r\n            This model does not appear to contain any rows.\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n\r\n  const RecurseFullTree = (data) => {\r\n    var fullResults = [RecurseTree2(data,\"model\",\"model\")].concat([RecurseTree2(data,\"source\",\"source\")]);\r\n    return fullResults;\r\n  }\r\n  const RecurseTree2 = (data, lastItem, modelPath) => {\r\n    var items = [];\r\n    var loopVar;\r\n    if(lastItem) {\r\n      loopVar = data[lastItem];\r\n    } else {\r\n      loopVar = data;\r\n    }\r\n    if(Object.keys(loopVar) && Object.keys(loopVar) && Object.keys(loopVar).length > 0) {\r\n      for(var item in loopVar) {\r\n        if(modelPath + \".\" + item === catalogModel.nodeID) {\r\n          console.log(\"matched\");\r\n          console.log(modelPath + \".\" + item);\r\n          items.unshift(RecurseTree2(loopVar, item, modelPath + \".\" + item));\r\n        } else {\r\n          items.push(RecurseTree2(loopVar, item, modelPath + \".\" + item));\r\n        }\r\n      };\r\n      return(\r\n        {\"label\":lastItem, \"key\":modelPath, \"nodes\": items}\r\n      );\r\n    } else {\r\n      return(\r\n        {\"label\":lastItem, \"key\":modelPath}\r\n      );\r\n    };\r\n  };\r\n\r\n  function updateMetadataModel (e) {\r\n    var metadataBody = {};\r\n    switch(e.target.dataset.metadatafield) {\r\n      case \"Description\":\r\n        metadataBody = {\r\n          \"updateMethod\": \"yamlModelProperty\",\r\n          \"yaml_path\": catalogModel.yaml_path,\r\n          \"model_path\": catalogModel.model_path,\r\n          \"model\": catalogModel.name,\r\n          \"node_id\": catalogModel.nodeID,\r\n          \"property_name\": \"description\",\r\n          \"new_value\": e.target.innerText\r\n        }\r\n      break;\r\n      case \"Tags\":\r\n        if(e.target.innerText === \"None\") {\r\n          metadataBody = null;\r\n          break;\r\n        }\r\n        metadataBody = {\r\n          \"updateMethod\": \"yamlModelTags\",\r\n          \"yaml_path\": catalogModel.yaml_path,\r\n          \"model_path\": catalogModel.model_path,\r\n          \"model\": catalogModel.name,\r\n          \"node_id\": catalogModel.nodeID,\r\n          \"property_name\": \"tags\",\r\n          \"new_value\": e.target.innerText.split(',').map(function(item) { // Split tags by commas, and remove any spaces if any\r\n              return item.trim();\r\n            })\r\n        }\r\n      break;\r\n      case \"ColumnDescription\":\r\n        metadataBody = {\r\n          \"updateMethod\": \"yamlModelColumnProperty\",\r\n          \"yaml_path\": catalogModel.yaml_path,\r\n          \"model_path\": catalogModel.model_path,\r\n          \"model\": catalogModel.name,\r\n          \"node_id\": catalogModel.nodeID,\r\n          \"column\": e.target.dataset.columnname,\r\n          \"property_name\": \"description\",\r\n          \"new_value\": e.target.innerText\r\n        }\r\n      break;\r\n      case \"ColumnTest\":\r\n        metadataBody = {\r\n          \"updateMethod\": \"yamlModelColumnTest\",\r\n          \"yaml_path\": catalogModel.yaml_path,\r\n          \"model_path\": catalogModel.model_path,\r\n          \"model\": catalogModel.name,\r\n          \"node_id\": catalogModel.nodeID,\r\n          \"column\": e.column,\r\n          \"new_value\": e.tests\r\n        }\r\n      break;\r\n      default:\r\n        // console.log(\"updateMetadata: no switch case found\");\r\n    }\r\n    if(metadataBody) {\r\n      // console.log(this.props.user.token);\r\n      fetch('/api/v1/update_metadata', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Token ' + props.user.token,\r\n        },\r\n        body: JSON.stringify(metadataBody)\r\n      });\r\n    }\r\n  }\r\n\r\n  function lineageModal(lineage, selectModel) {\r\n    function LineageModal(lineage) {\r\n      const [show, setShow] = useState(false);\r\n    \r\n      const handleClose = () => setShow(false);\r\n      const handleShow = () => setShow(true);\r\n      // console.log(\"lineageModal\");\r\n      // console.log(lineage);\r\n    \r\n      return (\r\n        <>\r\n          <Button className=\"tealButton\" onClick={handleShow}>\r\n            Show Lineage\r\n          </Button>\r\n    \r\n          <Modal show={show} onHide={handleClose} size=\"xl\">\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>{catalogModel.name}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"lineagebox\">\r\n              <LayoutFlow className=\"lineagebox\" lineageArray={lineage}/>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n    return <LineageModal lineage={lineage}/>\r\n  }\r\n\r\n  function showCreatedBy() {\r\n    if(catalogModel.model_type===\"node\" && catalogModel.created_by) { \r\n      return(\r\n        <div className=\"row mt-md-3\">\r\n          <div className=\"col col-md-auto\">\r\n            Created: {catalogModel.created_by + (catalogModel.created_relative_date?\", \"+catalogModel.created_relative_date:null)} \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  }\r\n  \r\n  function getTreeRef(nodeID) {\r\n    if(nodeID) {\r\n      var concatPath = \"\";\r\n      var splitNodeID = nodeID.split(\".\")\r\n      for(var thisStep in splitNodeID) {\r\n        concatPath += nodeID.substring(0,nodeID.indexOf(splitNodeID[thisStep])+splitNodeID[thisStep].length) + \"/\"\r\n      }\r\n      var currentModelTreeRef = concatPath.slice(0,-1);\r\n      return currentModelTreeRef;\r\n    } else return null;\r\n    \r\n  }\r\n\r\n  function CatalogPage() {\r\n    let { catalogPage } = useParams();\r\n    // console.log(catalogPage);\r\n    if(Object.keys(catalogModel).length === 0 || catalogModel.nodeID !== catalogPage) {\r\n      getModel(catalogPage, props.user)\r\n        .then(response => {\r\n          // console.log(response)\r\n          if(!response.error) {\r\n            setCatalogModel(response);\r\n            if(rawModelTree) {\r\n              setModelTree(RecurseFullTree(rawModelTree));\r\n              // treeRef.current.resetOpenNodes(treeRef.current.state.openNodes,getTreeRef(catalogModel.nodeID));\r\n            }\r\n          }\r\n        });\r\n      return(<></>);\r\n    }\r\n    \r\n    \r\n    const tags = catalogModel.tags.length>0?catalogModel.tags.join(\", \"):null\r\n    return(\r\n      <Container className=\"catalogContainer display-block\">\r\n        <div className=\"row justify-content-md-left\">\r\n          <div className=\"col col-md-auto pr-md-3\">\r\n            <h3 className=\"mb-md-0\">{catalogModel.name.toLowerCase()}</h3>\r\n          </div>\r\n          <div className=\"col font-italic align-self-end pl-md-0\">\r\n            {catalogModel.materialization}\r\n          </div>\r\n          <div className=\"col align-self-end pl-md-0 text-right\">\r\n            tags: <i>\r\n              <ContentEditable\r\n                innerRef={tags}\r\n                html={tags}\r\n                onBlur={updateMetadataModel}\r\n                data-metadatafield=\"Tags\"\r\n                placeholder={\"Add comma-separated Tags\"}\r\n                style= {{display: \"inline\", minWidth: \"100px\"}}\r\n              />\r\n            </i>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-between pt-md-1\">\r\n          <div className=\"col col-md-auto\">\r\n            {catalogModel.database.toLowerCase()}.{catalogModel.schema.toLowerCase()}.{catalogModel.name.toLowerCase()}\r\n          </div>\r\n          <div className=\"col col-md-auto\">\r\n            {catalogModel.row_count?Number(catalogModel.row_count).toLocaleString()+\" rows\":null}\r\n          </div>\r\n        </div>\r\n        {showCreatedBy()}\r\n        <div className=\"row mt-md-3\">\r\n          <div className=\"col col-md-auto\">\r\n            <ContentEditable\r\n              innerRef={catalogModel.description}\r\n              html={catalogDescription()}\r\n              onBlur={updateMetadataModel}\r\n              data-metadatafield=\"Description\"\r\n              placeholder={\"Add a description\"}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-md-3\">\r\n          <div className=\"col col-md-auto\">\r\n            {lineageModal(catalogModel.lineage, props.selectModel)}\r\n          </div>\r\n        </div>\r\n        <Accordion className=\"mt-md-3\" defaultActiveKey=\"0\">\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                Columns\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <div className=\"container\">\r\n                {catalogColumns()}\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                SQL\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <div className=\"container\">\r\n                <div className=\"row mt-md-3 mb-md-3\">\r\n                  <div className=\"col col-md-auto\">\r\n                    <Tabs defaultActiveKey=\"raw\" id=\"uncontrolled-tab-example\" className=\"ml-md-1\">\r\n                      <Tab eventKey=\"raw\" title=\"raw SQL\" className=\"py-md-3 catalogSQL\">\r\n                        {catalogModel.raw_sql}\r\n                      </Tab>\r\n                      <Tab eventKey=\"processed\" title=\"processed SQL\" className=\"py-md-3 catalogSQL\">\r\n                        {catalogModel.compiled_sql}\r\n                      </Tab>\r\n                    </Tabs>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                Code Change History\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <div className=\"container\">\r\n                <div className=\"row mt-md-3 mb-md-3\">\r\n                  <div className=\"col col-md-auto\">\r\n                    {nodeContributors()}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mt-md-3 mb-md-3\">\r\n                  <div className=\"col col-md-auto\">\r\n                    {nodeHistory()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\r\n                Depends On\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"3\">\r\n              <div className=\"container\">\r\n                <div className=\"row mt-md-3 mb-md-3\">\r\n                  <div className=\"col col-md-auto\">\r\n                    {catalogDependsOn()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"4\">\r\n                Dependencies\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"4\">\r\n              <div className=\"container\">\r\n                <div className=\"row mt-md-3 mb-md-3\">\r\n                  <div className=\"col col-md-auto\">\r\n                    {catalogDependencies()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n      </Container>\r\n    )\r\n  }\r\n  \r\n  const NavigationDrawer = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const handleToggle = () => setOpen(!open);\r\n\r\n    var treeModelClick = (e) => {\r\n      if(e.hasNodes === false) {\r\n        history.push(\"/catalog/\"+e.key.split(\"/\").pop());\r\n      } else {\r\n        treeRef.current.resetOpenNodes(treeRef.current.state.openNodes,getTreeRef(catalogModel.nodeID));\r\n        treeRef.current.toggleNode(e.key);\r\n      }\r\n    };\r\n\r\n    function currentOpenNodes(nodeID) {\r\n      if(nodeID) {\r\n        var openNodes = [];\r\n        var splitNodeID = nodeID.split(\".\")\r\n        for(var thisStep in splitNodeID) {\r\n          openNodes.push(getTreeRef(nodeID.substring(0,nodeID.indexOf(splitNodeID[thisStep])+splitNodeID[thisStep].length)))\r\n        }\r\n        return openNodes;\r\n    } else return null;\r\n    }\r\n    return (\r\n      <Drawer { ...props }>\r\n        <Drawer.Toggle onClick={ handleToggle } />\r\n  \r\n        <Collapse in={ open }>\r\n          <Drawer.Overflow>\r\n              <Drawer.Nav>\r\n                <TreeMenu\r\n                  data={modelTree}\r\n                  initialActiveKey={getTreeRef(catalogModel.nodeID)}\r\n                  initialOpenNodes={currentOpenNodes(catalogModel.nodeID)}\r\n                  onClickItem={treeModelClick}\r\n                  ref={treeRef}\r\n                  hasSearch={false}\r\n                >\r\n                </TreeMenu>\r\n              </Drawer.Nav>\r\n          </Drawer.Overflow>\r\n        </Collapse>\r\n      </Drawer>\r\n    );\r\n  };\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"flex-xl-nowrap\">\r\n          <Col as={ NavigationDrawer } xs={ 12 } md={ 4 } lg={ 3 } />\r\n          <Col>\r\n            <Switch>\r\n              <Route exact path = {path}>\r\n                \r\n              </Route>\r\n              <Route path={`${path}/:catalogPage`}>\r\n                <CatalogPage/>\r\n              </Route>\r\n            </Switch>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n}\r\n","export async function getSSH(user) {\r\n    const response = await fetch('/api/v1/get_ssh', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response;\r\n}","export async function getGenerateSSH(user) {\r\n    const response = await fetch('/api/v1/generate_ssh', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response;\r\n}","export async function getOpenGit(user) {\r\n    const response = await fetch('/api/v1/open_git_connection', {headers: {Authorization: \"Token \" + user.token}});\r\n    return await response;\r\n}","export async function getCheckDBTConnection(user) {\r\n    // console.log(user);\r\n    const response = await fetch('/api/v1/check_dbt_connection', {\r\n        method: 'GET', \r\n        headers: {\r\n                Authorization: \"Token \" + user.token\r\n            }\r\n    })\r\n    return await response;\r\n}","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport {Collapse, Container, Row, Col } from 'react-bootstrap';\r\nimport { io } from \"socket.io-client\";\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import JsonFilenameInput from './components/JsonFilenameInput'\r\nimport Login from './components/Login';\r\nimport Config from './components/Config';\r\nimport ModelBuilder from './components/ModelBuilder';\r\nimport { NavBar } from './components/NavBar';\r\nimport Catalog from './components/Catalog';\r\nimport { getSSH } from \"./services/getSSH\";\r\nimport { getUserConfig } from \"./services/getUserConfig\";\r\nimport { getGenerateSSH } from \"./services/getGenerateSSH\";\r\nimport { getOpenGit } from \"./services/getOpenGit\";\r\nimport { getCheckDBTConnection } from \"./services/getCheckDBTConnection\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.modelBuilder = React.createRef();\r\n    var hostVersion = '';\r\n    var tempUser = {};\r\n    if(window.location.port === '8080') { // python version\r\n      // console.log('python')\r\n      hostVersion = 'python'\r\n      tempUser = {\"token\":\"\"}\r\n    } else {\r\n      // console.log('node')\r\n      hostVersion = 'node'\r\n      if(sessionStorage.getItem(\"user\")) {\r\n        getUserConfig(JSON.parse(sessionStorage.getItem(\"user\")).user)\r\n        .then(response => {\r\n          this.setState({\"userConfig\": response.user})\r\n        });\r\n        tempUser = JSON.parse(sessionStorage.getItem(\"user\")).user;\r\n        \r\n      }\r\n    }\r\n    document.title = 'Tāngata';\r\n    this.state = {\r\n      appState: \"Catalog\",\r\n      \"hostVersion\": hostVersion,\r\n      modelBuilder: {\r\n        \"models\": [{\"name\": \"humans\"},{\"name\":\"abductions\"}],\r\n        \"logState\": false,\r\n        \"openSQLPanel\": false,\r\n        \"addModel\": {}\r\n      },\r\n      contextMenuOpen: false,\r\n      catalogModel: {},\r\n      sshKey: \"\",\r\n      user: tempUser,\r\n      userConfig: {},\r\n      userMessages: []\r\n    };\r\n  }\r\n  \r\n  \r\n\r\n  handleAllClicks = (e) => {\r\n    // console.log(\"handleAllClicks\");\r\n    if(this.state.contextMenuOpen===true) {\r\n      this.setState({contextMenuOpen: false});\r\n    }\r\n  };\r\n\r\n  // addModelToModelBuilder = (nodeId) => {\r\n\r\n  //   this.setState({modelBuilder: {...this.state.modelBuilder, \"addModel\": \r\n  // }\r\n\r\n  // selectModel = (nodeId) => {\r\n  //   // console.log(\"selectModel\");\r\n  //   // console.log(nodeId);\r\n  //   getModel(nodeId, this.state.user)\r\n  //     .then(response => {\r\n  //       // console.log(response)\r\n  //       if(!response.error) {\r\n  //         if(this.state.appState === \"Catalog\") {\r\n  //           this.setState({\"catalogModel\":response})\r\n  //         }\r\n  //       }\r\n        \r\n  //     });\r\n  // }\r\n\r\n  openContextMenu = (openState) => {\r\n    // console.log(\"openContextMenu\");\r\n    if(openState===true) {\r\n      this.setState({contextMenuOpen: true});\r\n    } else {\r\n      this.setState({contextMenuOpen: false});\r\n    }\r\n  }\r\n\r\n  logState = () => {\r\n    this.setState({\"logState\": true})\r\n  }\r\n  openSQLPanel = () => {\r\n    this.setState({\"openSQLPanel\": true})\r\n  }\r\n\r\n  addModel = () => {\r\n    // console.log(\"Not yet implemented\"); //TODO: add input model from catalog\r\n  }\r\n\r\n  openModelBuilder = () => {\r\n    this.setState({\"appState\": \"ModelBuilder\"})\r\n  }\r\n\r\n  openCatalog = () => {\r\n    this.setState({\"appState\": \"Catalog\"})\r\n  }\r\n\r\n  openConfig = () => {\r\n    this.setState({\"appState\": \"Config\"})\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(this.state.logState === true) {\r\n      console.log(\"App State:\");\r\n      console.log(this.state);\r\n      this.setState({\"logState\": false})\r\n    }\r\n    if(this.state.openSQLPanel === true) this.setState({\"openSQLPanel\": false});\r\n  }\r\n  // componentDidMount() {\r\n  //   if(window.location.port === '8080') { // python version\r\n  //     console.log('python')\r\n  //     this.setState({\"hostVersion\": \"python\"})\r\n  //   } else {\r\n  //     console.log('node')\r\n  //     this.setState({\"hostVersion\": \"node\"})\r\n  //   }\r\n  //   if(Object.keys(this.state.user).length === 0) {\r\n  //     if(sessionStorage.getItem(\"user\")) {\r\n  //       getUserConfig(JSON.parse(sessionStorage.getItem(\"user\")).user)\r\n  //       .then(response => {\r\n  //         this.setUserConfig(response.user);\r\n  //       });\r\n  //       this.setUser(JSON.parse(sessionStorage.getItem(\"user\")))\r\n  //     }\r\n      \r\n  //   }\r\n  //   document.title = 'Tāngata';\r\n  // }\r\n\r\n  setUser = (newUser) => {\r\n    // console.log(\"setUser\");\r\n    this.setState({\"user\": newUser.user})\r\n  }\r\n  setUserConfig = (newUserConfig) => {\r\n    this.setState({\"userConfig\": newUserConfig})\r\n  }\r\n\r\n  setSSHKey = () => {\r\n    getSSH(this.state.user)\r\n    .then(response=> response.text())\r\n    .then(responseText => {\r\n      // console.log(responseText);\r\n      this.setState({\"sshKey\": responseText});\r\n    });\r\n  }\r\n\r\n  generateSSHKey = () => {\r\n    getGenerateSSH(this.state.user)\r\n    .then(response=> response.text())\r\n    .then(responseText => {\r\n      this.setState({\"sshKey\": responseText});\r\n    });\r\n  }\r\n\r\n  openGitConnection = () => {\r\n    getOpenGit(this.state.user)\r\n    .then(response=> response.text())\r\n    .then(responseText => {\r\n      return responseText;\r\n    });\r\n  }\r\n  checkDBTConnection = () => {\r\n    getCheckDBTConnection(this.state.user)\r\n    .then(response=> {\r\n      // console.log(response);\r\n      if(response.ok === true) {\r\n        // console.log(\"Success\");\r\n        toast.success(\"DBT_ Connection Successful.\");\r\n      } else {\r\n        response.text()\r\n        .then(responseText=> {\r\n          // console.log(response);\r\n          // console.log(responseText);\r\n          toast.error(\"DBT_ Connection Failed: \" + responseText, {\r\n            autoClose: 10000,\r\n            });\r\n          // toast(response);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  toastSender = (message, toastType) => {\r\n    if(toastType === \"error\") {\r\n      toast.error(message);\r\n    } else if (toastType === \"success\") {\r\n      toast.success(message);\r\n    } else {\r\n      toast(message);\r\n    }\r\n  }\r\n  \r\n  clearUserMessages = () => {\r\n    this.setState({\"userMessages\": []})\r\n  } \r\n\r\n  LoginRoute = ({ children, ...rest }) => {\r\n    // console.log(this.state.hostVersion);\r\n    // console.log(Object.keys(this.state.user).length)\r\n    // console.log(rest);\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          (this.state.hostVersion === 'python' || Object.keys(this.state.user).length > 0) ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\"\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n  \r\n  render() {\r\n    // console.log(window.location)\r\n    // console.log(window.location.port)\r\n    var socket = null\r\n    socket = io({\r\n      auth: (cb) => {\r\n        cb({\r\n          token: this.state.user\r\n        });\r\n      }\r\n    });\r\n    socket.on(\"connect\", () => {\r\n      // either with send()\r\n      socket.send(\"Hello!\");\r\n    });\r\n    socket.on(\"toast\", (data) => {\r\n      // console.log(\"Toast received\");\r\n      this.toastSender(data.message, data.type);\r\n    });\r\n\r\n    return (\r\n      <Router>\r\n        <div id=\"main\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/catalog\"/>\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <Login\r\n                setUser={this.setUser}\r\n                setUserConfig={this.setUserConfig}\r\n                user={this.state.user}\r\n                appState={this.state.appState}\r\n              />\r\n            </Route>\r\n            <this.LoginRoute path=\"/catalog\">\r\n              <NavBar\r\n                addModel={this.addModel}\r\n                hostVersion={this.state.hostVersion}\r\n                logState={this.logState}\r\n                openSQLPanel={this.openSQLPanel}\r\n                openModelBuilder={this.openModelBuilder}\r\n                openCatalog={this.openCatalog}\r\n                openConfig={this.openConfig}\r\n                appState={this.state.appState}\r\n                openContextMenu={this.openContextMenu}\r\n                contextMenuOpen={this.state.contextMenuOpen}\r\n                selectModel={this.selectModel}\r\n                user={this.state.user}\r\n                setUser={this.setUser}\r\n                userConfig={this.state.userConfig}\r\n                setUserConfig={this.setUserConfig}\r\n              />\r\n              <div className=\"body\">\r\n                <Catalog\r\n                  appState={this.state.appState}\r\n                  catalogModel={this.state.catalogModel}\r\n                  selectModel={this.selectModel}\r\n                  user={this.state.user}\r\n                  hostVersion={this.state.hostVersion}\r\n                />\r\n              </div>\r\n            </this.LoginRoute>\r\n            <this.LoginRoute path=\"/config\">\r\n              <NavBar\r\n                addModel={this.addModel}\r\n                logState={this.logState}\r\n                openSQLPanel={this.openSQLPanel}\r\n                openModelBuilder={this.openModelBuilder}\r\n                openCatalog={this.openCatalog}\r\n                openConfig={this.openConfig}\r\n                appState={this.state.appState}\r\n                openContextMenu={this.openContextMenu}\r\n                contextMenuOpen={this.state.contextMenuOpen}\r\n                selectModel={this.selectModel}\r\n                user={this.state.user}\r\n                setUser={this.setUser}\r\n                userConfig={this.state.userConfig}\r\n                setUserConfig={this.setUserConfig}\r\n              />\r\n              <div className=\"body\">\r\n                <Config\r\n                  appState={this.state.appState}\r\n                  user={this.state.user}\r\n                  userConfig={this.state.userConfig}\r\n                  setUserConfig={this.setUserConfig}\r\n                  sshKey={this.state.sshKey}\r\n                  setSSHKey={this.setSSHKey}\r\n                  generateSSHKey={this.generateSSHKey}\r\n                  openGitConnection={this.openGitConnection}\r\n                  checkDBTConnection={this.checkDBTConnection}\r\n                  toastSender={this.toastSender}\r\n                />\r\n              </div>\r\n            </this.LoginRoute>\r\n          </Switch>\r\n          <ToastContainer\r\n            position=\"bottom-center\"\r\n            autoClose={8000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}